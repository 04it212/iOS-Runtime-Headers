/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore
 */

@class NSTimer, IMHandle, IMAccount, NSData, IMPair, IMAVChatParticipant, NSError, NSDate, NSDictionary, NSObject<OS_dispatch_queue>, IMAVChatFeature, NSArray, NSString, NSMutableDictionary, NSMutableArray, NSNumber;

@interface IMAVChat : NSObject <IMSystemMonitorListener> {
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    NSString *_GUID;
    BOOL _Q8IrisOpen;
    BOOL __isCallUpgrade;
    unsigned int _addStatus;
    int _addableParticipants;
    BOOL _airplaneModeEnabled;
    IMAVChatFeature *_ard;
    IMAVChatFeature *_auxVideo;
    NSNumber *_backCameraCaptureTime;
    NSTimer *_breakBeforeMakeTimeoutTimer;
    int _callID;
    NSString *_callStatisticsGUID;
    NSDictionary *_callerProperties;
    id _conferenceController;
    NSString *_conferenceID;
    NSData *_connectData;
    double _connectionTimeoutTime;
    NSTimer *_connectionTimeoutTimer;
    int _connectionType;
    NSNumber *_dataDownloaded;
    BOOL _dataIn;
    BOOL _dataOut;
    NSNumber *_dataRate;
    NSNumber *_dataUploaded;
    NSDate *_dateConnected;
    NSDate *_dateCreated;
    NSDate *_dateEnded;
    NSDate *_dateReceivedRelayInitiate;
    NSDate *_dateReceivedRelayUpdate;
    NSDate *_dateStartedConnecting;
    BOOL _didRemoteMute;
    BOOL _didRemotePause;
    NSError *_error;
    NSDictionary *_errorDict;
    NSMutableDictionary *_extraServerContext;
    NSTimer *_firstFrameTimeoutTimer;
    NSNumber *_frontCameraCaptureTime;
    BOOL _hasGatheredInfo;
    BOOL _hasPendingAccept;
    BOOL _hasPendingInit;
    BOOL _hasReceivedFirstFrame;
    IMHandle *_initiator;
    NSDate *_interruptionBegan;
    double _invitationTimeoutTime;
    NSTimer *_inviteTimeoutTimer;
    NSDate *_inviteTimeoutTimerStart;
    BOOL _isAudioInterrupted;
    BOOL _isCaller;
    BOOL _isCounterProposalConnect;
    BOOL _isListening;
    BOOL _isTerminating;
    BOOL _isVideo;
    BOOL _isVideoInterrupted;
    } _landscapeAspectRatios;
    unsigned int _lastPostedState;
    unsigned int _localNetworkConnectionType;
    IMAVChatParticipant *_localParticipant;
    unsigned int _localState;
    NSNumber *_natType;
    BOOL _needsAudioRestart;
    BOOL _needsVideoRestart;
    NSString *_participantNames;
    BOOL _participantOrderFinal;
    NSMutableArray *_participants;
    IMPair *_pendingPreemptiveRelayInitate;
    NSDictionary *_pingTestResults;
    } _portraitAspectRatios;
    NSObject<OS_dispatch_queue> *_queue;
    IMAVChatFeature *_recorder;
    unsigned int _remoteNetworkConnectionType;
    unsigned int _sessionID;
    BOOL _suppressBeginChat;
    NSMutableDictionary *_unknownPartyStates;
    BOOL _usingCoercedIDs;
}

@property(retain) NSString * GUID;
@property(readonly) BOOL _allParticipantsUsingICE;
@property(setter=_setBackCameraCaptureTime:,retain) NSNumber * _backCameraCaptureTime;
@property(readonly) NSNumber * _callDuration;
@property(setter=_setCallStatisticsGUID:,retain) NSString * _callStatisticsGUID;
@property(setter=_setConferenceController:) id _conferenceController;
@property(setter=_setConnectData:,retain) NSData * _connectData;
@property(readonly) NSNumber * _connectDuration;
@property(setter=_setConnectionType:) int _connectionType;
@property(readonly) NSNumber * _currentNatType;
@property(setter=_setDataDownloaded:,retain) NSNumber * _dataDownloaded;
@property(setter=_setDataRate:,retain) NSNumber * _dataRate;
@property(setter=_setDataUploaded:,retain) NSNumber * _dataUploaded;
@property(readonly) NSDictionary * _extraServerContext;
@property(setter=_setFrontCameraCaptureTime:,retain) NSNumber * _frontCameraCaptureTime;
@property(setter=_setHasPendingAccept:) BOOL _hasPendingAccept;
@property(setter=_setHasPendingInit:) BOOL _hasPendingInit;
@property(setter=_setInterruptionBegan:,retain) NSDate * _interruptionBegan;
@property(setter=_setIsAudioInterrupted:) BOOL _isAudioInterrupted;
@property(setter=_setIsCallUpgrade:) BOOL _isCallUpgrade;
@property(setter=_setIsCounterProposalConnect:) BOOL _isCounterProposalConnect;
@property(setter=_setIsListening:) BOOL _isListening;
@property(readonly) BOOL _isTeminating;
@property(setter=_setIsVideoInterrupted:) BOOL _isVideoInterrupted;
@property(setter=_setLocalNetworkConnectionType:) unsigned int _localNetworkConnectionType;
@property(setter=_setNatType:,retain) NSNumber * _natType;
@property(setter=_setNeedsAudioRestart:) BOOL _needsAudioRestart;
@property(setter=_setNeedsVideoRestart:) BOOL _needsVideoRestart;
@property(setter=_setPingTestResults:,retain) NSDictionary * _pingTestResults;
@property(setter=_setQueue:) NSObject<OS_dispatch_queue> * _queue;
@property(readonly) NSNumber * _relayConnectDuration;
@property(readonly) NSNumber * _remoteNatType;
@property(setter=_setRemoteNetworkConnectionType:) unsigned int _remoteNetworkConnectionType;
@property(readonly) BOOL _usesRelay;
@property(setter=_setUsingCoercedIDs:) BOOL _usingCoercedIDs;
@property(readonly) IMAccount * account;
@property(readonly) unsigned int addStatus;
@property(readonly) int addableParticipants;
@property BOOL allowsVideo;
@property int callID;
@property(setter=_setCallerProperties:,retain) NSDictionary * callerProperties;
@property unsigned int cameraOrientation;
@property unsigned int cameraType;
@property(readonly) BOOL canUseRelay;
@property(retain) NSString * conferenceID;
@property double connectionTimeoutTime;
@property(readonly) BOOL dataIn;
@property(readonly) BOOL dataOut;
@property(readonly) NSDate * dateConnected;
@property(readonly) NSDate * dateCreated;
@property(setter=_setDateEnded:,retain) NSDate * dateEnded;
@property(readonly) BOOL didRemoteMute;
@property(readonly) BOOL didRemotePause;
@property(readonly) int endedError;
@property(readonly) unsigned int endedReason;
@property(readonly) NSDictionary * errorDictionary;
@property(readonly) BOOL hasReceivedFirstFrame;
@property(retain) IMHandle * initiatorIMHandle;
@property(readonly) IMAVChatParticipant * initiatorParticipant;
@property double invitationTimeoutTime;
@property(readonly) BOOL isActive;
@property(setter=_setIsCaller:) BOOL isCaller;
@property(readonly) BOOL isChatMute;
@property(readonly) BOOL isChatPaused;
@property(setter=setMute:) BOOL isMute;
@property(setter=setPaused:) BOOL isPaused;
@property(readonly) BOOL isQ8IrisOpen;
@property(setter=setRemoteMute:) BOOL isRemoteMute;
@property(setter=setRemotePaused:) BOOL isRemotePaused;
@property BOOL isSendingAudio;
@property BOOL isSendingVideo;
@property(readonly) BOOL isStateFinal;
@property(setter=_setIsVideo:) BOOL isVideo;
@property(readonly) IMAVChatParticipant * localParticipant;
@property void* localVideoBackLayer;
@property void* localVideoLayer;
@property BOOL lockCamera;
@property(readonly) int numActiveParticipants;
@property(readonly) IMHandle * otherIMHandle;
@property(readonly) NSString * participantNames;
@property(setter=_setParticipantOrderFinal:) BOOL participantOrderFinal;
@property(retain) NSArray * participants;
@property(readonly) NSArray * remoteParticipants;
@property unsigned int sessionID;
@property unsigned int state;
@property(setter=_setSuppressBeginChat:) BOOL suppressBeginChat;

+ (id)_avChatArray;
+ (id)acceptedChats;
+ (id)activeChat;
+ (id)alloc;
+ (id)allowedClassesForArchives;
+ (id)avChatConnectingFromIMHandle:(id)arg1;
+ (id)avChatInvitedByIMHandle:(id)arg1 orConferenceID:(id)arg2;
+ (id)avChatWaitingForReplyFromIMHandle:(id)arg1 orConferenceID:(id)arg2;
+ (id)avChatWithConferenceID:(id)arg1;
+ (id)avChatWithMatchingIMHandles:(id)arg1 video:(BOOL)arg2;
+ (id)bestGuessAVChatWithIMHandle:(id)arg1 conferenceID:(id)arg2 sessionID:(unsigned int)arg3 properties:(id)arg4;
+ (id)chatList;
+ (id)chatWithSessionID:(unsigned int)arg1;
+ (id)chatsWithIMAVChatState:(unsigned int)arg1;
+ (id)connectedChat;
+ (id)connectedChats;
+ (id)connectingChats;
+ (double)defaultConnectionTimeoutTime;
+ (double)defaultInvitationTimeoutTime;
+ (id)incomingInvitations;
+ (BOOL)isStateActive:(unsigned int)arg1;
+ (BOOL)isStateFinal:(unsigned int)arg1;
+ (int)maxRemoteParticipantsVideo:(BOOL)arg1;
+ (id)nonFinalChat;
+ (id)outgoingInvitations;
+ (void)setDefaultConnectionTimeoutTime:(double)arg1;
+ (void)setDefaultInvitationTimeoutTime:(double)arg1;
+ (int)systemSupportsNewOutgoingConferenceTo:(id)arg1 isVideo:(BOOL)arg2;

- (id)GUID;
- (void)_VCCounterProposal:(id)arg1;
- (void)__responseToVCInvite:(id)arg1;
- (void)_airplaneModeChanged:(id)arg1;
- (BOOL)_allParticipantsUsingICE;
- (id)_backCameraCaptureTime;
- (void)_breakBeforeMakeTimer:(id)arg1;
- (id)_callDuration;
- (id)_callStatisticsGUID;
- (void)_cancelInvitationWithReason:(unsigned int)arg1 error:(int)arg2;
- (BOOL)_checkVCResponseDict:(id)arg1;
- (void)_clearBreakBeforeMakeTimer;
- (void)_clearConnectionTimeoutTimer;
- (void)_clearFirstFrameTimeoutTimer;
- (void)_clearInvitationTimeoutTimer;
- (id)_conferenceController;
- (id)_connectData;
- (id)_connectDuration;
- (void)_connectTo:(id)arg1 withData:(id)arg2;
- (void)_connectionTimeout:(id)arg1;
- (int)_connectionType;
- (void)_counterPropose:(id)arg1;
- (id)_currentNatType;
- (id)_dataDownloaded;
- (id)_dataRate;
- (id)_dataUploaded;
- (void)_determineDataIn;
- (void)_endChatWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)_entitlementsChanged:(id)arg1;
- (id)_extraServerContext;
- (void)_finalizeParticipantOrder:(id)arg1 andNotify:(BOOL)arg2;
- (void)_firstFrameTimeout:(id)arg1;
- (id)_frontCameraCaptureTime;
- (void)_handleAVError:(id)arg1;
- (void)_handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned int)arg2 userInfo:(id)arg3 handled:(BOOL)arg4;
- (void)_handleRelayCancel:(id)arg1 fromParticipant:(id)arg2;
- (void)_handleRelayInitate:(id)arg1 fromParticipant:(id)arg2;
- (void)_handleRelayUpdate:(id)arg1 fromParticipant:(id)arg2;
- (BOOL)_hasPendingAccept;
- (BOOL)_hasPendingInit;
- (BOOL)_imHandlesRequireCoercedIDs:(id)arg1;
- (void)_initParticipantsWithIMHandles:(id)arg1;
- (void)_initParticipantsWithNuggets:(id)arg1;
- (id)_initWith:(id)arg1 invitedBy:(id)arg2 sessionID:(unsigned int)arg3 video:(BOOL)arg4 extraProperties:(id)arg5;
- (int)_initialRelayStatus;
- (void)_initiatorInfoChanged:(id)arg1;
- (void)_insertRemoteParticipant:(id)arg1 atIndex:(unsigned int)arg2;
- (id)_interruptionBegan;
- (void)_invitationTimeout:(id)arg1;
- (void)_inviteeInfoChanged:(id)arg1;
- (BOOL)_isAudioInterrupted;
- (BOOL)_isCallUpgrade;
- (BOOL)_isCounterProposalConnect;
- (BOOL)_isListening;
- (BOOL)_isTeminating;
- (BOOL)_isVideoInterrupted;
- (unsigned int)_localNetworkConnectionType;
- (void)_mainThreadFinishPrepareConnectionForInvitedParty:(id)arg1;
- (BOOL)_moveVCPartyID:(id)arg1 toIndex:(unsigned int)arg2 inCount:(unsigned int)arg3;
- (id)_natType;
- (BOOL)_needsAudioRestart;
- (BOOL)_needsVideoRestart;
- (void)_noteConferenceConnected:(id)arg1;
- (void)_noteFirstFrame;
- (id)_participantMatchingVCPartyID:(id)arg1;
- (void)_participantsChanged:(id)arg1;
- (BOOL)_participantsCheckOut;
- (void)_peerID:(id)arg1 changedTo:(id)arg2;
- (id)_pingTestResults;
- (void)_postNotificationName:(id)arg1 participant:(id)arg2 userInfo:(id)arg3;
- (void)_postNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)_postParticipantMediaChangeNotification:(id)arg1 cameraChanged:(BOOL)arg2 orientationChanged:(BOOL)arg3 aspectChanged:(BOOL)arg4 cameraWillSwitch:(BOOL)arg5 camera:(unsigned int)arg6 orientation:(unsigned int)arg7 aspect:(struct CGSize { float x1; float x2; })arg8;
- (void)_postStateToDelegateIfNecessary;
- (void)_prepareConnectionForParticipant:(id)arg1;
- (id)_queue;
- (void)_reallyEndChatWithError:(id)arg1;
- (void)_reduceInvitationTimeoutTime;
- (void)_refreshAddableStatus;
- (id)_relayConnectDuration;
- (void)_relayPropose:(id)arg1;
- (id)_remoteNatType;
- (unsigned int)_remoteNetworkConnectionType;
- (void)_reportError:(id)arg1;
- (void)_responseToVCInvite:(id)arg1;
- (void)_resumeAudioState;
- (void)_resumeVideoState;
- (void)_saveAudioRestartState;
- (void)_saveVideoRestartState;
- (void)_sendEndCallMetricWithReason:(unsigned int)arg1 andError:(int)arg2;
- (void)_sendVCUpdateTo:(id)arg1 skipConnected:(BOOL)arg2;
- (void)_setActiveConference;
- (void)_setAddStatus:(unsigned int)arg1;
- (void)_setAddableParticipants:(int)arg1;
- (void)_setBackCameraCaptureTime:(id)arg1;
- (void)_setBreakBeforeMakeTimer;
- (void)_setCallStatisticsGUID:(id)arg1;
- (void)_setCallerProperties:(id)arg1;
- (void)_setConferenceController:(id)arg1;
- (void)_setConferenceID:(id)arg1;
- (void)_setConnectData:(id)arg1;
- (void)_setConnectionTimeoutTimer;
- (void)_setConnectionType:(int)arg1;
- (void)_setCreationDate;
- (void)_setDataDownloaded:(id)arg1;
- (void)_setDataIn:(BOOL)arg1;
- (void)_setDataOut:(BOOL)arg1;
- (void)_setDataRate:(id)arg1;
- (void)_setDataUploaded:(id)arg1;
- (void)_setDateEnded:(id)arg1;
- (void)_setErrorDictionary:(id)arg1;
- (void)_setFirstFrameTimeoutTimer;
- (void)_setFrontCameraCaptureTime:(id)arg1;
- (void)_setGUID:(id)arg1;
- (void)_setHasPendingAccept:(BOOL)arg1;
- (void)_setHasPendingInit:(BOOL)arg1;
- (void)_setInitiatorIMHandle:(id)arg1;
- (void)_setInterruptionBegan:(id)arg1;
- (void)_setInvitationTimeoutTimer;
- (void)_setIsAudioInterrupted:(BOOL)arg1;
- (void)_setIsCallUpgrade:(BOOL)arg1;
- (void)_setIsCaller:(BOOL)arg1;
- (void)_setIsCounterProposalConnect:(BOOL)arg1;
- (void)_setIsListening:(BOOL)arg1;
- (void)_setIsVideo:(BOOL)arg1;
- (void)_setIsVideoInterrupted:(BOOL)arg1;
- (void)_setLocalNetworkConnectionType:(unsigned int)arg1;
- (void)_setLocalParticipant:(id)arg1;
- (void)_setNatType:(id)arg1;
- (void)_setNeedsAudioRestart:(BOOL)arg1;
- (void)_setNeedsVideoRestart:(BOOL)arg1;
- (void)_setParticipantOrderFinal:(BOOL)arg1;
- (void)_setParticipants:(id)arg1;
- (void)_setPingTestResults:(id)arg1;
- (void)_setQ8IrisOpen:(BOOL)arg1;
- (void)_setQueue:(id)arg1;
- (void)_setRemoteNetworkConnectionType:(unsigned int)arg1;
- (void)_setSessionID:(unsigned int)arg1;
- (void)_setState:(unsigned int)arg1;
- (void)_setStateDisconnected;
- (void)_setSuppressBeginChat:(BOOL)arg1;
- (void)_setUsingCoercedIDs:(BOOL)arg1;
- (void)_threadedPrepareConnectionForInvitedParty:(id)arg1;
- (void)_unknownParty:(id)arg1 didConnect:(BOOL)arg2;
- (void)_unknownParty:(id)arg1 muteOrPause:(unsigned int)arg2 didChange:(BOOL)arg3;
- (void)_updateIMHandleInBuddyList:(id)arg1;
- (void)_updateParticipantsWithData:(id)arg1;
- (BOOL)_usesRelay;
- (BOOL)_usingCoercedIDs;
- (void)_vccInitDidFinish:(id)arg1;
- (void)acceptInvitation;
- (id)account;
- (unsigned int)addStatus;
- (int)addableParticipants;
- (BOOL)allowsVideo;
- (void)auxVideoBeganForPersonWithID:(id)arg1;
- (void)auxVideoEndedForPersonWithID:(id)arg1;
- (void)beginChat;
- (int)callID;
- (id)callerProperties;
- (unsigned int)cameraOrientation;
- (unsigned int)cameraType;
- (BOOL)canUseRelay;
- (void)cancelInvitation;
- (BOOL)closeCamera;
- (void)conferenceHasTimedOut;
- (void)conferenceHasVideoError;
- (void)conferenceHungUpByPersonWithID:(id)arg1;
- (id)conferenceID;
- (void)conferencePersonWithID:(id)arg1 approvedAuxVideo:(BOOL)arg2;
- (void)conferencePersonWithID:(id)arg1 completedWithInfo:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 didCancel:(BOOL)arg2;
- (void)conferencePersonWithID:(id)arg1 didConnect:(BOOL)arg2;
- (void)conferencePersonWithID:(id)arg1 didDegrade:(BOOL)arg2;
- (void)conferencePersonWithID:(id)arg1 didMute:(BOOL)arg2;
- (void)conferencePersonWithID:(id)arg1 didPause:(BOOL)arg2;
- (void)conferencePersonWithID:(id)arg1 didStall:(BOOL)arg2;
- (void)conferencePersonWithID:(id)arg1 hasInfoForInsufficientBandwidth:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 hasInfoForNoPackets:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 mediaDidStall:(BOOL)arg2;
- (void)conferencePersonWithID:(id)arg1 sendRelayCancel:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 sendRelayRequest:(id)arg2;
- (void)conferencePersonWithID:(id)arg1 sendRelayUpdate:(id)arg2;
- (double)connectionTimeoutTime;
- (BOOL)dataIn;
- (BOOL)dataOut;
- (id)dateConnected;
- (id)dateCreated;
- (id)dateEnded;
- (void)dealloc;
- (void)declineInvitation;
- (void)declineInvitationWithResponse:(unsigned int)arg1;
- (id)description;
- (BOOL)didRemoteMute;
- (BOOL)didRemotePause;
- (void)endChat;
- (void)endChatWithError:(int)arg1;
- (void)endChatWithReason:(unsigned int)arg1 error:(int)arg2;
- (void)endChatWithReason:(unsigned int)arg1;
- (int)endedError;
- (unsigned int)endedReason;
- (id)errorDictionary;
- (void)finalizeOrderWithVideoFrom:(id)arg1;
- (void)handleGenericAVMessageFromParticipant:(id)arg1 type:(unsigned int)arg2 userInfo:(id)arg3;
- (void)handleVideoConferenceNotification:(id)arg1;
- (BOOL)hasReceivedFirstFrame;
- (id)initIncomingFrom:(id)arg1 isVideo:(BOOL)arg2 callerProperties:(id)arg3;
- (id)initOutgoingTo:(id)arg1 isVideo:(BOOL)arg2;
- (id)initiatorIMHandle;
- (id)initiatorParticipant;
- (void)invalidateParticipantNames;
- (double)invitationTimeoutTime;
- (void)invite:(id)arg1;
- (void)inviteAll;
- (id)inviteesInfoAsPlist:(BOOL)arg1 account:(id)arg2;
- (BOOL)isActive;
- (BOOL)isCaller;
- (BOOL)isChatMute;
- (BOOL)isChatPaused;
- (BOOL)isConferenceSilent;
- (BOOL)isLocalNetworkStalled;
- (BOOL)isMute;
- (BOOL)isPaused;
- (BOOL)isQ8IrisOpen;
- (BOOL)isRemoteMute;
- (BOOL)isRemotePaused;
- (BOOL)isSendingAudio;
- (BOOL)isSendingVideo;
- (BOOL)isStateFinal;
- (BOOL)isVideo;
- (struct CGSize { float x1; float x2; })localAspectRatioForCameraOrientation:(unsigned int)arg1 cameraType:(unsigned int)arg2;
- (id)localParticipant;
- (void*)localVideoBackLayer;
- (void*)localVideoLayer;
- (BOOL)lockCamera;
- (void)notificationCenterDidDisappear;
- (void)notificationCenterWillAppear;
- (int)numActiveParticipants;
- (BOOL)openCamera;
- (id)orderedRemotePartyIDs;
- (id)otherIMHandle;
- (void)participant:(id)arg1 changedFromState:(unsigned int)arg2 toState:(unsigned int)arg3;
- (id)participantMatchingIMHandle:(id)arg1;
- (id)participantNames;
- (BOOL)participantOrderFinal;
- (id)participantWithID:(id)arg1;
- (id)participants;
- (id)participantsNotInNuggets:(id)arg1;
- (id)remoteParticipants;
- (void)sendARDFileTransferAuthorization:(id)arg1 to:(id)arg2;
- (unsigned int)sessionID;
- (void)setAllowsVideo:(BOOL)arg1;
- (void)setCallID:(int)arg1;
- (void)setCameraOrientation:(unsigned int)arg1;
- (void)setCameraType:(unsigned int)arg1;
- (void)setConnectionTimeoutTime:(double)arg1;
- (void)setInvitationTimeoutTime:(double)arg1;
- (void)setIsSendingAudio:(BOOL)arg1;
- (void)setIsSendingVideo:(BOOL)arg1;
- (void)setLocalAspectRatio:(struct CGSize { float x1; float x2; })arg1 cameraOrientation:(unsigned int)arg2 cameraType:(unsigned int)arg3;
- (void)setLocalVideoBackLayer:(void*)arg1;
- (void)setLocalVideoLayer:(void*)arg1;
- (void)setLockCamera:(BOOL)arg1;
- (void)setMute:(BOOL)arg1;
- (void)setPaused:(BOOL)arg1;
- (void)setRemoteMute:(BOOL)arg1;
- (void)setRemotePaused:(BOOL)arg1;
- (BOOL)shouldConferenceAcceptAuxVideoFromUser:(id)arg1;
- (BOOL)startPreviewWithError:(id*)arg1;
- (void)startVCOnMainThread:(id)arg1;
- (unsigned int)state;
- (BOOL)stopPreview;
- (id)stringForAddStatus:(unsigned int)arg1;
- (id)stringForAddStatus;
- (BOOL)suppressBeginChat;
- (void)systemApplicationDidBecomeActive;
- (void)systemApplicationDidEnterBackground;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidResumeForEventsOnly;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationWillEnterForeground;
- (void)systemDidFastUserSwitchOut;
- (void)systemWillShutdown;
- (void)toggleChatMute;
- (void)toggleChatPaused;
- (void)toggleMute;
- (void)togglePaused;
- (void)toggleRemoteMute;
- (void)toggleRemotePaused;
- (void)toggleSendingAudio;
- (void)toggleSendingVideo;
- (id)vcPartyIDForIMHandle:(id)arg1;

@end
