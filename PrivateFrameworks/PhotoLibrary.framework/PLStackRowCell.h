/* Generated by RuntimeBrowser on iPhone OS 4.0
   Image: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

@class NSMutableArray, <LibraryStacksViewDataSource>;



@interface PLStackRowCell : UITableViewCell 
{
    <LibraryStacksViewDataSource> *_stacksDataSource;
    struct _NSRange { 
        NSUInteger location; 
        NSUInteger length; 
    } _stackRange;
    struct CGSize { 
        float width; 
        float height; 
    } _stackSize;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _stackInsets;
    NSMutableArray *_stackViews;
    NSMutableArray *_labels;
    unsigned int _needsLayout : 1;
    unsigned int _showLabel : 1;
}

@property _NSRange stackRange;
@property UIEdgeInsets stackInsets;
@property CGSize stackSize;
@property <LibraryStacksViewDataSource> *stacksDataSource;

+ (void)_initializeSafeCategory;

- (id)initWithReuseIdentifier:(id)arg1 showLabel:(BOOL)arg2;
- (void)_addStackView:(id)arg1 withFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)_addLabel:(id)arg1;
- (id)stackViews;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })stackRange;
- (BOOL)_stackViewsNeedRelayout;
- (void)setStackRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameOfStackInColumn:(NSUInteger)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })stackInsets;
- (void)setStackInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (struct CGSize { float x1; float x2; })stackSize;
- (void)setStackSize:(struct CGSize { float x1; float x2; })arg1;
- (id)stacksDataSource;
- (void)setStacksDataSource:(id)arg1;
- (void)prepareForReuse;
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)labels;
- (BOOL)_accessibilityAlwaysReturnsChild;

@end
