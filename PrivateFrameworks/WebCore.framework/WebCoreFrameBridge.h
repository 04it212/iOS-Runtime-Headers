/* Generated by RuntimeBrowser on iPhone OS 2.2.1
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */



@interface WebCoreFrameBridge : NSObject 
{
    struct Frame { int (**x1)(); NSInteger x2; struct FramePrivate {} *x3; } *m_frame;
    BOOL _shouldCreateRenderers;
    BOOL _closed;
}

+ (id)bridgeForDOMDocument:(id)arg1;
+ (id)stringWithData:(id)arg1 textEncodingName:(id)arg2;

- (id)domain;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)close;
- (void)addData:(id)arg1;
- (BOOL)scrollOverflowInDirection:(NSInteger)arg1 granularity:(NSInteger)arg2;
- (void)clearFrame;
- (void)createFrameViewWithNSView:(id)arg1 marginWidth:(NSInteger)arg2 marginHeight:(NSInteger)arg3;
- (id)_stringWithDocumentTypeStringAndMarkupString:(id)arg1;
- (id)nodesFromList:(struct Vector<WebCore::Node*,0ul> { NSUInteger x1; struct VectorBuffer<WebCore::Node*,0ul> { struct Node {} **x_2_1_1; NSUInteger x_2_1_2; } x2; }*)arg1;
- (id)markupStringFromNode:(id)arg1 nodes:(id*)arg2;
- (id)markupStringFromRange:(id)arg1 nodes:(id*)arg2;
- (id)selectedString;
- (void)revealSelection;
- (id)selectedDOMRange;
- (void)setSelectedDOMRange:(id)arg1 affinity:(NSInteger)arg2 closeTyping:(BOOL)arg3;
- (void)expandSelectionToElementContainingCaretSelection;
- (id)elementRangeContainingCaretSelection;
- (unsigned short)characterInRelationToCaretSelection:(NSInteger)arg1;
- (unsigned short)characterBeforeCaretSelection;
- (unsigned short)characterAfterCaretSelection;
- (void)expandSelectionToWordContainingCaretSelection;
- (void)expandSelectionToStartOfWordContainingCaretSelection;
- (id)_wordRangeContainingCaretSelection;
- (id)wordRangeContainingCaretSelection;
- (id)wordInRange:(id)arg1;
- (NSInteger)wordOffsetInRange:(id)arg1;
- (NSInteger)indexCountOfWordInRange:(id)arg1;
- (BOOL)spaceFollowsWordInRange:(id)arg1;
- (id)wordsInCurrentParagraph;
- (BOOL)selectionAtDocumentStart;
- (BOOL)selectionAtSentenceStart:(struct Selection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; NSInteger x_1_1_2; } x1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_2_1_1; NSInteger x_2_1_2; } x2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_3_1_1; NSInteger x_3_1_2; } x3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_4_1_1; NSInteger x_4_1_2; } x4; NSInteger x5; NSInteger x6; NSInteger x7; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x8; }*)arg1;
     /* Encoded args for previous method: c12@0:4^{Selection={Position={RefPtr<WebCore::Node>=^{Node}}i}{Position={RefPtr<WebCore::Node>=^{Node}}i}{Position={RefPtr<WebCore::Node>=^{Node}}i}{Position={RefPtr<WebCore::Node>=^{Node}}i}iiiB}8 */

- (BOOL)selectionAtSentenceStart;
- (BOOL)rangeAtSentenceStart:(id)arg1;
- (BOOL)selectionAtWordStart;
- (void)addAutoCorrectMarker:(id)arg1;
- (void)addAutoCorrectMarker:(id)arg1 word:(id)arg2 correction:(id)arg3;
- (NSInteger)preferredHeight;
- (NSInteger)innerLineHeight:(id)arg1;
- (void)updateLayout;
- (void)setCaretBlinks:(BOOL)arg1;
- (void)setCaretVisible:(BOOL)arg1;
- (void)clearDocumentContent;
- (void)setIsActive:(BOOL)arg1;
- (void)setEmbeddedEditingMode:(BOOL)arg1;
- (id)stringForRange:(id)arg1;
- (void)collapseSelectedDOMRangeWithAffinity:(NSInteger)arg1;
- (id)currentSentence;
- (void)reapplyStylesForDeviceType:(NSInteger)arg1;
- (void)forceLayoutAdjustingViewSize:(BOOL)arg1;
- (void)forceLayoutWithMinimumPageWidth:(float)arg1 maximumPageWidth:(float)arg2 adjustingViewSize:(BOOL)arg3;
- (void)sendOrientationChangeEvent;
- (void)sendScrollEvent;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)computePageRectsWithPrintWidthScaleFactor:(float)arg1 printHeight:(float)arg2;
- (void)adjustPageHeightNew:(float*)arg1 top:(float)arg2 bottom:(float)arg3 limit:(float)arg4;
- (struct CGSize { float x1; float x2; })renderedSizeOfNode:(id)arg1 constrainedToWidth:(float)arg2;
- (void)setUserStyleSheet:(id)arg1;
- (id)copyRenderNode:(struct RenderObject { int (**x1)(); struct RenderStyle {} *x2; struct Node {} *x3; struct RenderObject {} *x4; struct RenderObject {} *x5; struct RenderObject {} *x6; unsigned int x7 : 15; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; }*)arg1 copier:(id)arg2;
- (id)copyRenderTree:(id)arg1;
- (void)installInFrame:(id)arg1;
- (id)elementWithName:(id)arg1 inForm:(id)arg2;
- (id)viewForElement:(id)arg1;
- (BOOL)elementDoesAutoComplete:(id)arg1;
- (BOOL)elementIsPassword:(id)arg1;
- (id)formForElement:(id)arg1;
- (id)currentForm;
- (id)controlsInForm:(id)arg1;
- (id)searchForLabels:(id)arg1 beforeElement:(id)arg2;
- (id)matchLabels:(id)arg1 againstElement:(id)arg2;
- (id)URLWithAttributeString:(id)arg1;
- (id)scrollableNodeAtViewportLocation:(struct CGPoint { float x1; float x2; })arg1;
- (id)approximateNodeAtViewportLocation:(struct CGPoint { float x1; float x2; }*)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })renderRectForPoint:(struct CGPoint { float x1; float x2; })arg1 isReplaced:(BOOL*)arg2 fontSize:(float*)arg3;
- (BOOL)hasCustomViewportArguments;
- (void)clearCustomViewportArguments;
- (id)viewportArguments;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 startInSelection:(BOOL)arg5;
- (NSUInteger)markAllMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 limit:(NSUInteger)arg3;
- (BOOL)markedTextMatchesAreHighlighted;
- (void)setMarkedTextMatchesAreHighlighted:(BOOL)arg1;
- (void)unmarkAllTextMatches;
- (void)setTextSizeMultiplier:(float)arg1;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1 forceUserGesture:(BOOL)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForScrollToVisible;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })autocorrectionRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectAtNode:(id)arg1 offset:(NSInteger)arg2 affinity:(NSInteger)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })firstRectForDOMRange:(id)arg1;
- (void)scrollDOMRangeToVisible:(id)arg1;
- (id)baseURL;
- (id)stringWithData:(id)arg1;
- (BOOL)needsLayout;
- (void)setNeedsLayout;
- (id)renderTreeAsExternalRepresentation;
- (void)setShouldCreateRenderers:(BOOL)arg1;
- (void)setBaseBackgroundColor:(struct CGColor { }*)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (id)rangeByAlteringCurrentSelection:(NSInteger)arg1 direction:(NSInteger)arg2 granularity:(NSInteger)arg3;
- (NSInteger)selectionGranularity;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })convertToNSRange:(struct Range { NSInteger x1; struct RefPtr<WebCore::Document> { struct Document {} *x_2_1_1; } x2; struct RefPtr<WebCore::Node> { struct Node {} *x_3_1_1; } x3; NSUInteger x4; struct RefPtr<WebCore::Node> { struct Node {} *x_5_1_1; } x5; NSUInteger x6; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x7; }*)arg1;
     /* Encoded args for previous method: {_NSRange=II}12@0:4^{Range=i{RefPtr<WebCore::Document>=^{Document}}{RefPtr<WebCore::Node>=^{Node}}I{RefPtr<WebCore::Node>=^{Node}}IB}8 */

- (struct PassRefPtr<WebCore::Range> { struct Range {} *x1; })convertToDOMRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (id)convertNSRangeToDOMRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })convertDOMRangeToNSRange:(id)arg1;
- (void)selectNSRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (id)rangeByAlteringCurrentSelection:(NSInteger)arg1 amount:(NSInteger)arg2;
- (id)rangeByMovingCurrentSelection:(NSInteger)arg1;
- (id)rangeByExtendingCurrentSelection:(NSInteger)arg1;
- (void)selectNSRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1 onElement:(id)arg2;
- (id)markedTextDOMRange;
- (void)setMarkedText:(id)arg1 forCandidates:(BOOL)arg2;
- (void)confirmMarkedText:(id)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })selectedNSRange;
- (id)markDOMRange;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })markedTextNSRange;
- (id)smartDeleteRangeForProposedRange:(id)arg1;
- (void)smartInsertForString:(id)arg1 replacingRange:(id)arg2 beforeString:(id*)arg3 afterString:(id*)arg4;
- (id)documentFragmentWithMarkupString:(id)arg1 baseURLString:(id)arg2;
- (id)documentFragmentWithText:(id)arg1 inContext:(id)arg2;
- (id)documentFragmentWithNodesAsParagraphs:(id)arg1;
- (void)replaceSelectionWithFragment:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (void)replaceSelectionWithNode:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (void)replaceSelectionWithMarkupString:(id)arg1 baseURLString:(id)arg2 selectReplacement:(BOOL)arg3 smartReplace:(BOOL)arg4;
- (void)replaceSelectionWithText:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (void)setText:(id)arg1 asChildOfElement:(id)arg2 breakLines:(BOOL)arg3;
- (void)createDefaultFieldEditorDocumentStructure;
- (void)insertParagraphSeparatorInQuotedContent;
- (struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; NSInteger x_1_1_2; } x1; NSInteger x2; })_visiblePositionForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)characterRangeAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)mouseDownMayStartDrag;
- (void)setCaretColor:(struct CGColor { }*)arg1;
- (void)resetSelection;
- (void)moveSelectionToPoint:(struct CGPoint { float x1; float x2; })arg1 useSingleLineSelectionBehavior:(BOOL)arg2;
- (void)moveSelectionToPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)moveSelectionToStartOrEndOfCurrentWord;
- (id)typingStyle;
- (void)setTypingStyle:(id)arg1 withUndoAction:(NSInteger)arg2;
- (struct __GSFont { }*)fontForSelection:(BOOL*)arg1;
- (BOOL)getData:(id*)arg1 andResponse:(id*)arg2 forURL:(id)arg3;
- (void)getAllResourceDatas:(id*)arg1 andResponses:(id*)arg2;
- (BOOL)canProvideDocumentSource;
- (BOOL)canSaveAsWebArchive;
- (void)receivedData:(id)arg1 textEncodingName:(id)arg2;
- (void)setLayoutInterval:(NSInteger)arg1;
- (void)setMaxParseDuration:(double)arg1;
- (void)pauseTimeouts;
- (void)resumeTimeouts;
- (NSUInteger)formElementsCharacterCount;
- (struct Frame { int (**x1)(); NSInteger x2; struct FramePrivate {} *x3; }*)_frame;
- (BOOL)has3DContent;
- (float)frameScale;
- (void)setFrameScale:(float)arg1;

@end
