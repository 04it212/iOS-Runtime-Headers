/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@interface DOMGestureEvent : DOMUIEvent {
     /* Encoded args for previous method: @12@0:4^{GestureEvent=^^?i{AtomicString={String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}}BBBBBB^{EventTarget}S{RefPtr<WebCore::EventTarget>=^{EventTarget}}Q{RefPtr<WebCore::Event>=^{Event}}{RefPtr<WebCore::DOMWindow>=^{DOMWindow}}ib1b1b1b1iiiiiiiiiiBff}8 */
     /* Encoded args for previous method: ^{GestureEvent=^^?i{AtomicString={String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}}BBBBBB^{EventTarget}S{RefPtr<WebCore::EventTarget>=^{EventTarget}}Q{RefPtr<WebCore::Event>=^{Event}}{RefPtr<WebCore::DOMWindow>=^{DOMWindow}}ib1b1b1b1iiiiiiiiiiBff}8@0:4 */
}

@property(retain,readonly) <DOMEventTarget> *target;
@property(readonly) BOOL altKey;
@property(readonly) BOOL ctrlKey;
@property(readonly) BOOL metaKey;
@property(readonly) float rotation;
@property(readonly) float scale;
@property(readonly) BOOL shiftKey;

+ (id)_wrapGestureEvent:(struct GestureEvent { int (**x1)(); NSInteger x2; struct AtomicString { struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; struct EventTarget {} *x10; unsigned short x11; struct RefPtr<WebCore::EventTarget> { struct EventTarget {} *x_12_1_1; } x12; unsigned long long x13; struct RefPtr<WebCore::Event> { struct Event {} *x_14_1_1; } x14; struct RefPtr<WebCore::DOMWindow> { struct DOMWindow {} *x_15_1_1; } x15; NSInteger x16; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; NSInteger x21; NSInteger x22; NSInteger x23; NSInteger x24; NSInteger x25; NSInteger x26; NSInteger x27; NSInteger x28; NSInteger x29; NSInteger x30; void*x31; float x32; float x33; }*)arg1;

- (struct GestureEvent { int (**x1)(); NSInteger x2; struct AtomicString { struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; struct EventTarget {} *x10; unsigned short x11; struct RefPtr<WebCore::EventTarget> { struct EventTarget {} *x_12_1_1; } x12; unsigned long long x13; struct RefPtr<WebCore::Event> { struct Event {} *x_14_1_1; } x14; struct RefPtr<WebCore::DOMWindow> { struct DOMWindow {} *x_15_1_1; } x15; NSInteger x16; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; NSInteger x21; NSInteger x22; NSInteger x23; NSInteger x24; NSInteger x25; NSInteger x26; NSInteger x27; NSInteger x28; NSInteger x29; NSInteger x30; void*x31; float x32; float x33; }*)_gestureEvent;
- (BOOL)altKey;
- (BOOL)ctrlKey;
- (void)initGestureEvent:(id)arg1 canBubble:(BOOL)arg2 cancelable:(BOOL)arg3 view:(id)arg4 detail:(NSInteger)arg5 screenX:(NSInteger)arg6 screenY:(NSInteger)arg7 clientX:(NSInteger)arg8 clientY:(NSInteger)arg9 ctrlKey:(BOOL)arg10 altKey:(BOOL)arg11 shiftKey:(BOOL)arg12 metaKey:(BOOL)arg13 target:(id)arg14 scale:(float)arg15 rotation:(float)arg16;
- (BOOL)metaKey;
- (float)rotation;
- (float)scale;
- (BOOL)shiftKey;
- (id)target;

@end
