/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@interface DOMNode : DOMObject <DOMEventTarget, UIKeyboardInput> {
     /* Encoded args for previous method: ^{RootObject=iB^v{ProtectedPtr<KJS::JSGlobalObject>=^{JSGlobalObject}}{HashCountedSet<KJS::JSObject*,WTF::PtrHash<KJS::JSObject*>,WTF::HashTraits<KJS::JSObject*> >={HashMap<KJS::JSObject*,unsigned int,WTF::PtrHash<KJS::JSObject*>,WTF::HashTraits<KJS::JSObject*>,WTF::HashTraits<unsigned int> >={HashTable<int,std::pair<int, int>,WTF::PairFirstExtractor<std::pair<int, int> >,WTF::IntHash<int32_t>,WTF::PairHashTraits<WTF::HashTraits<int32_t>, WTF::HashTraits<int32_t> >,WTF::HashTraits<int32_t> >=^{pair<int,int>}iiii}}}{HashSet<KJS::RuntimeObjectImp*,WTF::PtrHash<KJS::RuntimeObjectImp*>,WTF::HashTraits<KJS::RuntimeObjectImp*> >={HashTable<int,int,WTF::IdentityExtractor<int>,WTF::IntHash<int32_t>,WTF::HashTraits<int32_t>,WTF::HashTraits<int32_t> >=^iiiii}}}8@0:4 */
}

@property(retain,readonly) DOMNamedNodeMap *attributes;
@property(retain,readonly) DOMNodeList *childNodes;
@property(retain,readonly) DOMNode *firstChild;
@property(retain,readonly) DOMNode *lastChild;
@property(copy,readonly) NSString *localName;
@property(copy,readonly) NSString *namespaceURI;
@property(retain,readonly) DOMNode *nextSibling;
@property(copy,readonly) NSString *nodeName;
@property(copy) NSString *nodeValue;
@property(retain,readonly) DOMDocument *ownerDocument;
@property(retain,readonly) DOMNode *parentNode;
@property(copy) NSString *prefix;
@property(retain,readonly) DOMNode *previousSibling;
@property(copy) NSString *textContent;
@property(readonly) unsigned short nodeType;

+ (id)_wrapEventTarget:(struct EventTarget { int (**x1)(); }*)arg1;
+ (id)_wrapNode:(struct Node { int (**x1)(); NSInteger x2; struct Node {} *x3; struct DocPtr<WebCore::Document> { struct Document {} *x_4_1_1; } x4; struct Node {} *x5; struct Node {} *x6; struct RenderObject {} *x7; struct OwnPtr<WebCore::NodeListsNodeData> { struct NodeListsNodeData {} *x_8_1_1; } x8; short x9; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 2; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; }*)arg1;
+ (id)approvedFocusNode;
+ (BOOL)shouldLockOnSelector:(SEL)arg1;

- (struct Element { int (**x1)(); NSInteger x2; struct Node {} *x3; struct DocPtr<WebCore::Document> { struct Document {} *x_4_1_1; } x4; struct Node {} *x5; struct Node {} *x6; struct RenderObject {} *x7; struct OwnPtr<WebCore::NodeListsNodeData> { struct NodeListsNodeData {} *x_8_1_1; } x8; short x9; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 2; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; int (**x25)(); struct DeprecatedValueList<WTF::RefPtr<WebCore::RegisteredEventListener> > {} *x26; struct Node {} *x27; struct Node {} *x28; struct QualifiedName { struct QualifiedNameImpl {} *x_29_1_1; } x29; struct RefPtr<WebCore::NamedAttrMap> { struct NamedAttrMap {} *x_30_1_1; } x30; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; }*)_linkElement;
- (struct Node { int (**x1)(); NSInteger x2; struct Node {} *x3; struct DocPtr<WebCore::Document> { struct Document {} *x_4_1_1; } x4; struct Node {} *x5; struct Node {} *x6; struct RenderObject {} *x7; struct OwnPtr<WebCore::NodeListsNodeData> { struct NodeListsNodeData {} *x_8_1_1; } x8; short x9; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 2; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; }*)_node;
- (id)_URLsFromSelectors:(SEL)arg1;
- (id)_bridge;
- (id)_initWithNode:(struct Node { int (**x1)(); NSInteger x2; struct Node {} *x3; struct DocPtr<WebCore::Document> { struct Document {} *x_4_1_1; } x4; struct Node {} *x5; struct Node {} *x6; struct RenderObject {} *x7; struct OwnPtr<WebCore::NodeListsNodeData> { struct NodeListsNodeData {} *x_8_1_1; } x8; short x9; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 2; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; }*)arg1;
- (struct RootObject { NSInteger x1; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x2; void *x3; struct ProtectedPtr<KJS::JSGlobalObject> { struct JSGlobalObject {} *x_4_1_1; } x4; struct HashCountedSet<KJS::JSObject*,WTF::PtrHash<KJS::JSObject*>,WTF::HashTraits<KJS::JSObject*> > { struct HashMap<KJS::JSObject*,unsigned int,WTF::PtrHash<KJS::JSObject*>,WTF::HashTraits<KJS::JSObject*>,WTF::HashTraits<unsigned int> > { struct HashTable<int,std::pair<int, int>,WTF::PairFirstExtractor<std::pair<int, int> >,WTF::IntHash<int32_t>,WTF::PairHashTraits<WTF::HashTraits<int32_t>, WTF::HashTraits<int32_t> >,WTF::HashTraits<int32_t> > { struct pair<int,int> {} *x_1_3_1; NSInteger x_1_3_2; NSInteger x_1_3_3; NSInteger x_1_3_4; NSInteger x_1_3_5; } x_1_2_1; } x_5_1_1; } x5; struct HashSet<KJS::RuntimeObjectImp*,WTF::PtrHash<KJS::RuntimeObjectImp*>,WTF::HashTraits<KJS::RuntimeObjectImp*> > { struct HashTable<int,int,WTF::IdentityExtractor<int>,WTF::IntHash<int32_t>,WTF::HashTraits<int32_t>,WTF::HashTraits<int32_t> > { NSInteger *x_1_2_1; NSInteger x_1_2_2; NSInteger x_1_2_3; NSInteger x_1_2_4; NSInteger x_1_2_5; } x_6_1_1; } x6; }*)_rootObject;
- (id)_subresourceURLs;
- (struct _WKQuad { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGPoint { float x_2_1_1; float x_2_1_2; } x2; struct CGPoint { float x_3_1_1; float x_3_1_2; } x3; struct CGPoint { float x_4_1_1; float x_4_1_2; } x4; })absoluteQuad;
- (struct _WKQuad { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGPoint { float x_2_1_1; float x_2_1_2; } x2; struct CGPoint { float x_3_1_1; float x_3_1_2; } x3; struct CGPoint { float x_4_1_1; float x_4_1_2; } x4; })absoluteQuadAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)absoluteQuads;
- (id)absoluteQuadsAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)addEventListener:(id)arg1 :(id)arg2 :(BOOL)arg3;
- (void)addEventListener:(id)arg1 listener:(id)arg2 useCapture:(BOOL)arg3;
- (void)addStringsAndTextNodesToDictionary:(struct __CFDictionary { }*)arg1;
- (id)appendChild:(id)arg1;
- (id)attributes;
- (id)automaticallySelectedOverlay;
- (void)autoscrollTimerFired:(id)arg1;
- (id)baseURI;
- (id)borderRadii;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundingBox;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundingBoxAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)boundingBoxes;
- (id)boundingBoxesAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundingFrame;
- (struct _WKQuad { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGPoint { float x_2_1_1; float x_2_1_2; } x2; struct CGPoint { float x_3_1_1; float x_3_1_2; } x3; struct CGPoint { float x_4_1_1; float x_4_1_2; } x4; })boundingFrameQuad;
- (id)calloutSubtitle;
- (id)calloutTitle;
- (BOOL)canBecomeFirstResponder;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRect;
- (unsigned short)characterAfterCaretSelection;
- (unsigned short)characterBeforeCaretSelection;
- (unsigned short)characterInRelationToCaretSelection:(NSInteger)arg1;
- (id)childNodes;
- (id)cloneNode:(BOOL)arg1;
- (id)commonAncestorWithNode:(id)arg1;
- (float)computedFontSize;
- (void)confirmMarkedText:(id)arg1;
- (struct CGPoint { float x1; float x2; })constrainedPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)containsRichText;
- (BOOL)contentsIsSingleValue;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertCaretRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toView:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertToPage:(struct CGPoint { float x1; float x2; })arg1;
- (void)dealloc;
- (id)delegate;
- (void)deleteBackward;
- (id)description;
- (BOOL)dispatchEvent:(id)arg1;
- (id)editingDelegate;
- (void)expandSelectionToStartOfWordContainingCaretSelection;
- (void)finalize;
- (id)firstChild;
- (void)fixParagraphsAndQuotesFromMicrosoft;
- (void)fixParagraphsAndQuotesFromMicrosoftNodesToRemove:(id)arg1;
- (id)fontForCaretSelection;
- (void)handleKeyEvent:(struct __GSEvent { }*)arg1;
- (BOOL)hasApprovedFocus;
- (BOOL)hasAttributes;
- (BOOL)hasChildNodes;
- (BOOL)hasSelection;
- (BOOL)hasText;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })hrefFrame;
- (id)hrefLabel;
- (struct _WKQuad { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGPoint { float x_2_1_1; float x_2_1_2; } x2; struct CGPoint { float x_3_1_1; float x_3_1_2; } x3; struct CGPoint { float x_4_1_1; float x_4_1_2; } x4; })hrefQuad;
- (id)hrefTarget;
- (id)hrefTitle;
- (id)hrefURL;
- (NSInteger)initialSelectionBehavior;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })innerFrame;
- (struct _WKQuad { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGPoint { float x_2_1_1; float x_2_1_2; } x2; struct CGPoint { float x_3_1_1; float x_3_1_2; } x3; struct CGPoint { float x_4_1_1; float x_4_1_2; } x4; })innerFrameQuad;
- (id)insertBefore:(id)arg1 :(id)arg2;
- (id)insertBefore:(id)arg1 refChild:(id)arg2;
- (void)insertText:(id)arg1;
- (BOOL)isContentEditable;
- (BOOL)isDefaultNamespace:(id)arg1;
- (BOOL)isEqualNode:(id)arg1;
- (BOOL)isLikelyToBeginPageLoad;
- (BOOL)isProxyFor:(id)arg1;
- (BOOL)isQuoteOrWithinQuote;
- (BOOL)isSameNode:(id)arg1;
- (BOOL)isSecure;
- (BOOL)isShowingPlaceholder;
- (BOOL)isSupported:(id)arg1 :(id)arg2;
- (BOOL)isSupported:(id)arg1 version:(id)arg2;
- (BOOL)isTextControl;
- (id)keyboardInputView;
- (id)lastChild;
- (id)lineBoxQuads;
- (id)lineBoxRects;
- (id)localName;
- (id)lookupNamespaceURI:(id)arg1;
- (id)lookupPrefix:(id)arg1;
- (id)markedText;
- (id)markupString;
- (void)moveBackward:(NSUInteger)arg1;
- (void)moveForward:(NSUInteger)arg1;
- (id)namespaceURI;
- (id)nextFocusNode;
- (id)nextSibling;
- (id)nodeName;
- (unsigned short)nodeType;
- (id)nodeValue;
- (void)normalize;
- (id)ownerDocument;
- (id)parentElement;
- (id)parentNode;
- (id)prefix;
- (id)previousFocusNode;
- (id)previousSibling;
- (NSInteger)quoteLevelDelta;
- (BOOL)rangeAtSentenceStart:(id)arg1;
- (id)rangeByExtendingCurrentSelection:(NSInteger)arg1;
- (id)rangeByMovingCurrentSelection:(NSInteger)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectContainingCaretSelection;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForNSRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)recursivelyRemoveMailAttributes;
- (id)removeChild:(id)arg1;
- (void)removeEventListener:(id)arg1 :(id)arg2 :(BOOL)arg3;
- (void)removeEventListener:(id)arg1 listener:(id)arg2 useCapture:(BOOL)arg3;
- (id)replaceChild:(id)arg1 :(id)arg2;
- (id)replaceChild:(id)arg1 oldChild:(id)arg2;
- (void)replaceCurrentWordWithText:(id)arg1;
- (BOOL)requiresKeyEvents;
- (NSInteger)returnKeyType;
- (id)rootEditableElement;
- (void)selectAll;
- (id)selectedDOMRange;
- (BOOL)selectionAtDocumentStart;
- (BOOL)selectionAtSentenceStart;
- (BOOL)selectionAtWordStart;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })selectionRange;
- (void)setApprovedFocus:(BOOL)arg1;
- (void)setCaretChangeListener:(id)arg1;
- (void)setContentsIsSingleValue:(BOOL)arg1;
- (void)setEditingDelegate:(id)arg1;
- (void)setInitialSelectionBehavior:(NSInteger)arg1;
- (void)setMarkedText:(id)arg1;
- (void)setNodeValue:(id)arg1;
- (void)setPrefix:(id)arg1;
- (void)setReturnKeyType:(NSInteger)arg1;
- (void)setSecure:(BOOL)arg1;
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(BOOL)arg2;
- (void)setText:(id)arg1;
- (void)setTextContent:(id)arg1;
- (void)setTextLoupeVisibility:(NSInteger)arg1;
- (void)setTextSuggestionDelegate:(id)arg1;
- (void)setTextTrimmingSet:(struct __CFCharacterSet { }*)arg1;
- (void)setupPlaceholderTextIfNeeded;
- (BOOL)showsTapHighlight;
- (id)tagName;
- (void)takeTraitsFrom:(id)arg1;
- (id)tapHighlightColor;
- (id)text;
- (id)textColorForCaretSelection;
- (id)textContent;
- (id)textInputTraits;
- (NSInteger)textLoupeVisibility;
- (id)textSuggestionDelegate;
- (struct __CFCharacterSet { }*)textTrimmingSet;
- (BOOL)touchCalloutEnabled;
- (void)updateSelectionWithPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)webArchive;
- (id)wordContainingCaretSelection;
- (id)wordInRange:(id)arg1;
- (NSInteger)wordOffsetInRange:(id)arg1;
- (id)wordRangeContainingCaretSelection;

@end
