/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

@class ML3MusicLibrary, NSString;

@interface MusicLibrary : NSObject {
    unsigned int _autoflushScheduled : 1;
    unsigned int _needsFlush : 1;
    double _autoflushTargetTime;
    NSString *_basePath;
    ML3MusicLibrary *_library3;
}

+ (void)_dbSyncAlreadyActive;
+ (void)_dbSyncDidEnd;
+ (void)_dbSyncWillBegin;
+ (BOOL)_isDBSyncActiveIncludePending;
+ (id)_sharedMusicLibrary:(BOOL)arg1;
+ (void)beginDatabaseMigrationIfNecessary;
+ (void)commitAllDeferredWork;
+ (id)controlDirectoryPathWithBasePath:(id)arg1;
+ (BOOL)databaseDataFilesExist;
+ (void)disableFlush;
+ (void)enableFlush;
+ (BOOL)flush;
+ (BOOL)isDBSyncActive;
+ (BOOL)isFlushEnabled;
+ (id)mediaFolderPath;
+ (id)mediaFolderRelativePath:(id)arg1;
+ (void)noteSyncAlreadyActive;
+ (void)noteSyncDidEnd;
+ (void)noteSyncWillBegin;
+ (id)pathForResourceFileOrFolder:(int)arg1 basePath:(id)arg2 relativeToBase:(BOOL)arg3 createParentFolderIfNecessary:(BOOL)arg4;
+ (id)pathForResourceFileOrFolder:(int)arg1 basePath:(id)arg2 relativeToBase:(BOOL)arg3 isFolder:(BOOL*)arg4;
+ (id)pathForResourceFileOrFolder:(int)arg1;
+ (void)resetLibrary;
+ (void)scheduleFlushDatabase;
+ (void)setSyncIsActive:(BOOL)arg1 alreadyInTargetState:(BOOL)arg2 withStateChangeHandlerBlock:(id)arg3;
+ (id)sharedMusicLibrary;
+ (id)sharedMusicLibraryIfExists;

- (void)_autoflush;
- (void)_cancelAutoflush;
- (void)commitAllDeferredWork;
- (void)dealloc;
- (BOOL)flush;
- (id)initWithBasePath:(id)arg1;
- (void)mainThread_scheduleFlushDatabase;
- (void)scheduleFlushDatabase;

@end
