/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ScreenReaderOutputServer.framework/ScreenReaderOutputServer
 */

@class <SCROBrailleDisplayDelegate>, <SCROBrailleDriverProtocol>, <SCROIOElementProtocol>, NSData, NSLock, NSMutableArray, NSMutableString, NSString, SCROBrailleEventDispatcher, SCROBrailleLine;

@interface SCROBrailleDisplay : NSObject {
    struct { 
        NSData *realData; 
        NSData *virtualData; 
        NSData *aggregatedData; 
        NSInteger virtualAlignment; 
        NSInteger masterStatusCellIndex; 
    struct { 
        double quietSince; 
        double busySince; 
        double nextWillMemorizeNotificationTime; 
        double memorizeNextKeyImmediatelyTimeout; 
        BOOL prepareToMemorizeNextKey; 
        BOOL requestPrepareToMemorizeNextKey; 
        BOOL memorizeNextKeyImmediately; 
        BOOL willMemorizeNow; 
        BOOL isQuiet; 
        BOOL newDown; 
        struct __CFArray {} *currentChord; 
        struct __CFSet {} *downKeys; 
        NSUInteger routerEvent; 
        NSInteger routerIndex; 
        NSInteger routerToken; 
        id appToken; 
        NSInteger routerLocation; 
        BOOL currentBrailleChordContainsSpacebar; 
        BOOL spacebarIsDown; 
        BOOL skipBrailleKeyboardKeyTranslation; 
        struct __CFArray {} *currentBrailleChord; 
        struct __CFSet {} *downBrailleDots; 
        NSUInteger currentBrailleModifiers; 
        NSUInteger downBrailleModifiers; 
        NSMutableString *brailleString; 
        NSMutableArray *brailleStringModifiers; 
        double lastBrailleChordPosted; 
        double brailleCharWeightedMean; 
        double brailleTranslationTimeout; 
    struct __CFRunLoopTimer { } *_blinkerEventTimer;
    BOOL _blinkingEnabled;
    <SCROBrailleDriverProtocol> *_brailleDriver;
    SCROBrailleLine *_brailleLine;
    NSLock *_contentLock;
    NSInteger _contractionMode;
    <SCROBrailleDisplayDelegate> *_delegate;
    BOOL _delegateWantsDisplayCallback;
    BOOL _delegateWantsPanningCallbacks;
    NSString *_driverIdentifier;
    NSString *_driverModelIdentifier;
    SCROBrailleEventDispatcher *_eventDispatcher;
    } _input;
    BOOL _inputEnabled;
    struct __CFRunLoopTimer { } *_inputEventTimer;
    <SCROIOElementProtocol> *_ioElement;
    BOOL _isValid;
    NSInteger _mainSize;
    BOOL _needsUpdating;
    BOOL _postsKeyboardEvents;
    struct __CFRunLoop { } *_runLoop;
    BOOL _shouldBatchUpdates;
    BOOL _showEightDot;
    } _status;
    NSInteger _statusSize;
}

@property BOOL delegateWantsDisplayCallback;
@property BOOL delegateWantsPanningCallbacks;

+ (BOOL)brailleDriverClassIsValid:(Class)arg1;
+ (id)displayWithIOElement:(id)arg1 driverIdentifier:(id)arg2 delegate:(id)arg3;

- (void)_aggregatedStatusHandler:(id)arg1;
- (void)_appendTranslatedBrailleStringEventsToArray:(struct __CFArray {}**)arg1;
- (void)_blinkerEventHandler;
- (void)_bulkStatusAttributesHandler:(id)arg1;
- (void)_configurationChangeHandler;
- (void)_configurationChangeNotification:(id)arg1;
- (void)_delayedConfigurationChangeNotification;
- (void)_delayedDisplayLoad;
- (void)_delayedSleepNotification:(id)arg1;
- (void)_delayedUnloadNotification;
- (id)_initWithDriver:(id)arg1 driverIdentifier:(id)arg2 ioElement:(id)arg3 delegate:(id)arg4;
- (void)_inputEventHandler;
- (void)_panHandler:(id)arg1;
- (void)_processKeyEvents:(id)arg1;
- (void)_runThread;
- (void)_setBatchUpdates:(id)arg1;
- (void)_setBrailleFormatterHandler:(id)arg1;
- (void)_setDelegateWantsDisplayCallbackHandler:(id)arg1;
- (void)_simulateKeypressHandler:(id)arg1;
- (void)_sleepNotification:(id)arg1;
- (void)_statusDisplayHandler:(id)arg1;
- (id)_statusStringWithDictionary:(id)arg1;
- (void)_translateBrailleStringAndPostEvent;
- (void)_unloadHandler;
- (void)_unloadNotification:(id)arg1;
- (void)_updateDisplay;
- (id)aggregatedStatus;
- (void)beginUpdates;
- (id)configuration;
- (void)dealloc;
- (BOOL)delegateWantsDisplayCallback;
- (BOOL)delegateWantsPanningCallbacks;
- (id)driverIdentifier;
- (id)driverModelIdentifier;
- (void)endUpdates;
- (void)handleEvent:(id)arg1;
- (void)invalidate;
- (id)ioElement;
- (BOOL)isLoaded;
- (BOOL)isValid;
- (NSInteger)mainSize;
- (long)masterStatusCellIndex;
- (void)panLeft;
- (void)panRight;
- (id)realStatus;
- (void)setAggregatedStatus:(id)arg1;
- (void)setBrailleFormatter:(id)arg1;
- (void)setDelegateWantsDisplayCallback:(BOOL)arg1;
- (void)setDelegateWantsPanningCallbacks:(BOOL)arg1;
- (void)setMasterStatusCellIndex:(long)arg1;
- (void)setPrepareToMemorizeNextKey:(BOOL)arg1 immediate:(BOOL)arg2;
- (void)setStatusAttributesWithMasterCellIndex:(long)arg1 virtualAlignment:(NSInteger)arg2;
- (void)setVirtualStatusAlignment:(NSInteger)arg1;
- (void)simulateKeypress:(id)arg1;
- (NSInteger)statusSize;
- (long)token;
- (NSInteger)tokenForRouterIndex:(NSInteger)arg1 location:(NSInteger*)arg2 appToken:(id*)arg3;
- (id)virtualStatus;
- (NSInteger)virtualStatusAlignment;

@end
