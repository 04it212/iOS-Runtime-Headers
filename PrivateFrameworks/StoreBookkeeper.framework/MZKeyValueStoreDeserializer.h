/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

@class NSObject<MZKeyValueStoreDeserializeOperationDelegate>, NSError, MZKeyValueStoreTransaction, NSDictionary, NSMutableArray, MZKeyValueStoreController;

@interface MZKeyValueStoreDeserializer : NSObject  {
    MZKeyValueStoreTransaction *_transaction;
    NSDictionary *_serverResponse;
    NSObject<MZKeyValueStoreDeserializeOperationDelegate> *_delegate;
    int _status;
    unsigned int _retrySeconds;
    BOOL _isDirty;
    MZKeyValueStoreController *_keyValueStoreController;
    NSMutableArray *_pendingDeserializations;
}

@property(retain) MZKeyValueStoreTransaction * transaction;
@property(retain) MZKeyValueStoreController * keyValueStoreController;
@property(retain) NSDictionary * serverResponse;
@property NSObject<MZKeyValueStoreDeserializeOperationDelegate> * delegate;
@property int status;
@property(readonly) BOOL unsupportedClient;
@property(readonly) BOOL authenticationError;
@property(readonly) BOOL validationError;
@property(readonly) BOOL genericError;
@property(readonly) BOOL success;
@property(readonly) BOOL versionMismatch;
@property(readonly) BOOL hasBackoff;
@property(readonly) unsigned int retrySeconds;
@property(readonly) NSError * requestError;
@property(retain) NSMutableArray * pendingDeserializations;


- (void)setServerResponse:(id)arg1;
- (void)setKeyValueStoreController:(id)arg1;
- (id)keyValueStoreController;
- (id)pendingDeserializations;
- (void)_delegateOperationDidFinish;
- (void)finishedDeserializationForKey:(id)arg1;
- (void)setPendingDeserializations:(id)arg1;
- (id)serverResponse;
- (id)transaction;
- (BOOL)authenticationError;
- (BOOL)validationError;
- (BOOL)unsupportedClient;
- (id)requestError;
- (unsigned int)retrySeconds;
- (BOOL)hasBackoff;
- (void)deserialize;
- (BOOL)versionMismatch;
- (id)initWithTransaction:(id)arg1 response:(id)arg2;
- (void)setTransaction:(id)arg1;
- (BOOL)genericError;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (BOOL)success;
- (void)setStatus:(int)arg1;
- (int)status;

@end
