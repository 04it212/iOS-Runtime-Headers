/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

@class MZKeyValueStoreTransaction, NSError, NSObject<OS_dispatch_queue>, MZUPPBagContext, MZKeyValueStoreController, <MZUniversalPlaybackPositionDataSource>, <MZUniversalPlaybackPositionTransactionContext>, NSString, NSMutableDictionary;

@interface MZUniversalPlaybackPositionSyncHandler : NSObject <MZKeyValueStoreControllerDelegate, MZKeyValueStoreTransactionProcessing> {
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_syncOperationQueue;
    NSMutableDictionary *_metadataItemsToCommitToDataSource;
    NSMutableDictionary *_metadataItemsToCommitToKVSStorage;
    NSMutableDictionary *_metadataItemsFromDataSource;
    NSMutableDictionary *_metadataItemsFromKVSStorage;
    NSError *_fatalSyncError;
    BOOL _syncInProgress;
    MZUPPBagContext *_bagContext;
    NSString *_responseDomainVersion;
    <MZUniversalPlaybackPositionDataSource> *_dataSource;
    BOOL _canceled;
    MZKeyValueStoreTransaction *_currentKVSTransaction;
    MZKeyValueStoreController *_kvsController;
    <MZUniversalPlaybackPositionTransactionContext> *_dataSourceTransactionContext;
    NSMutableDictionary *_reportedItemVersionForIdentifier;
}

@property(retain) <MZUniversalPlaybackPositionDataSource> * dataSource;
@property(retain) MZUPPBagContext * bagContext;
@property(retain) MZKeyValueStoreController * kvsController;
@property(retain) <MZUniversalPlaybackPositionTransactionContext> * dataSourceTransactionContext;
@property(retain) NSString * responseDomainVersion;
@property(retain) NSMutableDictionary * metadataItemsFromDataSource;
@property(retain) NSMutableDictionary * metadataItemsFromKVSStorage;
@property(retain) NSMutableDictionary * metadataItemsToCommitToDataSource;
@property(retain) NSMutableDictionary * metadataItemsToCommitToKVSStorage;
@property(retain) NSMutableDictionary * reportedItemVersionForIdentifier;
@property(retain) MZKeyValueStoreTransaction * currentKVSTransaction;
@property BOOL syncInProgress;
@property BOOL canceled;
@property(retain) NSError * fatalSyncError;


- (int)_mergeMetadataItemFromSetResponse:(id)arg1;
- (void)_signalKVSTransactionCompletion:(id)arg1;
- (id)newKVSTransactionWithType:(int)arg1 keys:(id)arg2;
- (BOOL)_synchronize:(id*)arg1;
- (void)cancelWithError:(id)arg1;
- (void)_signalKVSTransactionCompletion:(id)arg1 withError:(id)arg2;
- (id)kvsController;
- (void)setCanceled:(BOOL)arg1;
- (id)fatalSyncError;
- (BOOL)canceled;
- (id)responseDomainVersion;
- (id)newKVSPutAllTransactionWithMetadataItems:(id)arg1;
- (void)_mergeMetadataItemsFromGetResponse;
- (id)_synchronouslyRunKVSTransaction:(id)arg1;
- (id)currentKVSTransaction;
- (id)newKVSGetAllTransactionSinceDomainVersion:(id)arg1;
- (void)_dataSourceCancelTransaction;
- (BOOL)_shouldStop;
- (void)setSyncInProgress:(BOOL)arg1;
- (BOOL)syncInProgress;
- (id)dataSourceTransactionContext;
- (void)_resetState;
- (id)reportedItemVersionForIdentifier;
- (id)metadataItemsToCommitToKVSStorage;
- (id)metadataItemsToCommitToDataSource;
- (id)metadataItemsFromKVSStorage;
- (id)metadataItemsFromDataSource;
- (void)setFatalSyncError:(id)arg1;
- (void)setCurrentKVSTransaction:(id)arg1;
- (void)setResponseDomainVersion:(id)arg1;
- (void)setDataSourceTransactionContext:(id)arg1;
- (void)setKvsController:(id)arg1;
- (void)setReportedItemVersionForIdentifier:(id)arg1;
- (void)setMetadataItemsToCommitToKVSStorage:(id)arg1;
- (void)setMetadataItemsToCommitToDataSource:(id)arg1;
- (void)setMetadataItemsFromKVSStorage:(id)arg1;
- (void)setMetadataItemsFromDataSource:(id)arg1;
- (id)dataForSetTransaction:(id)arg1 key:(id)arg2 version:(id*)arg3;
- (id)versionForGetTransaction:(id)arg1 key:(id)arg2;
- (id)keysForTransaction:(id)arg1;
- (id)sinceDomainVersionForTransaction:(id)arg1;
- (void)transaction:(id)arg1 didProcessResponseWithDomainVersion:(id)arg2;
- (void)transaction:(id)arg1 mergeData:(id)arg2 forKey:(id)arg3 domainVersion:(id)arg4 version:(id)arg5 mismatch:(BOOL)arg6 finishedBlock:(id)arg7;
- (void)transaction:(id)arg1 willProcessResponseWithDomainVersion:(id)arg2;
- (void)keyValueStoreController:(id)arg1 transactionDidFinish:(id)arg2;
- (void)keyValueStoreController:(id)arg1 transaction:(id)arg2 didCancelWithError:(id)arg3;
- (BOOL)keyValueStoreController:(id)arg1 transaction:(id)arg2 didFailWithError:(id)arg3;
- (BOOL)keyValueStoreController:(id)arg1 shouldScheduleTransaction:(id)arg2;
- (void)synchronizeWithCompletionHandler:(id)arg1;
- (id)initWithDataSource:(id)arg1 bagContext:(id)arg2;
- (void)cancel;
- (void)dealloc;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (void)setBagContext:(id)arg1;
- (id)bagContext;
- (void)timeout;

@end
