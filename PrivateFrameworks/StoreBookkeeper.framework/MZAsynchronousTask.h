/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSError, NSString, NSObject<OS_dispatch_source>, NSObject<OS_dispatch_queue>, MZTaskAssertion, NSMutableArray;

@interface MZAsynchronousTask : NSObject  {
    NSObject<OS_dispatch_queue> *_handlerQueue;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_source> *_timeoutTimer;
    BOOL _taskInvalidationDisabled;
    double _timeout;
    int _cancelType;
    id _result;
    NSError *_error;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _expirationHandler;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _finishedHandler;

    NSString *_debugDescription;
    MZTaskAssertion *_taskAssertion;
    NSMutableArray *_completions;
}

@property(copy) id finishedHandler;
@property(copy) id expirationHandler;
@property(retain) id result;
@property(retain) NSError * error;
@property int cancelType;
@property(copy) NSString * debugDescription;
@property(retain) MZTaskAssertion * taskAssertion;
@property(retain) NSMutableArray * completions;


- (id)taskAssertion;
- (void)endTaskOperation;
- (id)completions;
- (void)_invalidateAssertion:(BOOL)arg1;
- (id)expirationHandler;
- (void)_onQueueFireExpirationHandlerIfNecesary;
- (void)setTaskAssertion:(id)arg1;
- (void)setCancelType:(int)arg1;
- (void)setDebugDescription:(id)arg1;
- (void)setCompletions:(id)arg1;
- (void)beginTaskOperation;
- (void)finishTaskOperationWithResult:(id)arg1 error:(id)arg2;
- (void)invokeTaskCompletionBlocksWithBlock:(id)arg1;
- (void)setExpirationHandler:(id)arg1;
- (int)cancelType;
- (id)initWithHandlerQueue:(id)arg1 timeout:(double)arg2 debugDescription:(id)arg3;
- (void)addTaskCompletionBlock:(id)arg1;
- (void)setError:(id)arg1;
- (void)invalidate;
- (id)debugDescription;
- (id)description;
- (void)dealloc;
- (id)result;
- (void)setResult:(id)arg1;
- (void)_invalidateTimer;
- (id)finishedHandler;
- (void)setFinishedHandler:(id)arg1;
- (id)error;

@end
