/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MapKit.framework/MapKit
 */

@class UIView, MKRingView, UIAnimation;

@interface MKRingPositionView : MKRingView {
    UIAnimation *_boundsAnimation;
    UIView *_dissolveFromView;
    MKRingView *_dissolveToView;
    UIAnimation *_positionAnimation;
    UIAnimation *_rotationAnimation;
    BOOL _zooming;
}

@property(retain) UIAnimation *rotationAnimation; /* unknown property attribute: V_rotationAnimation */
@property(retain) UIAnimation *positionAnimation; /* unknown property attribute: V_positionAnimation */
@property(retain) UIAnimation *boundsAnimation; /* unknown property attribute: V_boundsAnimation */
@property(retain) MKRingView *dissolveToView; /* unknown property attribute: V_dissolveToView */
@property(retain) UIView *dissolveFromView; /* unknown property attribute: V_dissolveFromView */

+ (float)accuracyDiameter:(float)arg1 level:(NSUInteger)arg2;
+ (void)frameView:(id)arg1 initialDiameter:(float*)arg2 outerDiameter:(float*)arg3 innerDiameter:(float*)arg4;

- (void)_UI_updateBounds:(id)arg1 center:(id)arg2 duration:(double)arg3 dissolveLayer:(id)arg4;
- (void)animator:(id)arg1 stopAnimation:(id)arg2 fraction:(float)arg3;
- (id)boundsAnimation;
- (void)dealloc;
- (id)dissolveFromView;
- (id)dissolveToView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)playAcquiringUserPositionAnimation;
- (id)positionAnimation;
- (id)rotationAnimation;
- (void)setBoundsAnimation:(id)arg1;
- (void)setDissolveFromView:(id)arg1;
- (void)setDissolveToView:(id)arg1;
- (void)setMapType:(NSUInteger)arg1;
- (void)setPositionAnimation:(id)arg1;
- (void)setRotationAnimation:(id)arg1;
- (BOOL)shouldDisplayAccuracy:(double*)arg1 bounds:(id*)arg2;
- (void)startHovering;
- (void)stopPositioningAnimation;
- (void)stopSizingAnimation;
- (void)updateBounds:(id)arg1 center:(id)arg2 duration:(double)arg3 dissolveLayer:(id)arg4;
- (void)updateBounds:(id)arg1 center:(id)arg2 duration:(double)arg3;
- (void)zoomToBounds:(id)arg1 center:(id)arg2 dissolveLayer:(id)arg3;
- (void)zoomToBounds:(id)arg1 center:(id)arg2;
- (void)zoomToPoint:(id)arg1;

@end
