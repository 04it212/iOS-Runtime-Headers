/* Generated by RuntimeBrowser on iPhone OS 2.2.1
   Image: /System/Library/PrivateFrameworks/MapKit.framework/MapKit
 */

@class MKInnerCirclePositionView, MKMapLevelView, UITextField, UIScroller, MKRouteView, NSArray, MKMapViewPositioningChange, CLLocation, MKRingPositionView, <MKMapViewDelegate><MKMapViewDelegatePrivate>, UIImageView, MKRouteLoader, MKSearchResultManager, MKOverlayView, MKDotPositionView, NSTimer, MKSearchResult;



@interface MKMapViewInternal : NSObject 
{
    UIScroller *scroller;
    MKMapLevelView *standardMapLevelViews[18];
    MKMapLevelView *satelliteMapLevelViews[20];
    MKMapLevelView *hybridMapLevelViews[20];
    MKOverlayView *overlayView;
    MKSearchResultManager *searchManager;
    UIImageView *badgeView;
    MKRouteView *routeView;
    UIImageView *routePositionView;
    MKRouteLoader *routeLoader;
    MKRingPositionView *positionView;
    MKDotPositionView *trackingPositionView;
    MKInnerCirclePositionView *innerCirclePositionView;
    BOOL isShowingUserLocation;
    BOOL isCalculatingUserLocation;
    BOOL needToShowUserPosition;
    struct __GSEvent { } *mouseDownEvent;
    struct __GSEvent { } *mouseUpEvent;
    NSTimer *accessoryTimer;
    NSTimer *pinDropTimer;
    NSTimer *startEffectsTimer;
    <MKMapViewDelegate><MKMapViewDelegatePrivate> *delegate;
    NSInteger animationType;
    NSInteger animationTypeHistory;
    NSUInteger suspendedEffectsCount;
    struct CGSize { 
        float width; 
        float height; 
    } maximumSize;
    struct CGPoint { 
        float x; 
        float y; 
    } startOffset;
    struct CGPoint { 
        float x; 
        float y; 
    } endOffset;
    struct CGPoint { 
        float x; 
        float y; 
    } routePositionViewLongLat;
    struct CGPoint { 
        float x; 
        float y; 
    } routeCenterLongLat;
    NSInteger routeSummaryZoomLevel;
    struct CGPoint { 
        float x; 
        float y; 
    } doubleTapStartPosition;
    double doubleTapStartTime;
    double doubleTapDelay;
    NSInteger zoomType;
    NSUInteger mouseDownCount;
    BOOL callingScroller;
    NSUInteger eventMode;
    NSUInteger eventModeHistory;
    NSUInteger gestureCount;
    double lastGestureEndedInterval;
    NSUInteger mapType;
    NSInteger minZoomLevel;
    NSInteger maxZoomLevel;
    struct CGPoint { 
        float x; 
        float y; 
    } zoomLongLat;
    struct CGPoint { 
        float x; 
        float y; 
    } zoomStartWindowPoint;
    struct CGPoint { 
        float x; 
        float y; 
    } zoomEndWindowPoint;
    float startScale;
    float endScale;
    float prevScale;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } centeringRect;
    NSUInteger tileCount;
    NSUInteger levelViewLoadingCount;
    NSUInteger levelViewTrafficLoadingCount;
    struct CGPoint { 
        float x; 
        float y; 
    } billingPointLongLat;
    NSInteger billingPointZoomLevel;
    NSInteger searchMode;
    NSInteger trafficStatus;
    NSTimer *tileExpirationTimer;
    NSTimer *tilingTimer;
    BOOL trafficEnabled;
    BOOL isLoadingEnabled;
    BOOL showingRoute;
    BOOL needToShowRoute;
    BOOL allowsPulsatingTraffic;
    BOOL liveTrackingEnabled;
    BOOL liveTrackingSupported;
    BOOL liveTrackingAutoSelectZoomLevel;
    BOOL ignoreLocationUpdates;
    CLLocation *userLocation;
    NSInteger userLocationSource;
    BOOL useDisplayedUserLocationAccuracy;
    double displayedUserLocationAccuracy;
    BOOL persistFixedUserLocation;
    CLLocation *fixedUserLocation;
    NSInteger userPositionViewMode;
    NSTimer *hoverExpirationTimer;
    NSTimer *scrollToReCenterUserTimer;
    NSTimer *positioningChangeTimer;
    UITextField *debugView;
    double hoverStartTime;
    BOOL isRunningPositioningChange;
    float previousZoomLevel;
    BOOL liveSearchEnabled;
    double userLocationCoordinateChangedTime;
    BOOL didCompletePinLayout;
    NSInteger lastGesturePinTransitionZoomLevel;
    BOOL isSuspended;
    MKMapViewPositioningChange *positioningChange;
    NSInteger positionViewUpdateType;
    NSInteger restorePositionViewUpdateType;
    NSInteger endHoverLocationSource;
    BOOL suspendSearchResultProcessing;
    BOOL animateFlagWhileSuspendedResultProcessing;
    NSArray *searchResultsWhileSuspendedResultProcessing;
    MKSearchResult *selectedSearchResultWhileSuspendedResultProcessing;
    BOOL didStartDragging;
    BOOL didStartSmoothScrolling;
}



@end
