/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/EAFirmwareUpdater.framework/EAFirmwareUpdater
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSMutableData, NSObject<OS_dispatch_queue>, EAAccessory, iAUPServer, NSString, NSURL, EASession;

@interface EAFirmwareUpdater : MobileAssetUpdater <EAAccessoryDelegate, NSStreamDelegate> {
    unsigned int _productIDCode;
    EAAccessory *_accessory;
    NSString *_protocolString;
    EASession *_session;
    NSString *_bootloaderProtocol;
    NSString *_appProtocol;
    unsigned int _firmwareVersionMajor;
    unsigned int _firmwareVersionMinor;
    unsigned int _firmwareVersionRelease;
    NSString *_firmwareBundleFilename;
    NSURL *_firmwareBundleURL;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _applyCompletion;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _progressHandler;

    NSMutableData *_outputData;
    iAUPServer *_iAUPServer;
    NSObject<OS_dispatch_queue> *_eaNotificationDispatchQueue;
    BOOL _firmwareUpdateComplete;
    NSString *_updateBundleFilename;
    NSURL *_updateBundleURL;
}

@property unsigned int productIDCode;
@property(retain) EAAccessory * accessory;
@property(retain) NSString * protocolString;
@property(retain) EASession * session;
@property(retain) NSString * bootloaderProtocol;
@property(retain) NSString * appProtocol;
@property(retain) NSString * firmwareBundleFilename;
@property(retain) NSURL * firmwareBundleURL;
@property(copy) id applyCompletion;
@property(copy) id progressHandler;
@property(retain) iAUPServer * server;

+ (id)findAccessoryWithProductIDCode:(unsigned int)arg1;
+ (id)appProtocolStringWithProductIDCode:(unsigned int)arg1;
+ (id)bootloaderProtocolStringWithProductIDCode:(unsigned int)arg1;

- (id)openSession;
- (id)session;
- (void)setSession:(id)arg1;
- (id)progressHandler;
- (void)dealloc;
- (void)setServer:(id)arg1;
- (void)setProgressHandler:(id)arg1;
- (id)server;
- (void)stream:(id)arg1 handleEvent:(unsigned int)arg2;
- (id)writeData:(id)arg1;
- (id)accessory;
- (id)protocolString;
- (void)_accessoryDidDisconnect:(id)arg1;
- (void)accessoryDidDisconnect:(id)arg1;
- (void)updateProgress:(double)arg1;
- (unsigned int)productIDCode;
- (void)firmwareUpdateComplete:(id)arg1;
- (id)applyFirmware:(id)arg1 progress:(id)arg2;
- (id)validateAsset;
- (id)validateAssetAttributes:(id)arg1;
- (id)assetWithMaxVersion:(id)arg1;
- (id)queryPredicate;
- (id)overrideQueryPredicateFromDict:(id)arg1;
- (id)initWithProductIDCode:(unsigned int)arg1 assetType:(id)arg2;
- (void)handleInputData;
- (id)applyCompletion;
- (id)flushOutput;
- (void)updateComplete:(id)arg1;
- (void)_accessoryDidConnect:(id)arg1;
- (void)setApplyCompletion:(id)arg1;
- (id)firmwareBundleURL;
- (void)setFirmwareBundleURL:(id)arg1;
- (id)firmwareBundleFilename;
- (void)setFirmwareBundleFilename:(id)arg1;
- (id)appProtocol;
- (id)bootloaderProtocol;
- (void)setProtocolString:(id)arg1;
- (id)supportedProtocolForAccessory:(id)arg1;
- (void)setAppProtocol:(id)arg1;
- (void)setBootloaderProtocol:(id)arg1;
- (void)setAccessory:(id)arg1;
- (BOOL)findAccessory;
- (void)setProductIDCode:(unsigned int)arg1;

@end
