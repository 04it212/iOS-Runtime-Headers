/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebKit.framework/WebKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class WebViewPrivate;

@interface WebView : WAKView {
     /* Encoded args for previous method: {String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}12@0:4r^{KURL={String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}Biiiiiiiiii}8 */
     /* Encoded args for previous method: ^{Page={OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > >=^{HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > >}}{OwnPtr<WebCore::Chrome>=^{Chrome}}{OwnPtr<WebCore::SelectionController>=^{SelectionController}}{OwnPtr<WebCore::FocusController>=^{FocusController}}{OwnPtr<WebCore::Settings>=^{Settings}}{OwnPtr<WebCore::ProgressTracker>=^{ProgressTracker}}{RefPtr<WebCore::BackForwardList>=^{BackForwardList}}{RefPtr<WebCore::Frame>=^{Frame}}{RefPtr<WebCore::HistoryItem>=^{HistoryItem}}{RefPtr<WebCore::PluginData>=^{PluginData}}^{EditorClient}i{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}BBBBBfB{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}Bi{OwnPtr<WebCore::PageGroup>=^{PageGroup}}^{PageGroup}^{Debugger}IIdi{RefPtr<WebCore::SessionStorage>=^{SessionStorage}}}8@0:4 */
    WebViewPrivate *_private;
}

+ (id)MIMETypesShownAsHTML;
+ (id)_MIMETypeForFile:(id)arg1;
+ (NSUInteger)_cacheModel;
+ (BOOL)_canHandleRequest:(id)arg1 forMainFrame:(BOOL)arg2;
+ (BOOL)_canHandleRequest:(id)arg1;
+ (id)_decodeData:(id)arg1;
+ (NSUInteger)_didSetCacheModel;
+ (id)_generatedMIMETypeForURLScheme:(id)arg1;
+ (unsigned long)_glyphCacheIncrementalSize;
+ (unsigned long)_glyphCacheInitialSize;
+ (void)_makeAllWebViewsPerformSelector:(SEL)arg1;
+ (NSUInteger)_maxCacheModelInAnyInstance;
+ (id)_minimumRequiredSafariBuildNumber;
+ (void)_preferencesChangedNotification:(id)arg1;
+ (void)_preferencesRemovedNotification:(id)arg1;
+ (void)_preflightSpellChecker;
+ (void)_preflightSpellCheckerNow:(id)arg1;
+ (id)_productivityDocumentMIMETypes;
+ (void)_registerViewClass:(Class)arg1 representationClass:(Class)arg2 forURLScheme:(id)arg3;
+ (BOOL)_representationExistsForURLScheme:(id)arg1;
+ (void)_setAlwaysUsesComplexTextCodePath:(BOOL)arg1;
+ (void)_setCacheModel:(NSUInteger)arg1;
+ (void)_setGlyphCacheInitialSize:(unsigned long)arg1 andIncrementSize:(unsigned long)arg2;
+ (void)_setShouldUseFontSmoothing:(BOOL)arg1;
+ (void)_setUsesTestModeFocusRingColor:(BOOL)arg1;
+ (BOOL)_shouldUseFontSmoothing;
+ (id)_standardUserAgentWithApplicationName:(id)arg1;
+ (id)_supportedMIMETypes;
+ (void)_unregisterViewClassAndRepresentationClassForMIMEType:(id)arg1;
+ (BOOL)_usesTestModeFocusRingColor;
+ (BOOL)_viewClass:(Class*)arg1 andRepresentationClass:(Class*)arg2 forMIMEType:(id)arg3;
+ (BOOL)canShowFile:(id)arg1;
+ (BOOL)canShowMIMEType:(id)arg1;
+ (BOOL)canShowMIMETypeAsHTML:(id)arg1;
+ (void)enableWebThread;
+ (void)garbageCollectNow;
+ (void)initialize;
+ (void)registerURLSchemeAsLocal:(id)arg1;
+ (void)registerViewClass:(Class)arg1 representationClass:(Class)arg2 forMIMEType:(id)arg3;
+ (void)setMIMETypesShownAsHTML:(id)arg1;

- (id)UIDelegate;
- (id)_UIDelegateForSelector:(SEL)arg1;
- (id)_UIDelegateForwarder;
- (id)_UIKitDelegate;
- (id)_UIKitDelegateForwarder;
- (void)_addObject:(id)arg1 forIdentifier:(unsigned long)arg2;
- (void)_addToAllWebViewsSet;
- (BOOL)_allowsMessaging;
- (void)_attachScriptDebuggerToAllFrames;
- (BOOL)_becomingFirstResponderFromOutside;
- (void)_boundsChanged;
- (void)_cacheFrameLoadDelegateImplementations;
- (void)_cacheResourceLoadDelegateImplementations;
- (void)_cacheScriptDebugDelegateImplementations;
- (BOOL)_canResetZoom:(BOOL)arg1;
- (BOOL)_canZoomIn:(BOOL)arg1;
- (BOOL)_canZoomOut:(BOOL)arg1;
- (BOOL)_catchesDelegateExceptions;
- (BOOL)_clearBackForwardCache;
- (void)_clearDelegates;
- (void)_clearMainFrameName;
- (void)_close;
- (void)_closePluginDatabases;
- (void)_closeWindow;
- (void)_closeWithFastTeardown;
- (void)_commonInitializationWithFrameName:(id)arg1 groupName:(id)arg2 usesDocumentViews:(BOOL)arg3;
- (BOOL)_continuousCheckingAllowed;
- (BOOL)_cookieEnabled;
- (void)_destroyAllPlugIns;
- (void)_detachScriptDebuggerFromAllFrames;
- (void)_didFinishScrollingOrZooming;
- (void)_dispatchTileDidDraw:(id)arg1;
- (void)_dispatchUnloadEvent;
- (id)_displayURL;
- (id)_downloadURL:(id)arg1;
- (id)_editingDelegateForwarder;
- (id)_elementAtWindowPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)_executeCoreCommandByName:(id)arg1 value:(id)arg2;
- (struct CGSize { float x1; float x2; })_fixedLayoutSize;
- (id)_focusedFrame;
- (id)_formDelegate;
- (id)_formDelegateForSelector:(SEL)arg1;
- (id)_formDelegateForwarder;
- (id)_frameForCurrentSelection;
- (id)_frameViewAtWindowPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)_globalHistoryItem;
- (BOOL)_inFastImageScalingMode;
- (BOOL)_inViewSourceMode;
- (id)_initWithArguments:(id)arg1;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 frameName:(id)arg2 groupName:(id)arg3 usesDocumentViews:(BOOL)arg4;
- (void)_insertNewlineInQuotedContent;
- (BOOL)_isClosed;
- (BOOL)_isClosing;
- (BOOL)_isLoading;
- (BOOL)_isMIMETypeRegisteredAsPlugin:(id)arg1;
- (BOOL)_isPerformingProgrammaticFocus;
- (BOOL)_isStopping;
- (NSInteger)_keyboardUIMode;
- (void)_loadBackForwardListFromOtherView:(id)arg1;
- (void)_locked_performPlugInSelector:(SEL)arg1 inFrame:(id)arg2;
- (BOOL)_locked_plugInsAreRunningInFrame:(id)arg1;
- (id)_mainFrameOverrideEncoding;
- (void)_mouseDidMoveOverElement:(id)arg1 modifierFlags:(NSUInteger)arg2;
- (BOOL)_mustDrawUnionedRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 singleRects:(const struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2 count:(NSInteger)arg3;
- (BOOL)_needsOneShotDrawingSynchronization;
- (id)_objectForIdentifier:(unsigned long)arg1;
- (id)_openNewWindowWithRequest:(id)arg1;
- (void)_performResponderOperation:(SEL)arg1 with:(id)arg2;
- (id)_pluginForExtension:(id)arg1;
- (id)_pluginForMIMEType:(id)arg1;
- (BOOL)_pluginsAreRunning;
- (id)_policyDelegateForwarder;
- (void)_popPerformingProgrammaticFocus;
- (void)_preferencesChanged:(id)arg1;
- (void)_preferencesChangedNotification:(id)arg1;
- (void)_pushPerformingProgrammaticFocus;
- (float)_realZoomMultiplier;
- (BOOL)_realZoomMultiplierIsTextOnly;
- (void)_removeFromAllWebViewsSet;
- (void)_removeObjectForIdentifier:(unsigned long)arg1;
- (void)_replaceSelectionWithNode:(id)arg1 matchStyle:(BOOL)arg2;
- (void)_resetZoom:(id)arg1 isTextOnly:(BOOL)arg2;
- (id)_responderForResponderOperations;
- (void)_retrieveKeyboardUIModeFromPreferences:(id)arg1;
- (void)_scheduleViewUpdate;
- (id)_selectedOrMainFrame;
- (void)_setAllowsMessaging:(BOOL)arg1;
- (void)_setCatchesDelegateExceptions:(BOOL)arg1;
- (void)_setCookieEnabled:(BOOL)arg1;
- (void)_setCustomHTMLTokenizerChunkSize:(NSInteger)arg1;
- (void)_setCustomHTMLTokenizerTimeDelay:(double)arg1;
- (void)_setFixedLayoutSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_setFormDelegate:(id)arg1;
- (void)_setInViewSourceMode:(BOOL)arg1;
- (void)_setJavaScriptURLsAreAllowed:(BOOL)arg1;
- (void)_setNeedsOneShotDrawingSynchronization:(BOOL)arg1;
- (void)_setNetworkStateIsOnline:(BOOL)arg1;
- (void)_setShouldCacheFileURLs:(BOOL)arg1;
- (void)_setUIKitDelegate:(id)arg1;
- (void)_setUseFastImageScalingMode:(BOOL)arg1;
- (void)_setUsesLoaderCache:(BOOL)arg1;
- (void)_setZoomMultiplier:(float)arg1 isTextOnly:(BOOL)arg2;
- (BOOL)_shouldCacheFileURLs;
- (BOOL)_shouldChangeSelectedDOMRange:(id)arg1 toDOMRange:(id)arg2 affinity:(NSInteger)arg3 stillSelecting:(BOOL)arg4;
- (void)_startAllPlugIns;
- (void)_stopAllPlugIns;
- (void)_updateFocusedAndActiveState;
- (void)_updateFocusedAndActiveStateForFrame:(id)arg1;
- (struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; })_userAgentForURL:(const struct KURL { struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_1_1_1; } x1; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x2; NSInteger x3; NSInteger x4; NSInteger x5; NSInteger x6; NSInteger x7; NSInteger x8; NSInteger x9; NSInteger x10; NSInteger x11; NSInteger x12; }*)arg1;
- (BOOL)_usesDocumentViews;
- (BOOL)_usesLoaderCache;
- (BOOL)_viewClass:(Class*)arg1 andRepresentationClass:(Class*)arg2 forMIMEType:(id)arg3;
- (void)_viewWillDrawInternal;
- (id)_webMailDelegate;
- (id)_webcore_effectiveFirstResponder;
- (oneway void)_webcore_releaseOnWebThread;
- (void)_willStartScrollingOrZooming;
- (void)_windowDidBecomeKey:(id)arg1;
- (void)_windowDidResignKey:(id)arg1;
- (void)_windowWillClose:(id)arg1;
- (void)_windowWillOrderOnScreen:(id)arg1;
- (float)_zoomMultiplier:(BOOL)arg1;
- (BOOL)acceptsFirstResponder;
- (void)addCaretChangeListener:(id)arg1;
- (void)alignCenter:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignRight:(id)arg1;
- (BOOL)allowsUndo;
- (id)applicationNameForUserAgent;
- (void)applyStyle:(id)arg1;
- (BOOL)areMemoryCacheDelegateCallsEnabled;
- (id)assistedNode;
- (id)backForwardList;
- (struct CGColor { }*)backgroundColor;
- (BOOL)becomeFirstResponder;
- (BOOL)canGoBack;
- (BOOL)canGoForward;
- (BOOL)canMakeTextLarger;
- (BOOL)canMakeTextSmaller;
- (BOOL)canMakeTextStandardSize;
- (BOOL)canResetPageZoom;
- (BOOL)canZoomPageIn;
- (BOOL)canZoomPageOut;
- (void)capitalizeWord:(id)arg1;
- (id)caretChangeListener;
- (id)caretChangeListeners;
- (void)caretChanged;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (void)changeBaseWritingDirection:(id)arg1;
- (void)changeBaseWritingDirectionToLTR:(id)arg1;
- (void)changeBaseWritingDirectionToRTL:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)changeDocumentBackgroundColor:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (void)clearText:(id)arg1;
- (void)close;
- (void)complete:(id)arg1;
- (id)computedStyleForElement:(id)arg1 pseudoElement:(id)arg2;
- (void)copy:(id)arg1;
- (void)copyFont:(id)arg1;
- (id)currentNodeHighlight;
- (id)customTextEncodingName;
- (id)customUserAgent;
- (void)cut:(id)arg1;
- (void)dealloc;
- (BOOL)defersCallbacks;
- (void)delete:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteSelection;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (id)documentViewAtWindowPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)downloadDelegate;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)drawSingleRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)drawsBackground;
- (id)editableDOMRangeForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)editingDelegate;
- (id)elementAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (double)estimatedProgress;
- (void)finalize;
- (id)frameLoadDelegate;
- (void)goBack:(id)arg1;
- (BOOL)goBack;
- (void)goForward:(id)arg1;
- (BOOL)goForward;
- (BOOL)goToBackForwardItem:(id)arg1;
- (id)groupName;
- (id)hostWindow;
- (void)ignoreSpelling:(id)arg1;
- (void)indent:(id)arg1;
- (id)initSimpleHTMLDocumentWithStyle:(id)arg1 editable:(BOOL)arg2 withFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 withPreferences:(id)arg4;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 frameName:(id)arg2 groupName:(id)arg3;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertText:(id)arg1;
- (BOOL)isEditable;
- (BOOL)isFlipped;
- (BOOL)isLoading;
- (BOOL)isSelectTrailingWhitespaceEnabled;
- (void)lowercaseWord:(id)arg1;
- (id)mainFrame;
- (id)mainFrameDocument;
- (id)mainFrameTitle;
- (id)mainFrameURL;
- (BOOL)maintainsInactiveSelection;
- (void)makeBaseWritingDirectionLeftToRight:(id)arg1;
- (void)makeBaseWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextLarger:(id)arg1;
- (void)makeTextSmaller:(id)arg1;
- (void)makeTextStandardSize:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (id)mediaStyle;
- (float)mediaVolume;
- (void)moveBackward:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfSentence:(id)arg1;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfSentence:(id)arg1;
- (void)moveToEndOfSentenceAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)outdent:(id)arg1;
- (struct Page { struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > > { struct HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > {} *x_1_1_1; } x1; struct OwnPtr<WebCore::Chrome> { struct Chrome {} *x_2_1_1; } x2; struct OwnPtr<WebCore::SelectionController> { struct SelectionController {} *x_3_1_1; } x3; struct OwnPtr<WebCore::FocusController> { struct FocusController {} *x_4_1_1; } x4; struct OwnPtr<WebCore::Settings> { struct Settings {} *x_5_1_1; } x5; struct OwnPtr<WebCore::ProgressTracker> { struct ProgressTracker {} *x_6_1_1; } x6; struct RefPtr<WebCore::BackForwardList> { struct BackForwardList {} *x_7_1_1; } x7; struct RefPtr<WebCore::Frame> { struct Frame {} *x_8_1_1; } x8; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_9_1_1; } x9; struct RefPtr<WebCore::PluginData> { struct PluginData {} *x_10_1_1; } x10; struct EditorClient {} *x11; NSInteger x12; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_13_1_1; } x13; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x14; void*x15; void*x16; void*x17; void*x18; float x19; void*x20; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_21_1_1; } x21; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_22_1_1; } x22; void*x23; NSInteger x24; struct OwnPtr<WebCore::PageGroup> { struct PageGroup {} *x_25_1_1; } x25; struct PageGroup {} *x26; struct Debugger {} *x27; NSUInteger x28; NSUInteger x29; double x30; NSInteger x31; struct RefPtr<WebCore::SessionStorage> { struct SessionStorage {} *x_32_1_1; } x32; }*)page;
- (void)pageDown:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (float)pageSizeMultiplier;
- (void)pageUp:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)pasteAsRichText:(id)arg1;
- (void)pasteFont:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (id)policyDelegate;
- (id)preferences;
- (id)preferencesIdentifier;
- (void)registerForEditingDelegateNotification:(id)arg1 selector:(SEL)arg2;
- (oneway void)release;
- (void)reload:(id)arg1;
- (void)reloadFromOrigin:(id)arg1;
- (void)removeAllCaretChangeListeners;
- (void)removeCaretChangeListener:(id)arg1;
- (void)replaceSelectionWithArchive:(id)arg1;
- (void)replaceSelectionWithMarkupString:(id)arg1;
- (void)replaceSelectionWithNode:(id)arg1;
- (void)replaceSelectionWithText:(id)arg1;
- (void)resetPageZoom:(id)arg1;
- (id)resourceLoadDelegate;
- (id)scriptDebugDelegate;
- (void)scrollDOMRangeToVisible:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectSentence:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectWord:(id)arg1;
- (id)selectedDOMRange;
- (id)selectedFrame;
- (NSInteger)selectionAffinity;
- (void)setAllowsUndo:(BOOL)arg1;
- (void)setApplicationNameForUserAgent:(id)arg1;
- (void)setBackgroundColor:(struct CGColor { }*)arg1;
- (void)setCaretChangeListener:(id)arg1;
- (void)setCurrentNodeHighlight:(id)arg1;
- (void)setCustomTextEncodingName:(id)arg1;
- (void)setCustomUserAgent:(id)arg1;
- (void)setDefersCallbacks:(BOOL)arg1;
- (void)setDownloadDelegate:(id)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setEditable:(BOOL)arg1;
- (void)setEditingDelegate:(id)arg1;
- (void)setFrameLoadDelegate:(id)arg1;
- (void)setGroupName:(id)arg1;
- (void)setHostWindow:(id)arg1;
- (void)setMainFrameDocumentReady:(BOOL)arg1;
- (void)setMainFrameURL:(id)arg1;
- (void)setMaintainsBackForwardList:(BOOL)arg1;
- (void)setMark:(id)arg1;
- (void)setMediaStyle:(id)arg1;
- (void)setMediaVolume:(float)arg1;
- (void)setMemoryCacheDelegateCallsEnabled:(BOOL)arg1;
- (void)setNextKeyView:(id)arg1;
- (void)setPageSizeMultiplier:(float)arg1;
- (void)setPolicyDelegate:(id)arg1;
- (void)setPreferences:(id)arg1;
- (void)setPreferencesIdentifier:(id)arg1;
- (void)setResourceLoadDelegate:(id)arg1;
- (void)setScriptDebugDelegate:(id)arg1;
- (void)setSelectTrailingWhitespaceEnabled:(BOOL)arg1;
- (void)setSelectedDOMRange:(id)arg1 affinity:(NSInteger)arg2;
- (void)setShouldCloseWithWindow:(BOOL)arg1;
- (void)setShouldUpdateWhileOffscreen:(BOOL)arg1;
- (void)setSmartInsertDeleteEnabled:(BOOL)arg1;
- (void)setTabKeyCyclesThroughElements:(BOOL)arg1;
- (void)setTextSizeMultiplier:(float)arg1;
- (void)setTypingStyle:(id)arg1;
- (void)setUIDelegate:(id)arg1;
- (void)setUserStyleSheet:(id)arg1;
- (void)setUsesPageCache:(BOOL)arg1;
- (void)setWebMailDelegate:(id)arg1;
- (BOOL)shouldClose;
- (BOOL)shouldCloseWithWindow;
- (BOOL)shouldUpdateWhileOffscreen;
- (void)showGuessPanel:(id)arg1;
- (BOOL)smartInsertDeleteEnabled;
- (void)startSpeaking:(id)arg1;
- (void)stopLoading:(id)arg1;
- (void)stopLoadingAndClear;
- (void)stopSpeaking:(id)arg1;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (id)styleDeclarationWithText:(id)arg1;
- (void)subscript:(id)arg1;
- (void)superscript:(id)arg1;
- (BOOL)supportsTextEncoding;
- (void)swapWithMark:(id)arg1;
- (BOOL)tabKeyCyclesThroughElements;
- (void)takeFindStringFromSelection:(id)arg1;
- (void)takeStringURLFrom:(id)arg1;
- (id)textIteratorForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (float)textSizeMultiplier;
- (void)toggleBaseWritingDirection:(id)arg1;
- (void)transpose:(id)arg1;
- (id)typingStyle;
- (void)underline:(id)arg1;
- (id)undoManager;
- (void)unscript:(id)arg1;
- (void)uppercaseWord:(id)arg1;
- (id)userAgentForURL:(id)arg1;
- (BOOL)usesPageCache;
- (void)viewDidMoveToSuperview;
- (void)viewWillDraw;
- (void)viewWillMoveToSuperview:(id)arg1;
- (id)windowScriptObject;
- (void)yank:(id)arg1;
- (void)yankAndSelect:(id)arg1;
- (void)zoomPageIn:(id)arg1;
- (void)zoomPageOut:(id)arg1;

@end
