/* Generated by RuntimeBrowser on iPhone OS 4.2.1
   Image: /System/Library/PrivateFrameworks/WebKit.framework/WebKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class WebFramePrivate;



@interface WebFrame : NSObject 
{
    WebFramePrivate *_private;
}

+ (void)_createMainFrameWithPage:(struct Page { struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > > { struct HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > {} *x_1_1_1; } x1; struct OwnPtr<WebCore::Chrome> { struct Chrome {} *x_2_1_1; } x2; struct OwnPtr<WebCore::SelectionController> { struct SelectionController {} *x_3_1_1; } x3; struct OwnPtr<WebCore::FocusController> { struct FocusController {} *x_4_1_1; } x4; struct OwnPtr<WebCore::InspectorController> { struct InspectorController {} *x_5_1_1; } x5; struct OwnPtr<WebCore::Settings> { struct Settings {} *x_6_1_1; } x6; struct OwnPtr<WebCore::ProgressTracker> { struct ProgressTracker {} *x_7_1_1; } x7; struct RefPtr<WebCore::BackForwardList> { struct BackForwardList {} *x_8_1_1; } x8; struct RefPtr<WebCore::Frame> { struct Frame {} *x_9_1_1; } x9; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_10_1_1; } x10; struct RefPtr<WebCore::PluginData> { struct PluginData {} *x_11_1_1; } x11; struct RefPtr<WebCore::RenderTheme> { struct RenderTheme {} *x_12_1_1; } x12; struct EditorClient {} *x13; NSInteger x14; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_15_1_1; } x15; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; float x22; void*x23; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_24_1_1; } x24; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_25_1_1; } x25; void*x26; NSInteger x27; struct OwnPtr<WebCore::PageGroup> { struct PageGroup {} *x_28_1_1; } x28; struct PageGroup {} *x29; struct Debugger {} *x30; double x31; NSInteger x32; void*x33; struct OwnPtr<WebCore::PluginHalter> { struct PluginHalter {} *x_34_1_1; } x34; struct RefPtr<WebCore::StorageNamespace> { struct StorageNamespace {} *x_35_1_1; } x35; }*)arg1 frameName:(const struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg2 frameView:(id)arg3;
     /* Encoded args for previous method: v20@0:4^{Page={OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > >=^{HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > >}}{OwnPtr<WebCore::Chrome>=^{Chrome}}{OwnPtr<WebCore::SelectionController>=^{SelectionController}}{OwnPtr<WebCore::FocusController>=^{FocusController}}{OwnPtr<WebCore::InspectorController>=^{InspectorController}}{OwnPtr<WebCore::Settings>=^{Settings}}{OwnPtr<WebCore::ProgressTracker>=^{ProgressTracker}}{RefPtr<WebCore::BackForwardList>=^{BackForwardList}}{RefPtr<WebCore::Frame>=^{Frame}}{RefPtr<WebCore::HistoryItem>=^{HistoryItem}}{RefPtr<WebCore::PluginData>=^{PluginData}}{RefPtr<WebCore::RenderTheme>=^{RenderTheme}}^{EditorClient}i{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}BBBBBBfB{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}Bi{OwnPtr<WebCore::PageGroup>=^{PageGroup}}^{PageGroup}^{Debugger}diB{OwnPtr<WebCore::PluginHalter>=^{PluginHalter}}{RefPtr<WebCore::StorageNamespace>=^{StorageNamespace}}}8r^{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}12@16 */

+ (struct PassRefPtr<WebCore::Frame> { struct Frame {} *x1; })_createSubframeWithOwnerElement:(struct HTMLFrameOwnerElement { int (**x1)(); int (**x2)(); NSInteger x3; struct Node {} *x4; struct WeakGCPtr<WebCore::DOMObject> { struct DOMObject {} *x_5_1_1; } x5; struct Document {} *x6; struct Node {} *x7; struct Node {} *x8; struct RenderObject {} *x9; NSUInteger x10; struct Node {} *x11; struct Node {} *x12; struct QualifiedName { struct QualifiedNameImpl {} *x_13_1_1; } x13; struct RefPtr<WebCore::NamedNodeMap> { struct NamedNodeMap {} *x_14_1_1; } x14; struct RefPtr<WebCore::CSSMutableStyleDeclaration> { struct CSSMutableStyleDeclaration {} *x_15_1_1; } x15; struct Frame {} *x16; NSInteger x17; }*)arg1 frameName:(const struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg2 frameView:(id)arg3;
+ (void)_createMainFrameWithSimpleHTMLDocumentWithPage:(struct Page { struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > > { struct HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > {} *x_1_1_1; } x1; struct OwnPtr<WebCore::Chrome> { struct Chrome {} *x_2_1_1; } x2; struct OwnPtr<WebCore::SelectionController> { struct SelectionController {} *x_3_1_1; } x3; struct OwnPtr<WebCore::FocusController> { struct FocusController {} *x_4_1_1; } x4; struct OwnPtr<WebCore::InspectorController> { struct InspectorController {} *x_5_1_1; } x5; struct OwnPtr<WebCore::Settings> { struct Settings {} *x_6_1_1; } x6; struct OwnPtr<WebCore::ProgressTracker> { struct ProgressTracker {} *x_7_1_1; } x7; struct RefPtr<WebCore::BackForwardList> { struct BackForwardList {} *x_8_1_1; } x8; struct RefPtr<WebCore::Frame> { struct Frame {} *x_9_1_1; } x9; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_10_1_1; } x10; struct RefPtr<WebCore::PluginData> { struct PluginData {} *x_11_1_1; } x11; struct RefPtr<WebCore::RenderTheme> { struct RenderTheme {} *x_12_1_1; } x12; struct EditorClient {} *x13; NSInteger x14; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_15_1_1; } x15; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; float x22; void*x23; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_24_1_1; } x24; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_25_1_1; } x25; void*x26; NSInteger x27; struct OwnPtr<WebCore::PageGroup> { struct PageGroup {} *x_28_1_1; } x28; struct PageGroup {} *x29; struct Debugger {} *x30; double x31; NSInteger x32; void*x33; struct OwnPtr<WebCore::PluginHalter> { struct PluginHalter {} *x_34_1_1; } x34; struct RefPtr<WebCore::StorageNamespace> { struct StorageNamespace {} *x_35_1_1; } x35; }*)arg1 frameView:(id)arg2 withStyle:(id)arg3 editable:(BOOL)arg4;
     /* Encoded args for previous method: v24@0:4^{Page={OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > >=^{HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > >}}{OwnPtr<WebCore::Chrome>=^{Chrome}}{OwnPtr<WebCore::SelectionController>=^{SelectionController}}{OwnPtr<WebCore::FocusController>=^{FocusController}}{OwnPtr<WebCore::InspectorController>=^{InspectorController}}{OwnPtr<WebCore::Settings>=^{Settings}}{OwnPtr<WebCore::ProgressTracker>=^{ProgressTracker}}{RefPtr<WebCore::BackForwardList>=^{BackForwardList}}{RefPtr<WebCore::Frame>=^{Frame}}{RefPtr<WebCore::HistoryItem>=^{HistoryItem}}{RefPtr<WebCore::PluginData>=^{PluginData}}{RefPtr<WebCore::RenderTheme>=^{RenderTheme}}^{EditorClient}i{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}BBBBBBfB{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}Bi{OwnPtr<WebCore::PageGroup>=^{PageGroup}}^{PageGroup}^{Debugger}diB{OwnPtr<WebCore::PluginHalter>=^{PluginHalter}}{RefPtr<WebCore::StorageNamespace>=^{StorageNamespace}}}8@12@16c20 */

+ (id)stringWithData:(id)arg1 textEncodingName:(id)arg2;
+ (struct PassRefPtr<WebCore::Frame> { struct Frame {} *x1; })_createFrameWithPage:(struct Page { struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > > { struct HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > {} *x_1_1_1; } x1; struct OwnPtr<WebCore::Chrome> { struct Chrome {} *x_2_1_1; } x2; struct OwnPtr<WebCore::SelectionController> { struct SelectionController {} *x_3_1_1; } x3; struct OwnPtr<WebCore::FocusController> { struct FocusController {} *x_4_1_1; } x4; struct OwnPtr<WebCore::InspectorController> { struct InspectorController {} *x_5_1_1; } x5; struct OwnPtr<WebCore::Settings> { struct Settings {} *x_6_1_1; } x6; struct OwnPtr<WebCore::ProgressTracker> { struct ProgressTracker {} *x_7_1_1; } x7; struct RefPtr<WebCore::BackForwardList> { struct BackForwardList {} *x_8_1_1; } x8; struct RefPtr<WebCore::Frame> { struct Frame {} *x_9_1_1; } x9; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_10_1_1; } x10; struct RefPtr<WebCore::PluginData> { struct PluginData {} *x_11_1_1; } x11; struct RefPtr<WebCore::RenderTheme> { struct RenderTheme {} *x_12_1_1; } x12; struct EditorClient {} *x13; NSInteger x14; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_15_1_1; } x15; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; float x22; void*x23; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_24_1_1; } x24; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_25_1_1; } x25; void*x26; NSInteger x27; struct OwnPtr<WebCore::PageGroup> { struct PageGroup {} *x_28_1_1; } x28; struct PageGroup {} *x29; struct Debugger {} *x30; double x31; NSInteger x32; void*x33; struct OwnPtr<WebCore::PluginHalter> { struct PluginHalter {} *x_34_1_1; } x34; struct RefPtr<WebCore::StorageNamespace> { struct StorageNamespace {} *x_35_1_1; } x35; }*)arg1 frameName:(const struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg2 frameView:(id)arg3 ownerElement:(struct HTMLFrameOwnerElement { int (**x1)(); int (**x2)(); NSInteger x3; struct Node {} *x4; struct WeakGCPtr<WebCore::DOMObject> { struct DOMObject {} *x_5_1_1; } x5; struct Document {} *x6; struct Node {} *x7; struct Node {} *x8; struct RenderObject {} *x9; NSUInteger x10; struct Node {} *x11; struct Node {} *x12; struct QualifiedName { struct QualifiedNameImpl {} *x_13_1_1; } x13; struct RefPtr<WebCore::NamedNodeMap> { struct NamedNodeMap {} *x_14_1_1; } x14; struct RefPtr<WebCore::CSSMutableStyleDeclaration> { struct CSSMutableStyleDeclaration {} *x_15_1_1; } x15; struct Frame {} *x16; NSInteger x17; }*)arg4;
     /* Encoded args for previous method: {PassRefPtr<WebCore::Frame>=^{Frame}}24@0:4^{Page={OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > >=^{HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > >}}{OwnPtr<WebCore::Chrome>=^{Chrome}}{OwnPtr<WebCore::SelectionController>=^{SelectionController}}{OwnPtr<WebCore::FocusController>=^{FocusController}}{OwnPtr<WebCore::InspectorController>=^{InspectorController}}{OwnPtr<WebCore::Settings>=^{Settings}}{OwnPtr<WebCore::ProgressTracker>=^{ProgressTracker}}{RefPtr<WebCore::BackForwardList>=^{BackForwardList}}{RefPtr<WebCore::Frame>=^{Frame}}{RefPtr<WebCore::HistoryItem>=^{HistoryItem}}{RefPtr<WebCore::PluginData>=^{PluginData}}{RefPtr<WebCore::RenderTheme>=^{RenderTheme}}^{EditorClient}i{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}BBBBBBfB{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}Bi{OwnPtr<WebCore::PageGroup>=^{PageGroup}}^{PageGroup}^{Debugger}diB{OwnPtr<WebCore::PluginHalter>=^{PluginHalter}}{RefPtr<WebCore::StorageNamespace>=^{StorageNamespace}}}8r^{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}12@16^{HTMLFrameOwnerElement=^^?^^?i^{Node}{WeakGCPtr<WebCore::DOMObject>=^{DOMObject}}^{Document}^{Node}^{Node}^{RenderObject}I^{Node}^{Node}{QualifiedName=^{QualifiedNameImpl}}{RefPtr<WebCore::NamedNodeMap>=^{NamedNodeMap}}{RefPtr<WebCore::CSSMutableStyleDeclaration>=^{CSSMutableStyleDeclaration}}^{Frame}i}20 */


- (BOOL)needsLayout;
- (void)forceLayoutAdjustingViewSize:(BOOL)arg1;
- (struct OpaqueJSContext { }*)globalContext;
- (void)loadArchive:(id)arg1;
- (struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; NSInteger x_1_1_2; unsigned int x_1_1_3 : 2; unsigned int x_1_1_4 : 1; } x1; NSInteger x2; })closestWordBoundary:(struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; NSInteger x_1_1_2; unsigned int x_1_1_3 : 2; unsigned int x_1_1_4 : 1; } x1; NSInteger x2; })arg1;
- (BOOL)setSelectionWithBasePoint:(struct CGPoint { float x1; float x2; })arg1 extentPoint:(struct CGPoint { float x1; float x2; })arg2 baseIsStart:(BOOL)arg3;
- (void)ensureRangedSelectionContainsInitialStartPoint:(struct CGPoint { float x1; float x2; })arg1 initialEndPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)expandSelectionToSentence;
- (struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; NSInteger x_1_1_2; unsigned int x_1_1_3 : 2; unsigned int x_1_1_4 : 1; } x1; NSInteger x2; })visiblePositionForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)selectionRectsForCoreRange:(struct Range { NSInteger x1; struct RefPtr<WebCore::Document> { struct Document {} *x_2_1_1; } x2; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_3_1_1; NSInteger x_3_1_2; struct Node {} *x_3_1_3; } x3; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_4_1_1; NSInteger x_4_1_2; struct Node {} *x_4_1_3; } x4; }*)arg1;
- (BOOL)setSelectionWithBasePoint:(struct CGPoint { float x1; float x2; })arg1 extentPoint:(struct CGPoint { float x1; float x2; })arg2 baseIsStart:(BOOL)arg3 allowFlipping:(BOOL)arg4;
- (void)_attachScriptDebugger;
- (void)_detachScriptDebugger;
- (void)_clearCoreFrame;
- (void)_updateBackgroundAndUpdatesWhileOffscreen;
- (void)_setInternalLoadDelegate:(id)arg1;
- (id)_internalLoadDelegate;
- (void)_unmarkAllBadGrammar;
- (void)_unmarkAllMisspellings;
- (void)_clearSelectionInOtherFrames;
- (BOOL)_isCommitting;
- (void)_setIsCommitting:(BOOL)arg1;
- (id)_markupStringFromRange:(id)arg1 nodes:(id*)arg2;
- (id)_selectedString;
- (void)_drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 contentsOnly:(BOOL)arg2;
- (id)_computePageRectsWithPrintWidthScaleFactor:(float)arg1 printHeight:(float)arg2;
- (BOOL)_getVisibleRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg1;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1;
- (void)_scrollDOMRangeToVisible:(id)arg1;
- (void)_scrollDOMRangeToVisible:(id)arg1 withInset:(float)arg2;
- (id)_accessibilityTree;
- (NSInteger)_selectionGranularity;
- (id)_markDOMRange;
- (id)_smartDeleteRangeForProposedRange:(id)arg1;
- (id)_documentFragmentWithNodesAsParagraphs:(id)arg1;
- (void)_replaceSelectionWithNode:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (void)_insertParagraphSeparatorInQuotedContent;
- (id)_typingStyle;
- (void)_setTypingStyle:(id)arg1 withUndoAction:(NSInteger)arg2;
- (BOOL)_canSaveAsWebArchive;
- (void)_receivedData:(id)arg1 textEncodingName:(id)arg2;
- (void)_setShouldCreateRenderers:(BOOL)arg1;
- (BOOL)_isFrameSet;
- (BOOL)_firstLayoutDone;
- (BOOL)_loadsSynchronously;
- (id)_rectsForRange:(id)arg1;
- (id)_selectionRangeForFirstPoint:(struct CGPoint { float x1; float x2; })arg1 secondPoint:(struct CGPoint { float x1; float x2; })arg2;
- (id)_selectionRangeForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)_isDisplayingStandaloneImage;
- (NSUInteger)_pendingFrameUnloadEventCount;
- (id)fetchApplicationIcon:(id)arg1 selector:(SEL)arg2;
- (void)_setIsDisconnected:(/* Warning: Unrecognized filer type: 'B' using 'void*' */ void*)arg1;
     /* Encoded args for previous method: v12@0:4B8 */

- (void)_setExcludeFromTextSearch:(/* Warning: Unrecognized filer type: 'B' using 'void*' */ void*)arg1;
     /* Encoded args for previous method: v12@0:4B8 */

- (BOOL)_pauseAnimation:(id)arg1 onNode:(id)arg2 atTime:(double)arg3;
- (BOOL)_pauseTransitionOfProperty:(id)arg1 onNode:(id)arg2 atTime:(double)arg3;
- (BOOL)_pauseSVGAnimation:(id)arg1 onSMILNode:(id)arg2 atTime:(double)arg3;
- (NSUInteger)_numberOfActiveAnimations;
- (BOOL)_has3DContent;
- (NSUInteger)formElementsCharacterCount;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })selectedNSRange;
- (void)_setSelectionFromNone;
- (void)_restoreViewState;
- (void)_saveViewState;
- (struct CGSize { float x1; float x2; })renderedSizeOfNode:(id)arg1 constrainedToWidth:(float)arg2;
- (BOOL)hasCustomViewportArguments;
- (void)clearCustomViewportArguments;
- (id)viewportArguments;
- (NSInteger)layoutCount;
- (BOOL)isTelephoneNumberParsingEnabled;
- (BOOL)mediaDataLoadsAutomatically;
- (void)setMediaDataLoadsAutomatically:(BOOL)arg1;
- (BOOL)webGLEnabled;
- (void)setWebGLEnabled:(BOOL)arg1;
- (BOOL)spaceFollowsWordInRange:(id)arg1;
- (id)wordsInCurrentParagraph;
- (BOOL)selectionAtSentenceStart;
- (void)recursiveSetUpdateAppearanceEnabled:(BOOL)arg1;
- (void)getPPTStatsWithParseCount:(NSUInteger*)arg1 withLayoutCount:(NSUInteger*)arg2 withForcedLayoutCount:(NSUInteger*)arg3 withParseDuration:(double*)arg4 withLayoutDuration:(double*)arg5;
- (void)clearPPTStats;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1 forceUserGesture:(BOOL)arg2;
- (void)_replaceSelectionWithText:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (void)_replaceSelectionWithMarkupString:(id)arg1 baseURLString:(id)arg2 selectReplacement:(BOOL)arg3 smartReplace:(BOOL)arg4;
- (id)_cacheabilityDictionary;
- (BOOL)_allowsFollowingLink:(id)arg1;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1 withGlobalObject:(struct OpaqueJSValue { }*)arg2 inScriptWorld:(id)arg3;
- (struct OpaqueJSContext { }*)_globalContextForScriptWorld:(id)arg1;
- (void)setAccessibleName:(id)arg1;
- (id)_layerTreeAsText;
- (void)_dispatchDidReceiveTitle:(id)arg1;
- (id)initWithName:(id)arg1 webFrameView:(id)arg2 webView:(id)arg3;
- (id)frameElement;
- (id)provisionalDataSource;
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
- (void)reloadFromOrigin;
- (id)findFrameNamed:(id)arg1;
- (id)windowObject;
- (BOOL)isSingleLine;
- (struct Frame { NSInteger x1; struct Page {} *x2; struct FrameTree { struct Frame {} *x_3_1_1; struct Frame {} *x_3_1_2; struct AtomicString { struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_3_2_1; } x_3_1_3; struct RefPtr<WebCore::Frame> { struct Frame {} *x_4_2_1; } x_3_1_4; struct Frame {} *x_3_1_5; struct RefPtr<WebCore::Frame> { struct Frame {} *x_6_2_1; } x_3_1_6; struct Frame {} *x_3_1_7; NSUInteger x_3_1_8; } x3; struct FrameLoader { int (**x_4_1_1)(); struct Frame {} *x_4_1_2; struct FrameLoaderClient {} *x_4_1_3; struct PolicyChecker { struct Frame {} *x_4_2_1; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x_4_2_2; void*x_4_2_3; NSInteger x_4_2_4; struct PolicyCallback { struct ResourceRequest { struct KURL { struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_7_1; } x_1_6_1; } x_1_5_1; unsigned int x_1_5_2 : 1; unsigned int x_1_5_3 : 1; NSInteger x_1_5_4; NSInteger x_1_5_5; NSInteger x_1_5_6; NSInteger x_1_5_7; NSInteger x_1_5_8; NSInteger x_1_5_9; NSInteger x_1_5_10; NSInteger x_1_5_11; NSInteger x_1_5_12; NSInteger x_1_5_13; } x_1_4_1; NSInteger x_1_4_2; double x_1_4_3; struct KURL { struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_7_1; } x_1_6_1; } x_4_5_1; unsigned int x_4_5_2 : 1; unsigned int x_4_5_3 : 1; NSInteger x_4_5_4; NSInteger x_4_5_5; NSInteger x_4_5_6; NSInteger x_4_5_7; NSInteger x_4_5_8; NSInteger x_4_5_9; NSInteger x_4_5_10; NSInteger x_4_5_11; NSInteger x_4_5_12; NSInteger x_4_5_13; } x_1_4_4; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_6_1; } x_5_5_1; } x_1_4_5; struct HTTPHeaderMap { struct HashTable<WebCore::AtomicString,std::pair<WebCore::AtomicString, WebCore::String>,WTF::PairFirstExtractor<std::pair<WebCore::AtomicString, WebCore::String> >,WebCore::CaseFoldingHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::AtomicString>, WTF::HashTraits<WebCore::String> >,WTF::HashTraits<WebCore::AtomicString> > { struct pair<WebCore::AtomicString,WebCore::String> {} *x_1_6_1; NSInteger x_1_6_2; NSInteger x_1_6_3; NSInteger x_1_6_4; NSInteger x_1_6_5; } x_6_5_1; } x_1_4_6; struct Vector<WebCore::String,0ul> { NSUInteger x_7_5_1; struct VectorBuffer<WebCore::String,0ul> { struct String {} *x_2_6_1; NSUInteger x_2_6_2; } x_7_5_2; } x_1_4_7; struct RefPtr<WebCore::FormData> { struct FormData {} *x_8_5_1; } x_1_4_8; void*x_1_4_9; void*x_1_4_10; void*x_1_4_11; void*x_1_4_12; NSInteger x_1_4_13; NSInteger x_1_4_14; void*x_1_4_15; struct RetainPtr<NSURLRequest> { id x_16_5_1; } x_1_4_16; } x_5_3_1; struct RefPtr<WebCore::FormState> { struct FormState {} *x_2_4_1; } x_5_3_2; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_5_1; } x_3_4_1; } x_5_3_3; int (*x_5_3_4)(); int (*x_5_3_5)(); int (*x_5_3_6)(); void *x_5_3_7; } x_4_2_5; } x_4_1_4; struct HistoryController { struct Frame {} *x_5_2_1; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_2_3_1; } x_5_2_2; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_3_3_1; } x_5_2_3; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_4_3_1; } x_5_2_4; } x_4_1_5; struct ResourceLoadNotifier { struct Frame {} *x_6_2_1; } x_4_1_6; struct DocumentWriter { struct Frame {} *x_7_2_1; void*x_7_2_2; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_4_1; } x_3_3_1; } x_7_2_3; void*x_7_2_4; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_4_1; } x_5_3_1; } x_7_2_5; struct RefPtr<WebCore::TextResourceDecoder> { struct TextResourceDecoder {} *x_6_3_1; } x_7_2_6; } x_4_1_7; NSInteger x_4_1_8; NSInteger x_4_1_9; struct RefPtr<WebCore::DocumentLoader> { struct DocumentLoader {} *x_10_2_1; } x_4_1_10; struct RefPtr<WebCore::DocumentLoader> { struct DocumentLoader {} *x_11_2_1; } x_4_1_11; struct RefPtr<WebCore::DocumentLoader> { struct DocumentLoader {} *x_12_2_1; } x_4_1_12; void*x_4_1_13; void*x_4_1_14; void*x_4_1_15; void*x_4_1_16; void*x_4_1_17; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_3_1; } x_18_2_1; } x_4_1_18; void*x_4_1_19; void*x_4_1_20; void*x_4_1_21; void*x_4_1_22; void*x_4_1_23; void*x_4_1_24; struct RefPtr<WebCore::SerializedScriptValue> { struct SerializedScriptValue {} *x_25_2_1; } x_4_1_25; struct KURL { struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_26_2_1; unsigned int x_26_2_2 : 1; unsigned int x_26_2_3 : 1; NSInteger x_26_2_4; NSInteger x_26_2_5; NSInteger x_26_2_6; NSInteger x_26_2_7; NSInteger x_26_2_8; NSInteger x_26_2_9; NSInteger x_26_2_10; NSInteger x_26_2_11; NSInteger x_26_2_12; NSInteger x_26_2_13; } x_4_1_26; struct KURL { struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_27_2_1; unsigned int x_27_2_2 : 1; unsigned int x_27_2_3 : 1; NSInteger x_27_2_4; NSInteger x_27_2_5; NSInteger x_27_2_6; NSInteger x_27_2_7; NSInteger x_27_2_8; NSInteger x_27_2_9; NSInteger x_27_2_10; NSInteger x_27_2_11; NSInteger x_27_2_12; NSInteger x_27_2_13; } x_4_1_27; struct OwnPtr<WebCore::IconLoader> { struct IconLoader {} *x_28_2_1; } x_4_1_28; void*x_4_1_29; void*x_4_1_30; void*x_4_1_31; void*x_4_1_32; void*x_4_1_33; struct KURL { struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_34_2_1; unsigned int x_34_2_2 : 1; unsigned int x_34_2_3 : 1; NSInteger x_34_2_4; NSInteger x_34_2_5; NSInteger x_34_2_6; NSInteger x_34_2_7; NSInteger x_34_2_8; NSInteger x_34_2_9; NSInteger x_34_2_10; NSInteger x_34_2_11; NSInteger x_34_2_12; NSInteger x_34_2_13; } x_4_1_34; struct Timer<WebCore::FrameLoader> { int (**x_35_2_1)(); double x_35_2_2; double x_35_2_3; NSInteger x_35_2_4; NSUInteger x_35_2_5; struct FrameLoader {} *x_35_2_6; struct { NSInteger *x_7_3_1; } x_35_2_7; } x_4_1_35; void*x_4_1_36; void*x_4_1_37; struct Frame {} *x_4_1_38; struct HashSet<WebCore::Frame*,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > { struct HashTable<WebCore::Frame*,WebCore::Frame*,WTF::IdentityExtractor<WebCore::Frame*>,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > { struct Frame {} **x_1_3_1; NSInteger x_1_3_2; NSInteger x_1_3_3; NSInteger x_1_3_4; NSInteger x_1_3_5; } x_39_2_1; } x_4_1_39; void*x_4_1_40; void*x_4_1_41; void*x_4_1_42; void*x_4_1_43; void*x_4_1_44; void*x_4_1_45; NSInteger x_4_1_46; NSInteger x_4_1_47; void*x_4_1_48; } x4; struct RedirectScheduler { struct Frame {} *x_5_1_1; struct Timer<WebCore::RedirectScheduler> { int (**x_2_2_1)(); double x_2_2_2; double x_2_2_3; NSInteger x_2_2_4; NSUInteger x_2_2_5; struct RedirectScheduler {} *x_2_2_6; struct { NSInteger *x_7_3_1; } x_2_2_7; } x_5_1_2; struct OwnPtr<WebCore::ScheduledNavigation> { struct ScheduledNavigation {} *x_3_2_1; } x_5_1_3; } x5; struct RefPtr<WebCore::DOMWindow> { struct DOMWindow {} *x_6_1_1; } x6; struct HashSet<WebCore::DOMWindow*,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > { struct HashTable<WebCore::DOMWindow*,WebCore::DOMWindow*,WTF::IdentityExtractor<WebCore::DOMWindow*>,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > { struct DOMWindow {} **x_1_2_1; NSInteger x_1_2_2; NSInteger x_1_2_3; NSInteger x_1_2_4; NSInteger x_1_2_5; } x_7_1_1; } x7; struct HTMLFrameOwnerElement {} *x8; struct RefPtr<WebCore::FrameView> { struct FrameView {} *x_9_1_1; } x9; struct RefPtr<WebCore::Document> { struct Document {} *x_10_1_1; } x10; struct ScriptController { struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell>,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > > { struct HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>,std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> > > { struct pair<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > {} *x_1_3_1; NSInteger x_1_3_2; NSInteger x_1_3_3; NSInteger x_1_3_4; NSInteger x_1_3_5; } x_1_2_1; } x_11_1_1; struct Frame {} *x_11_1_2; NSInteger x_11_1_3; struct String {} *x_11_1_4; void*x_11_1_5; void*x_11_1_6; void*x_11_1_7; void*x_11_1_8; struct RefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x_9_2_1; } x_11_1_9; struct HashMap<void*,WTF::RefPtr<JSC::Bindings::RootObject>,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > > { struct HashTable<void*,std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> >,WTF::PairFirstExtractor<std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::HashTraits<void*> > { struct pair<void*,WTF::RefPtr<JSC::Bindings::RootObject> > {} *x_1_3_1; NSInteger x_1_3_2; NSInteger x_1_3_3; NSInteger x_1_3_4; NSInteger x_1_3_5; } x_10_2_1; } x_11_1_10; struct RetainPtr<WebScriptObject> { id x_11_2_1; } x_11_1_11; struct OwnPtr<WebCore::XSSAuditor> { struct XSSAuditor {} *x_12_2_1; } x_11_1_12; } x11; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_12_1_1; } x12; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_13_1_1; } x13; float x14; struct SelectionController { struct Frame {} *x_15_1_1; NSInteger x_15_1_2; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_1_3_1; NSInteger x_1_3_2; unsigned int x_1_3_3 : 2; unsigned int x_1_3_4 : 1; } x_3_2_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_2_3_1; NSInteger x_2_3_2; unsigned int x_2_3_3 : 2; unsigned int x_2_3_4 : 1; } x_3_2_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_3_3_1; NSInteger x_3_3_2; unsigned int x_3_3_3 : 2; unsigned int x_3_3_4 : 1; } x_3_2_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_4_3_1; NSInteger x_4_3_2; unsigned int x_4_3_3 : 2; unsigned int x_4_3_4 : 1; } x_3_2_4; NSInteger x_3_2_5; NSInteger x_3_2_6; void*x_3_2_7; } x_15_1_3; NSInteger x_15_1_4; struct Timer<WebCore::SelectionController> { int (**x_5_2_1)(); double x_5_2_2; double x_5_2_3; NSInteger x_5_2_4; NSUInteger x_5_2_5; struct SelectionController {} *x_5_2_6; struct { NSInteger *x_7_3_1; } x_5_2_7; } x_15_1_5; struct IntRect { struct IntPoint { NSInteger x_1_3_1; NSInteger x_1_3_2; } x_6_2_1; struct IntSize { NSInteger x_2_3_1; NSInteger x_2_3_2; } x_6_2_2; } x_15_1_6; struct IntRect { struct IntPoint { NSInteger x_1_3_1; NSInteger x_1_3_2; } x_7_2_1; struct IntSize { NSInteger x_2_3_1; NSInteger x_2_3_2; } x_7_2_2; } x_15_1_7; struct IntRect { struct IntPoint { NSInteger x_1_3_1; NSInteger x_1_3_2; } x_8_2_1; struct IntSize { NSInteger x_2_3_1; NSInteger x_2_3_2; } x_8_2_2; } x_15_1_8; void*x_15_1_9; void*x_15_1_10; void*x_15_1_11; void*x_15_1_12; void*x_15_1_13; void*x_15_1_14; void*x_15_1_15; void*x_15_1_16; void*x_15_1_17; void*x_15_1_18; struct Color { NSUInteger x_19_2_1; void*x_19_2_2; } x_15_1_19; NSInteger x_15_1_20; } x15; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_1_2_1; NSInteger x_1_2_2; unsigned int x_1_2_3 : 2; unsigned int x_1_2_4 : 1; } x_16_1_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_2_2_1; NSInteger x_2_2_2; unsigned int x_2_2_3 : 2; unsigned int x_2_2_4 : 1; } x_16_1_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_3_2_1; NSInteger x_3_2_2; unsigned int x_3_2_3 : 2; unsigned int x_3_2_4 : 1; } x_16_1_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_4_2_1; NSInteger x_4_2_2; unsigned int x_4_2_3 : 2; unsigned int x_4_2_4 : 1; } x_16_1_4; NSInteger x_16_1_5; NSInteger x_16_1_6; void*x_16_1_7; } x16; struct Editor { struct Frame {} *x_17_1_1; struct OwnPtr<WebCore::DeleteButtonController> { struct DeleteButtonController {} *x_2_2_1; } x_17_1_2; struct RefPtr<WebCore::EditCommand> { struct EditCommand {} *x_3_2_1; } x_17_1_3; struct RefPtr<WebCore::Node> { struct Node {} *x_4_2_1; } x_17_1_4; struct RefPtr<WebCore::Text> { struct Text {} *x_5_2_1; } x_17_1_5; NSUInteger x_17_1_6; NSUInteger x_17_1_7; struct Vector<WebCore::CompositionUnderline,0ul> { NSUInteger x_8_2_1; struct VectorBuffer<WebCore::CompositionUnderline,0ul> { struct CompositionUnderline {} *x_2_3_1; NSUInteger x_2_3_2; } x_8_2_2; } x_17_1_8; void*x_17_1_9; void*x_17_1_10; void*x_17_1_11; } x17; struct EventHandler { struct Frame {} *x_18_1_1; void*x_18_1_2; void*x_18_1_3; struct RefPtr<WebCore::Node> { struct Node {} *x_4_2_1; } x_18_1_4; void*x_18_1_5; void*x_18_1_6; void*x_18_1_7; struct IntPoint { NSInteger x_8_2_1; NSInteger x_8_2_2; } x_18_1_8; void*x_18_1_9; void*x_18_1_10; void*x_18_1_11; struct Timer<WebCore::EventHandler> { int (**x_12_2_1)(); double x_12_2_2; double x_12_2_3; NSInteger x_12_2_4; NSUInteger x_12_2_5; struct EventHandler {} *x_12_2_6; struct { NSInteger *x_7_3_1; } x_12_2_7; } x_18_1_12; struct Timer<WebCore::EventHandler> { int (**x_13_2_1)(); double x_13_2_2; double x_13_2_3; NSInteger x_13_2_4; NSUInteger x_13_2_5; struct EventHandler {} *x_13_2_6; struct { NSInteger *x_7_3_1; } x_13_2_7; } x_18_1_13; struct RenderObject {} *x_18_1_14; void*x_18_1_15; void*x_18_1_16; void*x_18_1_17; struct Timer<WebCore::EventHandler> { int (**x_18_2_1)(); double x_18_2_2; double x_18_2_3; NSInteger x_18_2_4; NSUInteger x_18_2_5; struct EventHandler {} *x_18_2_6; struct { NSInteger *x_7_3_1; } x_18_2_7; } x_18_1_18; void*x_18_1_19; struct RefPtr<WebCore::SVGElementInstance> { struct SVGElementInstance {} *x_20_2_1; } x_18_1_20; struct RefPtr<WebCore::SVGElementInstance> { struct SVGElementInstance {} *x_21_2_1; } x_18_1_21; struct RenderLayer {} *x_18_1_22; struct RefPtr<WebCore::Node> { struct Node {} *x_23_2_1; } x_18_1_23; struct RefPtr<WebCore::Node> { struct Node {} *x_24_2_1; } x_18_1_24; struct RefPtr<WebCore::Node> { struct Node {} *x_25_2_1; } x_18_1_25; struct RefPtr<WebCore::Frame> { struct Frame {} *x_26_2_1; } x_18_1_26; struct RefPtr<WebCore::Scrollbar> { struct Scrollbar {} *x_27_2_1; } x_18_1_27; NSInteger x_18_1_28; struct RefPtr<WebCore::Node> { struct Node {} *x_29_2_1; } x_18_1_29; float x_18_1_30; float x_18_1_31; float x_18_1_32; float x_18_1_33; NSUInteger x_18_1_34; struct HashMap<unsigned int,WTF::RefPtr<WebCore::Touch>,WTF::IntHash<unsigned int>,WTF::HashTraits<unsigned int>,WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > > { struct HashTable<unsigned int,std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> >,WTF::PairFirstExtractor<std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> > >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > >,WTF::HashTraits<unsigned int> > { struct pair<unsigned int,WTF::RefPtr<WebCore::Touch> > {} *x_1_3_1; NSInteger x_1_3_2; NSInteger x_1_3_3; NSInteger x_1_3_4; NSInteger x_1_3_5; } x_35_2_1; } x_18_1_35; struct HashSet<WTF::RefPtr<WebCore::EventTarget>,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > { struct HashTable<WTF::RefPtr<WebCore::EventTarget>,WTF::RefPtr<WebCore::EventTarget>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::EventTarget> >,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > { struct RefPtr<WebCore::EventTarget> {} *x_1_3_1; NSInteger x_1_3_2; NSInteger x_1_3_3; NSInteger x_1_3_4; NSInteger x_1_3_5; } x_36_2_1; } x_18_1_36; struct RefPtr<WebCore::Frame> { struct Frame {} *x_37_2_1; } x_18_1_37; struct RefPtr<WebCore::HTMLFrameSetElement> { struct HTMLFrameSetElement {} *x_38_2_1; } x_18_1_38; struct IntSize { NSInteger x_39_2_1; NSInteger x_39_2_2; } x_18_1_39; struct IntPoint { NSInteger x_40_2_1; NSInteger x_40_2_2; } x_18_1_40; struct IntPoint { NSInteger x_41_2_1; NSInteger x_41_2_2; } x_18_1_41; double x_18_1_42; struct PlatformMouseEvent { struct IntPoint { NSInteger x_1_3_1; NSInteger x_1_3_2; } x_43_2_1; struct IntPoint { NSInteger x_2_3_1; NSInteger x_2_3_2; } x_43_2_2; NSInteger x_43_2_3; NSInteger x_43_2_4; NSInteger x_43_2_5; void*x_43_2_6; void*x_43_2_7; void*x_43_2_8; void*x_43_2_9; double x_43_2_10; NSUInteger x_43_2_11; } x_18_1_43; void*x_18_1_44; struct RefPtr<WebCore::Node> { struct Node {} *x_45_2_1; } x_18_1_45; void*x_18_1_46; struct RefPtr<WebCore::Node> { struct Node {} *x_47_2_1; } x_18_1_47; id x_18_1_48; void*x_18_1_49; } x18; struct AnimationController { struct AnimationControllerPrivate {} *x_19_1_1; } x19; struct RefPtr<WebCore::CSSMutableStyleDeclaration> { struct CSSMutableStyleDeclaration {} *x_20_1_1; } x20; struct Timer<WebCore::Frame> { int (**x_21_1_1)(); double x_21_1_2; double x_21_1_3; NSInteger x_21_1_4; NSUInteger x_21_1_5; struct Frame {} *x_21_1_6; struct { NSInteger *x_7_2_1; } x_21_1_7; } x21; float x22; struct IntPoint { NSInteger x_23_1_1; NSInteger x_23_1_2; } x23; struct ViewportArguments { float x_24_1_1; float x_24_1_2; float x_24_1_3; float x_24_1_4; float x_24_1_5; float x_24_1_6; } x24; void*x25; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_1_2_1; NSInteger x_1_2_2; unsigned int x_1_2_3 : 2; unsigned int x_1_2_4 : 1; } x_26_1_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_2_2_1; NSInteger x_2_2_2; unsigned int x_2_2_3 : 2; unsigned int x_2_2_4 : 1; } x_26_1_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_3_2_1; NSInteger x_3_2_2; unsigned int x_3_2_3 : 2; unsigned int x_3_2_4 : 1; } x_26_1_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_4_2_1; NSInteger x_4_2_2; unsigned int x_4_2_3 : 2; unsigned int x_4_2_4 : 1; } x_26_1_4; NSInteger x_26_1_5; NSInteger x_26_1_6; void*x_26_1_7; } x26; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_1_2_1; NSInteger x_1_2_2; unsigned int x_1_2_3 : 2; unsigned int x_1_2_4 : 1; } x_27_1_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_2_2_1; NSInteger x_2_2_2; unsigned int x_2_2_3 : 2; unsigned int x_2_2_4 : 1; } x_27_1_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_3_2_1; NSInteger x_3_2_2; unsigned int x_3_2_3 : 2; unsigned int x_3_2_4 : 1; } x_27_1_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_4_2_1; NSInteger x_4_2_2; unsigned int x_4_2_3 : 2; unsigned int x_4_2_4 : 1; } x_27_1_4; NSInteger x_27_1_5; NSInteger x_27_1_6; void*x_27_1_7; } x27; struct FloatSize { float x_28_1_1; float x_28_1_2; } x28; NSUInteger x29; NSUInteger x30; NSUInteger x31; double x32; double x33; struct Timer<WebCore::Frame> { int (**x_34_1_1)(); double x_34_1_2; double x_34_1_3; NSInteger x_34_1_4; NSUInteger x_34_1_5; struct Frame {} *x_34_1_6; struct { NSInteger *x_7_2_1; } x_34_1_7; } x34; NSInteger x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; NSInteger x42; }*)coreFrame;
     /* Encoded args for previous method: ^{Frame=i^{Page}{FrameTree=^{Frame}^{Frame}{AtomicString={String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}}{RefPtr<WebCore::Frame>=^{Frame}}^{Frame}{RefPtr<WebCore::Frame>=^{Frame}}^{Frame}I}{FrameLoader=^^?^{Frame}^{FrameLoaderClient}{PolicyChecker=^{Frame}BBi{PolicyCallback={ResourceRequest={KURL={String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}id{KURL={String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}{HTTPHeaderMap={HashTable<WebCore::AtomicString,std::pair<WebCore::AtomicString, WebCore::String>,WTF::PairFirstExtractor<std::pair<WebCore::AtomicString, WebCore::String> >,WebCore::CaseFoldingHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::AtomicString>, WTF::HashTraits<WebCore::String> >,WTF::HashTraits<WebCore::AtomicString> >=^{pair<WebCore::AtomicString,WebCore::String>}iiii}}{Vector<WebCore::String,0ul>=I{VectorBuffer<WebCore::String,0ul>=^{String}I}}{RefPtr<WebCore::FormData>=^{FormData}}BBBBiiB{RetainPtr<NSURLRequest>=@}}{RefPtr<WebCore::FormState>=^{FormState}}{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}^?^?^?^v}}{HistoryController=^{Frame}{RefPtr<WebCore::HistoryItem>=^{HistoryItem}}{RefPtr<WebCore::HistoryItem>=^{HistoryItem}}{RefPtr<WebCore::HistoryItem>=^{HistoryItem}}}{ResourceLoadNotifier=^{Frame}}{DocumentWriter=^{Frame}B{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}B{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}{RefPtr<WebCore::TextResourceDecoder>=^{TextResourceDecoder}}}ii{RefPtr<WebCore::DocumentLoader>=^{DocumentLoader}}{RefPtr<WebCore::DocumentLoader>=^{DocumentLoader}}{RefPtr<WebCore::DocumentLoader>=^{DocumentLoader}}BBBBB{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}BBBBBB{RefPtr<WebCore::SerializedScriptValue>=^{SerializedScriptValue}}{KURL={String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}{KURL={String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}{OwnPtr<WebCore::IconLoader>=^{IconLoader}}BBBBB{KURL={String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}b1b1iiiiiiiiii}{Timer<WebCore::FrameLoader>=^^?ddiI^{FrameLoader}{?=^i}}BB^{Frame}{HashSet<WebCore::Frame*,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> >={HashTable<WebCore::Frame*,WebCore::Frame*,WTF::IdentityExtractor<WebCore::Frame*>,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> >=^^{Frame}iiii}}BBBBBBiiB}{RedirectScheduler=^{Frame}{Timer<WebCore::RedirectScheduler>=^^?ddiI^{RedirectScheduler}{?=^i}}{OwnPtr<WebCore::ScheduledNavigation>=^{ScheduledNavigation}}}{RefPtr<WebCore::DOMWindow>=^{DOMWindow}}{HashSet<WebCore::DOMWindow*,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> >={HashTable<WebCore::DOMWindow*,WebCore::DOMWindow*,WTF::IdentityExtractor<WebCore::DOMWindow*>,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> >=^^{DOMWindow}iiii}}^{HTMLFrameOwnerElement}{RefPtr<WebCore::FrameView>=^{FrameView}}{RefPtr<WebCore::Document>=^{Document}}{ScriptController={HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell>,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >={HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>,std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> > >=^{pair<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >}iiii}}^{Frame}i^{String}BBBB{RefPtr<JSC::Bindings::RootObject>=^{RootObject}}{HashMap<void*,WTF::RefPtr<JSC::Bindings::RootObject>,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > >={HashTable<void*,std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> >,WTF::PairFirstExtractor<std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::HashTraits<void*> >=^{pair<void*,WTF::RefPtr<JSC::Bindings::RootObject> >}iiii}}{RetainPtr<WebScriptObject>=@}{OwnPtr<WebCore::XSSAuditor>=^{XSSAuditor}}}{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}{String={RefPtr<WebCore::StringImpl>=^{StringImpl}}}f{SelectionController=^{Frame}i{VisibleSelection={Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}iiB}i{Timer<WebCore::SelectionController>=^^?ddiI^{SelectionController}{?=^i}}{IntRect={IntPoint=ii}{IntSize=ii}}{IntRect={IntPoint=ii}{IntSize=ii}}{IntRect={IntPoint=ii}{IntSize=ii}}BBBBBBBBBB{Color=IB}i}{VisibleSelection={Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}iiB}{Editor=^{Frame}{OwnPtr<WebCore::DeleteButtonController>=^{DeleteButtonController}}{RefPtr<WebCore::EditCommand>=^{EditCommand}}{RefPtr<WebCore::Node>=^{Node}}{RefPtr<WebCore::Text>=^{Text}}II{Vector<WebCore::CompositionUnderline,0ul>=I{VectorBuffer<WebCore::CompositionUnderline,0ul>=^{CompositionUnderline}I}}BBB}{EventHandler=^{Frame}BB{RefPtr<WebCore::Node>=^{Node}}BBB{IntPoint=ii}BBB{Timer<WebCore::EventHandler>=^^?ddiI^{EventHandler}{?=^i}}{Timer<WebCore::EventHandler>=^^?ddiI^{EventHandler}{?=^i}}^{RenderObject}BBB{Timer<WebCore::EventHandler>=^^?ddiI^{EventHandler}{?=^i}}B{RefPtr<WebCore::SVGElementInstance>=^{SVGElementInstance}}{RefPtr<WebCore::SVGElementInstance>=^{SVGElementInstance}}^{RenderLayer}{RefPtr<WebCore::Node>=^{Node}}{RefPtr<WebCore::Node>=^{Node}}{RefPtr<WebCore::Node>=^{Node}}{RefPtr<WebCore::Frame>=^{Frame}}{RefPtr<WebCore::Scrollbar>=^{Scrollbar}}i{RefPtr<WebCore::Node>=^{Node}}ffffI{HashMap<unsigned int,WTF::RefPtr<WebCore::Touch>,WTF::IntHash<unsigned int>,WTF::HashTraits<unsigned int>,WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > >={HashTable<unsigned int,std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> >,WTF::PairFirstExtractor<std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> > >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > >,WTF::HashTraits<unsigned int> >=^{pair<unsigned int,WTF::RefPtr<WebCore::Touch> >}iiii}}{HashSet<WTF::RefPtr<WebCore::EventTarget>,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > >={HashTable<WTF::RefPtr<WebCore::EventTarget>,WTF::RefPtr<WebCore::EventTarget>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::EventTarget> >,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > >=^{RefPtr<WebCore::EventTarget>}iiii}}{RefPtr<WebCore::Frame>=^{Frame}}{RefPtr<WebCore::HTMLFrameSetElement>=^{HTMLFrameSetElement}}{IntSize=ii}{IntPoint=ii}{IntPoint=ii}d{PlatformMouseEvent={IntPoint=ii}{IntPoint=ii}iiiBBBBdI}B{RefPtr<WebCore::Node>=^{Node}}B{RefPtr<WebCore::Node>=^{Node}}@B}{AnimationController=^{AnimationControllerPrivate}}{RefPtr<WebCore::CSSMutableStyleDeclaration>=^{CSSMutableStyleDeclaration}}{Timer<WebCore::Frame>=^^?ddiI^{Frame}{?=^i}}f{IntPoint=ii}{ViewportArguments=ffffff}B{VisibleSelection={Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}iiB}{VisibleSelection={Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}{Position={RefPtr<WebCore::Node>=^{Node}}ib2b1}iiB}{FloatSize=ff}IIIdd{Timer<WebCore::Frame>=^^?ddiI^{Frame}{?=^i}}iBBBBBBi}8@0:4 */

- (id)_initWithWebFrameView:(id)arg1 webView:(id)arg2;
- (BOOL)_hasSelection;
- (id)_findFrameWithSelection;
- (void)_clearSelection;
- (id)_nodesFromList:(struct Vector<WebCore::Node*,0ul> { NSUInteger x1; struct VectorBuffer<WebCore::Node*,0ul> { struct Node {} **x_2_1_1; NSUInteger x_2_1_2; } x2; }*)arg1;
- (id)_stringWithDocumentTypeStringAndMarkupString:(id)arg1;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1 forceUserGesture:(BOOL)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_firstRectForDOMRange:(id)arg1;
- (id)_convertNSRangeToDOMRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_convertDOMRangeToNSRange:(id)arg1;
- (struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; NSInteger x_1_1_2; unsigned int x_1_1_3 : 2; unsigned int x_1_1_4 : 1; } x1; NSInteger x2; })_visiblePositionForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)_canProvideDocumentSource;
- (void)_addData:(id)arg1;
- (BOOL)_needsLayout;
- (id)_stringForRange:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_caretRectAtNode:(id)arg1 offset:(NSInteger)arg2 affinity:(NSInteger)arg3;
- (id)_characterRangeAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)_dataSource;
- (void)_loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4 unreachableURL:(id)arg5;
- (void)_loadHTMLString:(id)arg1 baseURL:(id)arg2 unreachableURL:(id)arg3;
- (id)_documentFragmentWithMarkupString:(id)arg1 baseURLString:(id)arg2;
- (BOOL)_isIncludedInWebKitStatistics;
- (id)renderTreeAsExternalRepresentationForPrinting:(BOOL)arg1;
- (id)counterValueForElement:(id)arg1;
- (NSInteger)pageNumberForElement:(id)arg1 :(float)arg2 :(float)arg3;
- (NSInteger)numberOfPages:(float)arg1 :(float)arg2;
- (void)setMediaPlaybackAllowsInline:(BOOL)arg1;
- (BOOL)mediaPlaybackAllowsInline;
- (void)resetSelection;
- (void)aggressivelyExpandSelectionToWordContainingCaretSelection;
- (void)moveSelectionToEnd;
- (void)moveSelectionToStart;
- (void)setSelectionGranularity:(NSInteger)arg1;
- (void)setRangedSelectionBaseToCurrentSelectionStart;
- (void)setRangedSelectionBaseToCurrentSelectionEnd;
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
- (BOOL)setRangedSelectionExtentPoint:(struct CGPoint { float x1; float x2; })arg1 baseIsStart:(BOOL)arg2 allowFlipping:(BOOL)arg3;
- (id)wordAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)smartExtendRangedSelection:(NSInteger)arg1;
- (void)setRangedSelectionBaseToCurrentSelection;
- (void)clearRangedSelectionInitialExtent;
- (void)setRangedSelectionWithExtentPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)selectionRects;
- (void)setSelectionWithFirstPoint:(struct CGPoint { float x1; float x2; })arg1 secondPoint:(struct CGPoint { float x1; float x2; })arg2;
- (BOOL)_isDescendantOfFrame:(id)arg1;
- (id)parentFrame;
- (id)childFrames;
- (void)_setVisibleSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setMediaPlaybackRequiresUserAction:(BOOL)arg1;
- (BOOL)mediaPlaybackRequiresUserAction;
- (void)stopLoading;
- (id)scrollableNodeAtViewportLocation:(struct CGPoint { float x1; float x2; })arg1;
- (id)approximateNodeAtViewportLocation:(struct CGPoint { float x1; float x2; }*)arg1;
- (void)_setProhibitsScrolling:(BOOL)arg1;
- (id)elementRangeContainingCaretSelection;
- (void)moveSelectionToPoint:(struct CGPoint { float x1; float x2; })arg1;
- (NSInteger)innerLineHeight:(id)arg1;
- (BOOL)hasEditableSelection;
- (void)_setLoadsSynchronously:(BOOL)arg1;
- (void)resetTextAutosizingBeforeLayout;
- (void)sendScrollEvent;
- (struct CGColor { }*)_bodyBackgroundColor;
- (NSInteger)_loadType;
- (void)sendOrientationChangeEvent:(NSInteger)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })renderRectForPoint:(struct CGPoint { float x1; float x2; })arg1 isReplaced:(BOOL*)arg2 fontSize:(float*)arg3;
- (void)selectWithoutClosingTypingNSRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)expandSelectionToWordContainingCaretSelection;
- (void)setMarkedText:(id)arg1 forCandidates:(BOOL)arg2;
- (id)markedTextDOMRange;
- (id)stringForRange:(id)arg1;
- (struct __GSFont { }*)fontForSelection:(BOOL*)arg1;
- (void)_replaceSelectionWithWebArchive:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (void)expandSelectionToElementContainingCaretSelection;
- (BOOL)focusedNodeHasContent;
- (void)prepareForPause;
- (void)setTimeoutsPaused:(BOOL)arg1;
- (void)setPluginsPaused:(BOOL)arg1;
- (void)resumeFromPause;
- (id)_documentFragmentForWebArchive:(id)arg1;
- (id)_documentFragmentForImageData:(id)arg1 withRelativeURLPart:(id)arg2 andMIMEType:(id)arg3;
- (id)_documentFragmentForText:(id)arg1;
- (void)_replaceSelectionWithFragment:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (void)toggleBaseWritingDirection;
- (id)endPosition;
- (id)webVisiblePositionForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)loadRequest:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)finalize;
- (void)confirmMarkedText:(id)arg1;
- (unsigned short)characterInRelationToCaretSelection:(NSInteger)arg1;
- (unsigned short)characterAfterCaretSelection;
- (void)expandSelectionToStartOfWordContainingCaretSelection;
- (NSInteger)wordOffsetInRange:(id)arg1;
- (NSInteger)selectionState;
- (BOOL)selectionAtDocumentStart;
- (BOOL)selectionAtWordStart;
- (id)rangeByMovingCurrentSelection:(NSInteger)arg1;
- (id)rangeByExtendingCurrentSelection:(NSInteger)arg1;
- (NSInteger)selectionAffinity;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg2;
- (id)wordRangeContainingCaretSelection;
- (BOOL)shouldEnableAutoShift;
- (unsigned short)characterBeforeCaretSelection;
- (void)setEmbeddedEditingMode:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForScrollToVisible;
- (NSInteger)preferredHeight;
- (id)convertNSRangeToDOMRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (id)convertNSRangeToDOMRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectAtNode:(id)arg1 offset:(NSInteger)arg2 affinity:(NSInteger)arg3;
- (void)_selectAll;
- (void)collapseSelection;
- (void)setSelectedDOMRange:(id)arg1 affinity:(NSInteger)arg2 closeTyping:(BOOL)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectForPosition:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })firstRectForDOMRange:(id)arg1;
- (id)startPosition;
- (void)createDefaultFieldEditorDocumentStructure;
- (void)setIsSingleLine:(BOOL)arg1;
- (void)setIsActive:(BOOL)arg1;
- (id)frameView;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_selectedNSRange;
- (void)selectNSRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1 onElement:(id)arg2;
- (void)selectNSRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)revealSelectionAtExtent:(BOOL)arg1;
- (id)characterRangeAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })convertDOMRangeToNSRange:(id)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })convertDOMRangeToNSRange:(id)arg1;
- (void)updateLayout;
- (id)documentView;
- (void)setText:(id)arg1 asChildOfElement:(id)arg2;
- (void)_selectNSRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRect;
- (void)setBaseWritingDirection:(NSInteger)arg1;
- (NSInteger)selectionBaseWritingDirection;
- (id)DOMDocument;
- (void)setCaretColor:(struct CGColor { }*)arg1;
- (void)clearSelection;
- (id)selectedDOMRange;
- (id)wordInRange:(id)arg1;
- (void)_replaceSelectionWithText:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (BOOL)hasSelection;
- (id)selectionRectsForRange:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)webView;
- (id)name;
- (id)init;
- (void)_handleKeyEvent:(id)arg1;
- (void)dealloc;
- (void)setNeedsLayout;
- (void)reload;
- (id)dataSource;
- (void)extendSelection:(BOOL)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_convertToNSRange:(struct Range { NSInteger x1; struct RefPtr<WebCore::Document> { struct Document {} *x_2_1_1; } x2; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_3_1_1; NSInteger x_3_1_2; struct Node {} *x_3_1_3; } x3; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_4_1_1; NSInteger x_4_1_2; struct Node {} *x_4_1_3; } x4; }*)arg1;
- (struct PassRefPtr<WebCore::Range> { struct Range {} *x1; })_convertToDOMRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (BOOL)isMainFrame;
- (void)_collectFormFieldElementsIntoArray:(id)arg1 upToLimit:(NSUInteger)arg2 onlyIncludeFocusedElements:(BOOL)arg3;
- (id)allFormFields;
- (BOOL)containsAnyFormFields;
- (BOOL)containsAnyFocusedFormFields;
- (BOOL)isOrphaned;
- (id)_topFrame;
- (BOOL)isTexty;
- (BOOL)containsOnlySelectableElements;
- (oneway void)_webcore_releaseOnWebThread;
- (oneway void)release;

@end
