/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

@class ASItem, ASParseContext, ASTaskManager, DATaskManager, NSDate, NSError, NSHTTPURLResponse, NSMutableSet, NSString, NSTimer, NSURLConnection, NSURLRequest;

@interface ASTask : NSObject <DATask, NSURLConnectionDelegate> {
    BOOL _askedToCancelWhileModal;
    NSMutableSet *_attemptedIdentities;
    NSURLConnection *_connection;
    void *_context;
    ASItem *_currentlyParsingItem;
    NSDate *_dateConnectionWentOut;
    id _delegate;
    BOOL _didCancel;
    BOOL _didFailWithError;
    BOOL _didFinishLoading;
    BOOL _didReceiveData;
    BOOL _didReceiveResponse;
    BOOL _didReset;
    BOOL _didSendRequest;
    BOOL _finished;
    BOOL _finishedByTimeoutEnforcer;
    BOOL _handledTopLevelError;
    BOOL _haveCheckedForTopLevelError;
    BOOL _haveParsedCommand;
    BOOL _haveSwitchedCodePage;
    BOOL _inDelegateCallout;
    int _interfaceBinding;
    BOOL _isExclusive;
    BOOL _isFakingIt;
    NSString *_lastKnownPassword;
    NSString *_lastKnownPolicyKey;
    int _modalPushCount;
    int _modalReason;
    int _numBadPasswordResponses;
    ASParseContext *_parseContext;
    NSError *_passwordNotificationError;
    NSURLRequest *_request;
    NSHTTPURLResponse *_response;
    BOOL _retry;
    int _taskID;
    ASTaskManager *_taskManager;
    NSTimer *_timeoutEnforcer;
}

@property BOOL askedToCancelWhileModal;
@property void* context;
@property(retain) ASItem * currentlyParsingItem;
@property id delegate;
@property int interfaceBinding;
@property BOOL isExclusive;
@property(retain) NSString * lastKnownPassword;
@property DATaskManager * taskManager;
@property(retain) NSTimer * timeoutEnforcer;

+ (void)_restoreDefaultTaskTimeout;
+ (void)_setDefaultTaskTimeout:(double)arg1;

- (id)_HTTPMethodForRequest:(id)arg1;
- (void)_addAuthToRequest:(id)arg1;
- (id)_applyAuthenticationChain:(struct __CFArray { }*)arg1 toRequest:(id)arg2;
- (void)_continuePerformTask;
- (id)_easVersion;
- (void)_failImmediately;
- (void)_handleBadPasswordResponse;
- (BOOL)_handleCertificateError:(id)arg1;
- (BOOL)_handleRedirect:(id)arg1;
- (void)_initFakeParseContext;
- (BOOL)_isWBXML;
- (id)_policyKey;
- (void)_popModal;
- (void)_pushModalForReason:(int)arg1;
- (void)_setHTTPParametersOnRequest:(id)arg1 outBodyStream:(id*)arg2 outBodyData:(id*)arg3;
- (BOOL)_shouldRedirectToHTTPForRequest:(id)arg1;
- (BOOL)_shouldSendAuthForRequest:(id)arg1;
- (void)_timeoutEnforcerFired:(id)arg1;
- (id)_url;
- (BOOL)askedToCancelWhileModal;
- (BOOL)attemptRetryWithStatus:(int)arg1 error:(id)arg2;
- (void)cancelTaskWithReason:(int)arg1 underlyingError:(id)arg2;
- (BOOL)checkForErrorInContext:(id)arg1;
- (id)command;
- (int)commandCode;
- (BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(int)arg2 totalBytesWritten:(int)arg3 totalBytesExpectedToWrite:(int)arg4;
- (id)connection:(id)arg1 needNewBodyStream:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (int)connectionActionForResponse:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (id)contentType;
- (void*)context;
- (id)currentlyParsingItem;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (void)didCallOutToDelegate;
- (void)didProcessContext:(id)arg1;
- (BOOL)expectsWBXML;
- (void)finishWithError:(id)arg1;
- (BOOL)getTopLevelToken:(char *)arg1 outStatusCodePage:(char *)arg2 outStatusToken:(char *)arg3;
- (void)handleTopLevelErrorStatus:(id)arg1;
- (id)httpMethod;
- (id)init;
- (int)interfaceBinding;
- (BOOL)isExclusive;
- (BOOL)isInCallOutToDelegate;
- (id)lastKnownPassword;
- (void)loadRequest:(id)arg1;
- (int)numDownloadedElements;
- (id)parameterData;
- (double)percentComplete;
- (void)performTask;
- (BOOL)processContext:(id)arg1;
- (void)reportStatusWithError:(id)arg1;
- (id)requestBody;
- (id)requestBodyStreamOutKnownSize:(int*)arg1;
- (BOOL)requiresEASVersionInformaton;
- (void)reset;
- (id)responseContentType;
- (void)setAskedToCancelWhileModal:(BOOL)arg1;
- (void)setContext:(void*)arg1;
- (void)setCurrentlyParsingItem:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setInterfaceBinding:(int)arg1;
- (void)setIsExclusive:(BOOL)arg1;
- (void)setLastKnownPassword:(id)arg1;
- (void)setTaskManager:(id)arg1;
- (void)setTimeoutEnforcer:(id)arg1;
- (BOOL)shouldHandlePasswordErrors;
- (BOOL)shouldHoldPowerAssertion;
- (BOOL)shouldLogIncomingData;
- (BOOL)shouldReportTimeInNetwork;
- (BOOL)shouldStallAfterCannotFindHost;
- (void)startModal;
- (int)taskID;
- (id)taskManager;
- (void)taskManagerDidFailToUpdatePolicyKey;
- (void)taskManagerDidFindEASVersion;
- (void)taskManagerDidUpdatePolicyKey;
- (int)taskStatusForError:(id)arg1;
- (int)taskStatusForExchangeStatus:(int)arg1;
- (void)tearDownResources;
- (id)timeoutEnforcer;
- (double)timeoutInterval;
- (void)willCallOutToDelegate;
- (void)willProcessContext;

@end
