/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

@class NSTimer, CalDAVOperationQueue, <CalDAVRefreshActorCallback>, NSThread, CalDAVRefreshContext;

@interface MobileCalDAVAccountRefreshActor : AKActor <MobileCalDAVAccountRefreshActor> {
    <CalDAVRefreshActorCallback> *_callbackTarget;
    NSThread *_callbackThread;
    NSTimer *_cancellationTimer;
    CalDAVRefreshContext *_context;
    CalDAVOperationQueue *_queue;
    BOOL _wasCancelledEarly;
}

@property(readonly) CalDAVRefreshContext *context;

+ (void)setCalDAVRefreshBackgroundTasksShouldCancel:(BOOL)arg1;
+ (BOOL)shouldCancel;

- (void)_blowAwayTimer;
- (void)_checkCancelled;
- (BOOL)_handleBadPasswordResponseWithAccount:(id)arg1;
- (BOOL)_refreshCalendar:(id)arg1 fromAccount:(id)arg2 newCTag:(id)arg3 shouldSave:(BOOL*)arg4 error:(id*)arg5;
- (void)_restoreEventStatusOnEvent:(id)arg1 inCalendar:(void*)arg2 database:(struct CalDatabase { }*)arg3;
- (void)_restoreSelfAsAttendeeOnEvent:(id)arg1 withOrganizer:(struct CalOrganizer { }*)arg2;
- (void)_sendResultToCallbackActor:(id)arg1;
- (void)_setDtstampOnEvent:(void*)arg1;
- (void)_startCancellationTimer;
- (id)context;
- (void)dealloc;
- (void)fenceMethod;
- (id)initWithQueue:(id)arg1 context:(id)arg2 callbackTarget:(id)arg3 callbackThread:(id)arg4;
- (oneway void)refresh;
- (BOOL)refreshCalendarCollectionsForAccount:(id)arg1 pathsToCTags:(id)arg2 shouldSave:(BOOL*)arg3 error:(id*)arg4;
- (id)refreshCalendarsForAccount:(id)arg1 shouldSave:(BOOL*)arg2 error:(id*)arg3;
- (oneway void)refreshCalendarsOnly;
- (BOOL)refreshPropertiesForAccount:(id)arg1 shouldSave:(BOOL*)arg2 error:(id*)arg3;
- (void)setBackgroundThreadDispatchQueue;

@end
