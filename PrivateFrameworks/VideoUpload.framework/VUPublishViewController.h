/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/VideoUpload.framework/VideoUpload
 */

@class NSString, VUFooterContainerView, UIAlertView, UILabel, <VUPublishViewControllerDelegate>, UITableView, UIButton, NSArray, VUCategoryCell, UIPickerView, VUCategory, PLTableViewEditableCell, UITableViewCell, UIImageView, NSMutableArray;

@interface VUPublishViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UIPickerViewDelegate, UIAlertViewDelegate> {
    UITableView *_tableView;
    UIPickerView *_picker;
    BOOL _viewShrunk;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _unshrunkFrame;
    BOOL _userDidStartEditing;
    UIImageView *_headerImageView;
    PLTableViewEditableCell *_titleCell;
    PLTableViewEditableCell *_descriptionCell;
    float _descriptionHeight;
    PLTableViewEditableCell *_optionCells[2];
    NSMutableArray *_tagCells;
    VUCategoryCell *_categoryCell;
    NSArray *_accessCells;
    unsigned int _accessRow;
    UITableViewCell *_accountCell;
    VUFooterContainerView *_footerContainer;
    UILabel *_termsLabel;
    UIButton *_termsButton;
    UIAlertView *_authenticationAlert;
    UIAlertView *_accountAlert;
    UIAlertView *_authenticationFailedAlert;
    struct { 
        int title; 
        int hd; 
        int tags; 
        int category; 
        int access; 
        int account; 
    } _sectionIndices;
    BOOL _enableHDSection;
    <VUPublishViewControllerDelegate> *_delegate;
    BOOL _showHDSection;
    int _selectedOption;
    int _HDSize;
    int _SDSize;
}

@property <VUPublishViewControllerDelegate> * delegate;
@property BOOL showHDSection;
@property BOOL enableHDSection;
@property int SDSize;
@property int HDSize;
@property(readonly) int selectedOption;
@property(readonly) NSString * videoTitle;
@property(readonly) NSString * videoDescription;
@property(readonly) NSArray * videoTags;
@property(readonly) VUCategory * videoCategory;


- (id)videoDescription;
- (void)setSDSize:(int)arg1;
- (int)SDSize;
- (void)setHDSize:(int)arg1;
- (int)HDSize;
- (void)setShowHDSection:(BOOL)arg1;
- (BOOL)showHDSection;
- (void)setEnableHDSection:(BOOL)arg1;
- (BOOL)enableHDSection;
- (id)videoCategory;
- (id)videoTags;
- (id)videoTitle;
- (void)showAlertWithTitle:(id)arg1 message:(id)arg2;
- (int)_indexOfBlankTagCellOtherThan:(id)arg1;
- (void)_unshrinkView;
- (id)accountAlert;
- (void)_showPicker;
- (id)termsOfUseURL;
- (void)_shrinkView;
- (float)_termsBlurbHeightForWidth:(float)arg1;
- (BOOL)_isAuthenticated;
- (id)accountString;
- (BOOL)checkParametersAndWarn;
- (void)authReturnKeyPressed:(id)arg1;
- (void)_footerFrameDidChangeWithSplitKeyboard:(BOOL)arg1;
- (void)_termsButtonPressed:(id)arg1;
- (id)termsOfUseString;
- (void)_addNewTagCell;
- (id)accessCells;
- (void)_updateAccountCell;
- (id)headerLogo;
- (void)_authenticatorFailed:(id)arg1;
- (void)_authenticatorStateChanged:(id)arg1;
- (id)authenticator;
- (void)_updatePublishButton;
- (void)_publish;
- (void)_automaticKeyboardDidHide:(id)arg1;
- (void)_automaticKeyboardDidShow:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)init;
- (void)editableTagCellEndOfTagCharacterPressed:(id)arg1;
- (void)editableCell:(id)arg1 textChanged:(id)arg2;
- (void)editableCellReturnPressed:(id)arg1;
- (void)editableCellDidBeginEditing:(id)arg1;
- (int)selectedOption;
- (void)_cancel;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(int)arg2;
- (id)categories;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidUnload;
- (void)loadView;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (int)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(int)arg2;
- (float)tableView:(id)arg1 heightForHeaderInSection:(int)arg2;
- (float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)pickerView:(id)arg1 didSelectRow:(int)arg2 inComponent:(int)arg3;
- (float)pickerView:(id)arg1 rowHeightForComponent:(int)arg2;
- (id)pickerView:(id)arg1 titleForRow:(int)arg2 forComponent:(int)arg3;
- (int)pickerView:(id)arg1 numberOfRowsInComponent:(int)arg2;
- (int)numberOfComponentsInPickerView:(id)arg1;

@end
