/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@class UIImage, <PLCloudSharedContainer>, CLLocation, NSURL, NSData, NSMutableOrderedSet, NSMutableSet, NSDate, NSSet, NSDictionary, NSArray, NSOrderedSet, NSString, PLManagedAsset, NSNumber;

@interface PLManagedAsset : _PLManagedAsset <UIActivityItemSource> {
    BOOL _didPrepareForDeletion;
    BOOL _isRegisteredForChanges;
    UIImage *inflightImageInMemory;
    NSString *inflightImagePath;
    UIImage *inflightIndexSheetImage;
    NSDictionary *inflightMetadata;
}

@property(retain) NSString * cloudBatchID;
@property(retain) NSDate * cloudBatchPublishDate;
@property(retain) NSString * cloudAssetGUID;
@property(retain) NSString * cloudAssetKind;
@property(retain) NSString * cloudCollectionGUID;
@property(retain) NSDictionary * cloudMetadata;
@property(retain) NSNumber * cloudHasUnseenComments;
@property BOOL cloudHasUnseenCommentsBoolValue;
@property(retain) NSNumber * cloudHasCommentsByMe;
@property BOOL cloudHasCommentsByMeBoolValue;
@property(retain) NSDate * cloudLastViewedCommentDate;
@property(retain) NSNumber * cloudHasCommentsConversation;
@property BOOL cloudHasCommentsConversationBoolValue;
@property(retain) NSOrderedSet * cloudComments;
@property(retain) NSOrderedSet * likeComments;
@property(readonly) unsigned int totalCommentsCount;
@property int cloudPlaceholderKindValue;
@property BOOL userCloudSharedLiked;
@property int highDynamicRangeTypeValue;
@property int savedAssetTypeValue;
@property(retain) CLLocation * location;
@property unsigned int effectiveThumbnailIndex;
@property(readonly) NSMutableOrderedSet * adjustments;
@property(retain) PLManagedAsset * originalAsset;
@property BOOL isInFlight;
@property(readonly) UIImage * inflightImage;
@property(retain) UIImage * inflightImageInMemory;
@property(retain) NSString * inflightImagePath;
@property(retain) UIImage * inflightIndexSheetImage;
@property(retain) NSDictionary * inflightMetadata;
@property(readonly) BOOL hasEmbeddedThumbnail;
@property(readonly) NSData * embeddedThumbnailData;
@property(retain) NSNumber * embeddedThumbnailOffset;
@property int embeddedThumbnailOffsetValue;
@property(retain) NSNumber * embeddedThumbnailLength;
@property int embeddedThumbnailLengthValue;
@property(retain) NSNumber * embeddedThumbnailWidth;
@property short embeddedThumbnailWidthValue;
@property(retain) NSNumber * embeddedThumbnailHeight;
@property short embeddedThumbnailHeightValue;
@property(retain) NSMutableSet * faces;
@property int assetKind;
@property double captureTime;
@property struct CGSize { float x1; float x2; } imageSize;
@property(readonly) BOOL allowsRotation;
@property double recordModDate;
@property struct { double x1; double x2; } gpsCoordinate;
@property(readonly) BOOL hasLocationInfo;
@property(readonly) NSDate * date;
@property(readonly) BOOL isPhotoStreamPhoto;
@property(readonly) BOOL supportsDistributedPhotoStreamDeletion;
@property(readonly) BOOL isCloudSharedAsset;
@property(readonly) <PLCloudSharedContainer> * cloudShareAlbum;
@property(readonly) BOOL isVideo;
@property(readonly) BOOL isHDVideo;
@property(readonly) BOOL isPhoto;
@property(readonly) BOOL isAudio;
@property(readonly) BOOL allowsWallpaperEditing;
@property(readonly) NSArray * sortedSidecarFiles;
@property(copy) NSString * utiType;
@property(readonly) NSString * mimeType;
@property(readonly) BOOL isJPEG;
@property(readonly) NSURL * mainFileURL;
@property(readonly) NSString * pathForImageFile;
@property(readonly) NSSet * allFileURLs;
@property(readonly) NSSet * filePathsWithoutThumbs;
@property(readonly) NSString * pathForLargeThumbnailFile;
@property(readonly) NSString * pathForOriginalFile;
@property(readonly) NSURL * fileURLForLargeThumbnailFile;
@property(readonly) NSArray * allUniformTypeIdentifiers;
@property(readonly) NSString * fileExtension;
@property(readonly) NSString * pathForMetadataDirectory;
@property(readonly) NSURL * fileURLForThumbnailFile;
@property(readonly) NSString * pathForPrebakedThumbnail;
@property(readonly) NSString * pathForPrebakedLandscapeScrubberThumbnails;
@property(readonly) NSURL * fileURLForPrebakedLandscapeScrubberThumbnails;
@property(readonly) NSString * pathForPrebakedPortraitScrubberThumbnails;
@property(readonly) NSURL * fileURLForPrebakedPortraitScrubberThumbnails;
@property(readonly) NSString * pathForPrebakedWildcatThumbnailsFile;
@property(readonly) NSString * pathForLowResolutionFile;
@property(readonly) NSString * pathForTrimmedVideoFile;
@property(readonly) NSString * pathForVideoPreviewFile;
@property(readonly) NSString * pathForVideoFile;
@property(readonly) NSString * pathForLargeDisplayableImageFile;
@property(readonly) NSURL * fileURLForLargeDisplayableImage;
@property(readonly) NSString * pathForXMPFile;
@property(readonly) BOOL hasXMPFile;
@property(readonly) NSString * textBadgeString;
@property(readonly) UIImage * wallpaperFullScreenImage;
@property(readonly) NSURL * assetURL;
@property int thumbnailIndex;

+ (void)markAssetAsRecentlyUsed:(id)arg1;
+ (id)sortedCloudSharedAssetsWithDerivativesInLibrary:(id)arg1;
+ (id)cloudSharedAssetsWithGUIDs:(id)arg1 inLibrary:(id)arg2;
+ (id)allCloudSharedAssetsInLibrary:(id)arg1;
+ (id)persistedRecentlyUsedGUIDS;
+ (id)recentlyUsedGUIDsPath;
+ (id)_allAssetUUIDsInManagedObjectContext:(id)arg1;
+ (id)uuidFromAssetURL:(id)arg1;
+ (id)fileURLFromAssetURL:(id)arg1 photoLibrary:(id)arg2;
+ (struct CGImage { }*)newUnrotatedImageWithSize:(struct CGSize { float x1; float x2; })arg1 originalImage:(struct CGImage { }*)arg2 imageOrientation:(int)arg3;
+ (int)landscapeScrubberThumbnailFormat;
+ (int)portraitScrubberThumbnailFormat;
+ (id)keyPathsForValuesAffectingIsJPEG;
+ (id)keyPathsForValuesAffectingMimeType;
+ (id)keyPathsForValuesAffectingUtiType;
+ (id)keyPathsForValuesAffectingIsAudio;
+ (id)keyPathsForValuesAffectingIsPhoto;
+ (id)keyPathsForValuesAffectingIsVideo;
+ (id)keyPathsForValuesAffectingIsPhotoStreamPhoto;
+ (id)keyPathsForValuesAffectingDate;
+ (id)keyPathsForValuesAffectingHasLocationInfo;
+ (id)keyPathsForValuesAffectingGpsCoordinate;
+ (id)keyPathsForValuesAffectingRecordModDate;
+ (id)keyPathsForValuesAffectingImageSize;
+ (id)keyPathsForValuesAffectingCaptureTime;
+ (id)keyPathsForValuesAffectingAssetKind;
+ (id)pathsForAllIncompleteAssetsInManagedObjectContext:(id)arg1;
+ (id)incompleteAssetsInManagedObjectContext:(id)arg1;
+ (id)pathsForAssetsWithKind:(int)arg1 inManagedObjectContext:(id)arg2;
+ (id)assetsWithKind:(int)arg1 inManagedObjectContext:(id)arg2;
+ (unsigned int)countAssetsWithKind:(int)arg1 inManagedObjectContext:(id)arg2;
+ (id)insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(int)arg3 replacementUUID:(id)arg4 imageMetadata:(id)arg5 imageUTI:(id)arg6;
+ (id)assetWithObjectID:(id)arg1 inLibrary:(id)arg2;
+ (id)uuidFromAssetURL:(id)arg1 fileExtension:(id*)arg2 sidecarIndex:(id*)arg3;
+ (id)photoFromAssetURL:(id)arg1 photoLibrary:(id)arg2 sidecar:(id*)arg3;
+ (id)_pathsByAssetUUIDFromFetchResults:(id)arg1 absolute:(BOOL)arg2;
+ (id)bestCreationDateForAssetAtURL:(id)arg1 modificationDate:(id*)arg2;
+ (id)abbreviatedMetadataDirectoryForDirectory:(id)arg1;
+ (id)_insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(int)arg3 replacementUUID:(id)arg4 imageMetadata:(id)arg5 imageUTI:(id)arg6 imageSource:(struct CGImageSource {}**)arg7 imageData:(id*)arg8;
+ (id)assetWithObjectID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (int)formatForThumbnailGeneration;
+ (int)largestThumbnailFormat;
+ (int)posterThumbnailFormat;
+ (int)fullSizeImageFormat;
+ (int)wildcatPhotoScrubberFormat;
+ (int)wildcatCachedStackImageFormat;
+ (int)assetTypeFromUniformTypeIdentifier:(id)arg1;
+ (id)uniformTypeIdentifierFromPathExtension:(id)arg1 assetType:(int)arg2;
+ (id)preferredFileExtensionForType:(id)arg1;
+ (int)wildcatIndexSheetFormat;
+ (int)wildcatStackFormat;
+ (int)thumbnailFormat;
+ (int)indexSheetFormat;
+ (id)URLForMetadataWithExtension:(id)arg1 forMediaInMainDirectory:(id)arg2 withFilename:(id)arg3;
+ (id)assetWithUUID:(id)arg1 inLibrary:(id)arg2;
+ (id)insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(int)arg3 replacementUUID:(id)arg4 imageSource:(struct CGImageSource {}**)arg5 imageData:(id*)arg6;
+ (id)assetsWithUUIDs:(id)arg1 inLibrary:(id)arg2;
+ (id)photoFromAssetURL:(id)arg1 photoLibrary:(id)arg2;
+ (id)assetWithUUID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (unsigned int)countUsedAssetsWithKind:(int)arg1 inManagedObjectContext:(id)arg2;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;

- (void)setLocation:(id)arg1;
- (void)save;
- (void)dealloc;
- (void)setUserCloudSharedLiked:(BOOL)arg1;
- (void)userReadAllCloudSharedComments;
- (void)userDeleteCloudSharedComment:(id)arg1;
- (id)userAddCloudSharedCommentWithText:(id)arg1;
- (int)cloudCommentsStatusForOwnedAsset:(BOOL)arg1;
- (void)setCloudHasUnseenCommentsBoolValue:(BOOL)arg1;
- (void)setCloudPlaceholderKindValue:(int)arg1;
- (BOOL)userCloudSharedLiked;
- (void)deleteComment:(id)arg1;
- (BOOL)cloudHasUnseenCommentsBoolValue;
- (unsigned int)totalCommentsCount;
- (void)setCloudHasCommentsByMeBoolValue:(BOOL)arg1;
- (void)setCloudHasCommentsConversationBoolValue:(BOOL)arg1;
- (BOOL)cloudHasCommentsConversationBoolValue;
- (BOOL)cloudHasCommentsByMeBoolValue;
- (id)shortenedFilePath;
- (BOOL)isInRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)previewFrameImageFromDatabase;
- (id)wallpaperFullScreenImage;
- (id)textBadgeString;
- (void)copyToPasteboard;
- (id)newLowResolutionFullScreenImage;
- (id)newFullSizeImage;
- (id)newFullSizeImageForImagePickerClient;
- (id)mimeTypeForService:(id)arg1;
- (id)fileExtensionForService:(id)arg1;
- (BOOL)hasXMPFile;
- (id)pathForLowResolutionFile;
- (id)pathForPrebakedPortraitScrubberThumbnails;
- (id)pathForPrebakedLandscapeScrubberThumbnails;
- (id)fileURLForLargeDisplayableImage;
- (id)pathForTrimmedVideoFile;
- (id)pathForPrebakedWildcatThumbnailsFile;
- (id)allUniformTypeIdentifiers;
- (id)allFileURLs;
- (id)filePathsWithoutThumbs;
- (BOOL)isSavedPhotosAsset;
- (BOOL)couldBeStoredInDCIM;
- (void)setUniformTypeIdentifierFromPathExtension:(id)arg1 assetKind:(int)arg2;
- (BOOL)canPerformSharingActions;
- (BOOL)allowsWallpaperEditing;
- (BOOL)isHDVideo;
- (BOOL)supportsDistributedPhotoStreamDeletion;
- (BOOL)hasLocationInfo;
- (struct { double x1; double x2; })gpsCoordinate;
- (void)setRecordModDate;
- (void)setRecordModDate:(double)arg1;
- (double)recordModDate;
- (BOOL)allowsRotation;
- (void)setCaptureTime:(double)arg1;
- (double)captureTime;
- (void)setHDRFlagFromImageProperties:(id)arg1;
- (id)pictureTransferProtocolInformationWithAlbumsObjectIDs:(id)arg1;
- (BOOL)setAttributesFromMainFileURL:(id)arg1 savedAssetType:(int)arg2 imageSource:(struct CGImageSource {}**)arg3 imageData:(id*)arg4;
- (void)setEmbeddedThumbnailHeightValue:(short)arg1;
- (short)embeddedThumbnailHeightValue;
- (void)setEmbeddedThumbnailWidthValue:(short)arg1;
- (short)embeddedThumbnailWidthValue;
- (void)setEmbeddedThumbnailLengthValue:(int)arg1;
- (void)setEmbeddedThumbnailOffsetValue:(int)arg1;
- (id)embeddedThumbnailData;
- (BOOL)hasEmbeddedThumbnail;
- (id)faceWithIdentifier:(short)arg1;
- (void)setPersistedFileSystemAttributes;
- (void)updateFromPersistedFileSystemAttributes;
- (id)_prettyDescription;
- (id)_compactDebugDescription;
- (BOOL)hasGPS;
- (id)originalAsset;
- (id)adjustmentsXMPRepresentation;
- (void)deleteFromDatabaseOnly;
- (BOOL)isLocatedAtCoordinates:(struct { double x1; double x2; })arg1;
- (id)pasteBoardRepresentation;
- (id)fileExtension;
- (id)assetURLForSidecarFile:(id)arg1;
- (id)allFileExtensions;
- (id)largestAvailableDataRepresentationAndType:(id*)arg1;
- (id)newFullScreenImage:(const struct __CFDictionary {}**)arg1;
- (id)inflightImage;
- (BOOL)_isValidUTI:(id)arg1 forService:(id)arg2;
- (id)pathForXMPFile;
- (id)sortedSidecarFiles;
- (id)fileURLForMetadataWithExtension:(id)arg1;
- (id)pathForMetadataWithExtension:(id)arg1;
- (id)fileURLForPrebakedPortraitScrubberThumbnails;
- (id)fileURLForPrebakedLandscapeScrubberThumbnails;
- (void)setUtiType:(id)arg1;
- (int)cloudPlaceholderKindValue;
- (void)setGpsCoordinate:(struct { double x1; double x2; })arg1;
- (BOOL)isAudio;
- (void)setSavedAssetTypeFromImageProperties:(id)arg1;
- (void)setSizeAndOrientationFromImageProperties:(id)arg1;
- (int)assetKind;
- (void)updateAssetKindFromUniformTypeIdentifier;
- (BOOL)setAttributesFromMainFileURL:(id)arg1 savedAssetType:(int)arg2 imageMetadata:(id)arg3 imageUTI:(id)arg4 imageSource:(struct CGImageSource {}**)arg5 imageData:(id*)arg6;
- (void)setEmbeddedThumbnailHeight:(id)arg1;
- (id)embeddedThumbnailHeight;
- (void)setEmbeddedThumbnailWidth:(id)arg1;
- (id)embeddedThumbnailWidth;
- (void)setEmbeddedThumbnailLength:(id)arg1;
- (id)embeddedThumbnailLength;
- (void)setEmbeddedThumbnailOffset:(id)arg1;
- (id)embeddedThumbnailOffset;
- (int)embeddedThumbnailOffsetValue;
- (int)embeddedThumbnailLengthValue;
- (BOOL)_isSavedAssetTypeValueValid:(int)arg1;
- (id)_highDynamicRangeTypeDesription;
- (id)_savedAssetTypeDesription;
- (id)_kindDesription;
- (int)highDynamicRangeTypeValue;
- (id)inflightMetadata;
- (id)inflightIndexSheetImage;
- (id)inflightImagePath;
- (id)inflightImageInMemory;
- (void)setInflightIndexSheetImage:(id)arg1;
- (void)updateAdjustmentsWithFiltersAndIdentifiers:(id)arg1;
- (id)addAdjustment;
- (void)setThumbnailIndex:(int)arg1;
- (int)thumbnailIndex;
- (void)setHighDynamicRangeTypeValue:(int)arg1;
- (void)setIsInFlight:(BOOL)arg1;
- (id)fileURLForLargeThumbnailFile;
- (void)saveBakedVideoThumbnail;
- (id)indexSheetImage;
- (id)imageWithFormat:(int)arg1;
- (BOOL)isJPEG;
- (id)pathForLargeDisplayableImageFile;
- (unsigned int)effectiveThumbnailIndex;
- (id)imageWithFormat:(int)arg1 outImageProperties:(const struct __CFDictionary {}**)arg2;
- (void)setInflightMetadata:(id)arg1;
- (void)setUniformTypeIdentifierFromPathExtension:(id)arg1;
- (void)setAssetKind:(int)arg1;
- (void)setSavedAssetTypeValue:(int)arg1;
- (void)setInflightImageInMemory:(id)arg1;
- (void)setInflightImagePath:(id)arg1;
- (id)pathForImageFile;
- (id)mainFileURL;
- (id)utiType;
- (void)addExtension:(id)arg1;
- (id)pathForPrebakedThumbnail;
- (BOOL)isInFlight;
- (id)addFaceWithRelativeRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 identifier:(short)arg2 albumUUID:(id)arg3;
- (void)persistMetadataToFilesystem;
- (void)generateThumbnailsWithPreviewImage:(id)arg1 thumbnailImage:(id)arg2 existingThumbnailIndex:(unsigned int)arg3 fromImageSource:(struct CGImageSource { }*)arg4 imageData:(id)arg5 thumbnailDataByFormatID:(struct __CFDictionary { }*)arg6;
- (void)updateAdjustmentsWithAdjustmentMetadata:(id)arg1;
- (id)fileURLForSidecarFile:(id)arg1;
- (void)setOriginalAsset:(id)arg1;
- (BOOL)setVideoInfoFromFileAtURL:(id)arg1;
- (id)pathForVideoFile;
- (void)setLocationFromImageProperties:(id)arg1;
- (void)setThumbnailDataFromImageProperties:(id)arg1;
- (id)pathForOriginalFile;
- (void)registerForChanges;
- (void)unregisterForChanges;
- (void)setEffectiveThumbnailIndex:(unsigned int)arg1;
- (int)savedAssetTypeValue;
- (id)pathForLargeThumbnailFile;
- (BOOL)isPhoto;
- (id)fileURLForThumbnailFile;
- (id)pathForVideoPreviewFile;
- (id)pathForMetadataDirectory;
- (id)assetURL;
- (id)assetURLWithExtension:(id)arg1;
- (id)cloudShareAlbum;
- (BOOL)isCloudSharedAsset;
- (BOOL)isPhotoStreamPhoto;
- (void)delete;
- (BOOL)canPerformEditOperation:(int)arg1;
- (void)addComment:(id)arg1;
- (BOOL)isVideo;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (id)mimeType;
- (id)location;
- (struct CGSize { float x1; float x2; })imageSize;
- (id)date;
- (BOOL)isEditable;
- (void)setImageSize:(struct CGSize { float x1; float x2; })arg1;
- (void)prepareForDeletion;
- (void)awakeFromSnapshotEvents:(unsigned int)arg1;
- (void)awakeFromInsert;
- (void)willTurnIntoFault;
- (void)awakeFromFetch;

@end
