/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@class NSNumber, NSMutableIndexSet, UIImage, NSURL, NSIndexSet, NSMutableOrderedSet, PLIndexMapper, NSDate, NSPredicate, NSDictionary, NSArray, NSOrderedSet, <NSObject><NSCopying>, NSString, PLManagedAsset, NSObject<PLAssetContainer>;

@interface PLFilteredAlbum : NSObject <PLUserEditableAssetContainer, PLCloudSharedContainer, PLIndexMapperDataSource, PLIndexMappingCache> {
    PLIndexMapper *_indexMapper;
    NSMutableIndexSet *_filteredIndexes;
    BOOL _backingAlbumSupportsEdits;
    BOOL _backingAlbumSupportsCloudShared;
    NSMutableOrderedSet *_weak_assets;
    struct NSObject { Class x1; } *_backingAlbum;
    int filter;
    NSPredicate *predicate;
    BOOL isObservingContextChanges;
    NSArray *_filterParameters;
}

@property int filter;
@property(readonly) NSArray * filterParameters;
@property(readonly) PLIndexMapper * indexMapper;
@property(retain) NSObject<PLAssetContainer> * backingAlbum;
@property(retain) NSPredicate * predicate;
@property BOOL isObservingContextChanges;
@property NSMutableOrderedSet * _assets;
@property(readonly) NSString * uuid;
@property(readonly) NSNumber * kind;
@property(readonly) int kindValue;
@property(readonly) NSString * title;
@property(readonly) NSString * localizedTitle;
@property(readonly) NSOrderedSet * assets;
@property(readonly) NSMutableOrderedSet * mutableAssets;
@property(readonly) unsigned int approximateCount;
@property(readonly) unsigned int assetsCount;
@property(readonly) unsigned int count;
@property(readonly) unsigned int photosCount;
@property(readonly) unsigned int videosCount;
@property BOOL hasUnseenContentBoolValue;
@property(readonly) BOOL isEmpty;
@property(readonly) NSString * name;
@property(retain) PLManagedAsset * keyAsset;
@property(readonly) UIImage * posterImage;
@property(readonly) BOOL isLibrary;
@property(readonly) BOOL isCameraAlbum;
@property(readonly) BOOL isPhotoStreamAlbum;
@property(readonly) BOOL isCloudSharedAlbum;
@property(readonly) BOOL isOwnedCloudSharedAlbum;
@property(readonly) BOOL canShowComments;
@property(readonly) BOOL shouldDeleteWhenEmpty;
@property(retain) NSDictionary * slideshowSettings;
@property(retain) NSString * importSessionID;
@property(readonly) NSURL * groupURL;
@property(readonly) id sortingComparator;
@property(readonly) id sectioningComparator;
@property unsigned int pendingItemsCount;
@property unsigned int pendingItemsType;
@property(readonly) NSMutableOrderedSet * userEditableAssets;
@property(retain) NSString * cloudGUID;
@property(retain) NSDictionary * cloudMetadata;
@property(retain) NSString * cloudOwnerFirstName;
@property(retain) NSString * cloudOwnerLastName;
@property(retain) NSString * cloudOwnerEmail;
@property(retain) NSString * publicURL;
@property(retain) NSOrderedSet * invitationRecords;
@property(retain) NSNumber * unseenAssetsCount;
@property unsigned int unseenAssetsCountIntegerValue;
@property(retain) NSNumber * cloudPublicURLEnabled;
@property(retain) NSNumber * cloudPublicURLEnabledLocal;
@property(retain) NSDate * cloudLastInterestingChangeDate;
@property(retain) NSString * cloudPersonID;
@property(readonly) int cloudRelationshipStateValue;
@property(readonly) int cloudRelationshipStateLocalValue;
@property(readonly) NSString * localizedSharedWithLabel;
@property(readonly) NSOrderedSet * cloudAlbumSubscriberRecords;
@property(readonly) NSDate * cloudFirstRecentBatchDate;
@property(readonly) NSIndexSet * filteredIndexes;
@property(readonly) <NSObject><NSCopying> * cachedIndexMapState;

+ (struct NSObject { Class x1; }*)unfilteredAlbum:(struct NSObject { Class x1; }*)arg1;
+ (struct NSObject { Class x1; }*)filteredAlbum:(struct NSObject { Class x1; }*)arg1 intersectFilter:(int)arg2;
+ (struct NSObject { Class x1; }*)filteredAlbum:(struct NSObject { Class x1; }*)arg1 filter:(int)arg2;
+ (id)filteredIndexesInAlbum:(struct NSObject { Class x1; }*)arg1 predicate:(id)arg2;
+ (id)predicateForAlbumFilter:(int)arg1 parameters:(id)arg2;
+ (id)descriptionForAlbumFilter:(int)arg1 parameters:(id)arg2;
+ (struct NSObject { Class x1; }*)filteredAlbum:(struct NSObject { Class x1; }*)arg1 filter:(int)arg2 parameters:(id)arg3;

- (int)filter;
- (void)setPredicate:(id)arg1;
- (id)name;
- (id)description;
- (void)dealloc;
- (unsigned int)count;
- (BOOL)isObservingContextChanges;
- (void)replaceFilteredAssetsAtIndexes:(id)arg1 withFilteredValues:(id)arg2;
- (void)replaceObjectInFilteredAssetsAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeFilteredAssetsAtIndexes:(id)arg1;
- (void)insertFilteredAssets:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromFilteredAssetsAtIndex:(unsigned int)arg1;
- (void)insertObject:(id)arg1 inFilteredAssetsAtIndex:(unsigned int)arg2;
- (void)getFilteredAssets:(id*)arg1 range:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2;
- (id)filteredAssetsAtIndexes:(id)arg1;
- (id)objectInFilteredAssetsAtIndex:(unsigned int)arg1;
- (unsigned int)indexInFilteredAssetsOfObject:(id)arg1;
- (unsigned int)countOfFilteredAssets;
- (id)indexMapper;
- (id)cachedIndexMapState;
- (id)currentStateForChange;
- (Class)derivedChangeNotificationClass;
- (BOOL)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2;
- (BOOL)shouldIncludeObjectAtIndex:(unsigned int)arg1;
- (id)_editableBackingAlbum;
- (void)backingContextDidChange:(id)arg1;
- (void)setIsObservingContextChanges:(BOOL)arg1;
- (id)_cloudSharedBackingAlbum;
- (id)filteredIndexes;
- (id)_assets;
- (void)set_assets:(id)arg1;
- (void)setBackingAlbum:(id)arg1;
- (id)initWithBackingAlbum:(struct NSObject { Class x1; }*)arg1 filter:(int)arg2 parameters:(id)arg3;
- (struct NSObject { Class x1; }*)backingAlbum;
- (id)filterParameters;
- (id)userEditableAssets;
- (void)setPendingItemsType:(unsigned int)arg1;
- (unsigned int)pendingItemsType;
- (void)setPendingItemsCount:(unsigned int)arg1;
- (unsigned int)pendingItemsCount;
- (id)sectioningComparator;
- (id)sortingComparator;
- (id)groupURL;
- (void)setImportSessionID:(id)arg1;
- (id)importSessionID;
- (void)setSlideshowSettings:(id)arg1;
- (id)slideshowSettings;
- (BOOL)shouldDeleteWhenEmpty;
- (BOOL)canShowComments;
- (BOOL)isOwnedCloudSharedAlbum;
- (BOOL)isPhotoStreamAlbum;
- (BOOL)isLibrary;
- (id)posterImage;
- (void)setKeyAsset:(id)arg1;
- (id)keyAsset;
- (void)setHasUnseenContentBoolValue:(BOOL)arg1;
- (BOOL)hasUnseenContentBoolValue;
- (unsigned int)videosCount;
- (unsigned int)photosCount;
- (unsigned int)assetsCount;
- (unsigned int)approximateCount;
- (id)mutableAssets;
- (id)assets;
- (id)uuid;
- (void)batchFetchAssets:(id)arg1;
- (void)updateStackedImageShouldNotifyImmediately:(BOOL)arg1;
- (void)reducePendingItemsCountBy:(unsigned int)arg1;
- (id)displayableIndexesForCount:(unsigned int)arg1;
- (id)titleForSectionStartingAtIndex:(unsigned int)arg1;
- (BOOL)canPerformEditOperation:(int)arg1;
- (id)cloudFirstRecentBatchDate;
- (id)cloudAlbumSubscriberRecords;
- (id)localizedSharedWithLabel;
- (int)cloudRelationshipStateLocalValue;
- (int)cloudRelationshipStateValue;
- (void)setCloudPersonID:(id)arg1;
- (id)cloudPersonID;
- (void)setCloudLastInterestingChangeDate:(id)arg1;
- (id)cloudLastInterestingChangeDate;
- (void)setCloudPublicURLEnabledLocal:(id)arg1;
- (id)cloudPublicURLEnabledLocal;
- (void)setCloudPublicURLEnabled:(id)arg1;
- (id)cloudPublicURLEnabled;
- (void)setUnseenAssetsCountIntegerValue:(unsigned int)arg1;
- (unsigned int)unseenAssetsCountIntegerValue;
- (void)setUnseenAssetsCount:(id)arg1;
- (id)unseenAssetsCount;
- (void)setInvitationRecords:(id)arg1;
- (id)invitationRecords;
- (void)setPublicURL:(id)arg1;
- (id)publicURL;
- (void)setCloudOwnerEmail:(id)arg1;
- (id)cloudOwnerEmail;
- (void)setCloudOwnerLastName:(id)arg1;
- (id)cloudOwnerLastName;
- (void)setCloudOwnerFirstName:(id)arg1;
- (id)cloudOwnerFirstName;
- (void)setCloudMetadata:(id)arg1;
- (id)cloudMetadata;
- (void)setCloudGUID:(id)arg1;
- (id)cloudGUID;
- (void)userDeleteSubscriberRecord:(id)arg1;
- (void)getUnseenStartMarkerIndex:(unsigned int*)arg1 count:(unsigned int*)arg2 showsProgress:(BOOL*)arg3;
- (void)updateCloudLastInterestingChangeDateWithDate:(id)arg1;
- (id)cloudOwnerDisplayNameIncludingEmail:(BOOL)arg1 allowsEmail:(BOOL)arg2;
- (id)localizedSharedByLabelAllowsEmail:(BOOL)arg1;
- (BOOL)isCloudSharedAlbum;
- (int)kindValue;
- (BOOL)isCameraAlbum;
- (id)kind;
- (id)title;
- (void)setFilter:(int)arg1;
- (BOOL)isEmpty;
- (id)localizedTitle;
- (id)predicate;

@end
