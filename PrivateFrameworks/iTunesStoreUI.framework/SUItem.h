/* Generated by RuntimeBrowser on iPhone OS 4.2.1
   Image: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI
 */

@class SUItemContentRating, NSArray, NSDate, SUItemReviewStatistics, NSDictionary, SSItemImageCollection, SUItem, NSString, SSItemOffer;



@interface SUItem : NSObject <NSCopying>
{
    NSString *_artistName;
    NSString *_bundleIdentifier;
    NSString *_bundleVersion;
    NSString *_collectionName;
    SUItem *_containerItem;
    NSString *_containerName;
    SUItemContentRating *_contentRating;
    NSString *_copyrightString;
    SSItemOffer *_defaultStoreOffer;
    NSDictionary *_dictionary;
    NSString *_disclaimerString;
    BOOL _gameCenterEnabled;
    NSString *_genreName;
    NSString *_humanReadableDescription;
    NSInteger _itemDisplayType;
    unsigned long long _itemIdentifier;
    SSItemImageCollection *_itemImageCollection;
    NSArray *_itemLinks;
    NSString *_itemMediaKind;
    NSInteger _itemType;
    NSDate *_releaseDate;
    NSString *_releaseDateString;
    NSInteger _representedItemCount;
    SUItemReviewStatistics *_reviewStatistics;
    NSString *_secondaryTitle;
    NSArray *_storeOffers;
    NSString *_title;
    NSString *_unmodifiedTitle;
}

@property(getter=isDownloadable,readonly) BOOL downloadable;
@property(readonly) SUItemLink *externalArtistPageLink;
@property(readonly) NSString *itemTypeString;
@property(copy) NSString *unmodifiedTitle;
@property(copy) NSString *title;
@property(copy) NSArray *storeOffers;
@property(copy) NSString *secondaryTitle;
@property(copy) SUItemReviewStatistics *reviewStatistics;
@property NSInteger representedItemCount;
@property(retain) NSDate *releaseDate;
@property NSInteger itemType;
@property(copy) NSString *itemMediaKind;
@property(copy) NSArray *itemLinks;
@property(copy) SSItemImageCollection *itemImageCollection;
@property unsigned long long itemIdentifier;
@property NSInteger itemDisplayType;
@property(readonly) NSDictionary *itemDictionary;
@property(copy) NSString *humanReadableDescription;
@property(copy) NSString *genreName;
@property(getter=isGameCenterEnabled) BOOL gameCenterEnabled;
@property(copy) NSString *disclaimerString;
@property(readonly) SSItemOffer *defaultStoreOffer;
@property(copy) NSString *copyrightString;
@property(copy) SUItemContentRating *contentRating;
@property(copy) NSString *containerName;
@property(retain) SUItem *containerItem;
@property(copy) NSString *collectionName;
@property(copy) NSString *bundleVersion;
@property(copy) NSString *bundleIdentifier;
@property(copy) NSString *artistName;


- (id)copyReleaseDateStringWithStyle:(long)arg1;
- (id)externalArtistPageLink;
- (NSInteger)integerValueForProperty:(id)arg1;
- (BOOL)isDownloadable;
- (void)setStoreOffers:(id)arg1;
- (id)storeOfferForIdentifier:(id)arg1;
- (NSInteger)_linkTargetForTargetString:(id)arg1 typeString:(id)arg2;
- (NSInteger)_linkTypeForString:(id)arg1;
- (id)_newItemLinkWithType:(NSInteger)arg1 dictionary:(id)arg2;
- (id)_newItemLinkWithType:(NSInteger)arg1 URLKey:(id)arg2 titleKey:(id)arg3;
- (id)_newPrimaryItemLink;
- (void)_reloadDefaultStoreOffer;
- (void)_reloadImagesAndLinksFromSquishes:(id)arg1;
- (void)_reloadItemImages;
- (void)_reloadItemLinks;
- (void)_reloadStoreOffers;
- (id)_squishImageForSquishDictionary:(id)arg1;
- (id)_valueForFirstAvailableKey:(id)arg1;
- (void)setUnmodifiedTitle:(id)arg1;
- (id)storeOffers;
- (id)secondaryTitle;
- (void)setSecondaryTitle:(id)arg1;
- (void)setReviewStatistics:(id)arg1;
- (NSInteger)representedItemCount;
- (void)setRepresentedItemCount:(NSInteger)arg1;
- (void)setReleaseDate:(id)arg1;
- (void)setItemMediaKind:(id)arg1;
- (void)setItemLinks:(id)arg1;
- (void)setItemImageCollection:(id)arg1;
- (NSInteger)itemDisplayType;
- (void)setItemDisplayType:(NSInteger)arg1;
- (void)setHumanReadableDescription:(id)arg1;
- (id)genreName;
- (void)setGenreName:(id)arg1;
- (BOOL)isGameCenterEnabled;
- (void)setGameCenterEnabled:(BOOL)arg1;
- (id)disclaimerString;
- (void)setDisclaimerString:(id)arg1;
- (id)copyrightString;
- (void)setCopyrightString:(id)arg1;
- (void)setContentRating:(id)arg1;
- (id)containerName;
- (void)setContainerName:(id)arg1;
- (id)collectionName;
- (void)setCollectionName:(id)arg1;
- (void)setBundleVersion:(id)arg1;
- (void)setArtistName:(id)arg1;
- (id)itemTypeString;
- (void)setItemType:(NSInteger)arg1;
- (id)artistName;
- (id)unmodifiedTitle;
- (id)containerItem;
- (id)itemDictionary;
- (id)contentRating;
- (id)itemMediaKind;
- (void)setBundleIdentifier:(id)arg1;
- (BOOL)isDisplayable:(id*)arg1;
- (id)firstItemLinkForType:(NSInteger)arg1;
- (id)bundleVersion;
- (id)defaultStoreOffer;
- (void)setItemIdentifier:(unsigned long long)arg1;
- (id)dateValueForProperty:(id)arg1;
- (id)humanReadableDescription;
- (id)reviewStatistics;
- (unsigned long long)itemIdentifier;
- (id)itemLinks;
- (NSInteger)itemType;
- (id)itemLinksForType:(NSInteger)arg1;
- (BOOL)boolValueForProperty:(id)arg1;
- (void)setContainerItem:(id)arg1;
- (id)itemImageCollection;
- (void)_reloadProperties;
- (id)valueForProperty:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)title;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)bundleIdentifier;
- (void)setTitle:(id)arg1;
- (void)dealloc;
- (id)releaseDate;
- (id)stringValueForProperty:(id)arg1;

@end
