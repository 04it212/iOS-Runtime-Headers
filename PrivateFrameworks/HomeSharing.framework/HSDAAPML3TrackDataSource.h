/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeSharing.framework/HomeSharing
 */

@class NSArray, NSData;

@interface HSDAAPML3TrackDataSource : NSObject <ML3TrackInsertionDataSource> {
    struct { 
        unsigned int propertyCode; 
        void *bytes; 
        unsigned int encodedLength; 
        int valueType; 
    unsigned int _idx;
    NSData *_itemsResponseData;
    int _parsedValuesPropertyIndex[83];
    } _parsedValues[256];
    NSArray *_rawItems;
}

- (void)_parseCurrentItem;
- (id)currentTrackAlbum;
- (id)currentTrackAlbumArtist;
- (id)currentTrackArtist;
- (id)currentTrackArtworkCacheID;
- (long long)currentTrackAudioFormat;
- (int)currentTrackAudioLanguage;
- (int)currentTrackAudioTrackID;
- (int)currentTrackAudioTrackIndex;
- (int)currentTrackBPM;
- (int)currentTrackBitRate;
- (double)currentTrackBookmarkTimeMS;
- (id)currentTrackCategory;
- (id)currentTrackChapterData;
- (BOOL)currentTrackChosenByAutoFill;
- (id)currentTrackComment;
- (id)currentTrackComposer;
- (int)currentTrackContentRating;
- (double)currentTrackDateAdded;
- (double)currentTrackDateLastUsed;
- (double)currentTrackDateModified;
- (double)currentTrackDatePlayed;
- (double)currentTrackDateReleased;
- (double)currentTrackDateSkipped;
- (int)currentTrackDiscCount;
- (int)currentTrackDiscNumber;
- (long long)currentTrackDurationInSamples;
- (int)currentTrackEpisodeSortID;
- (BOOL)currentTrackExcludeFromShuffle;
- (id)currentTrackFeedURL;
- (id)currentTrackFilePath;
- (long long)currentTrackGaplessEncodingDelay;
- (long long)currentTrackGaplessEncodingDrain;
- (long long)currentTrackGaplessHeuristicInfo;
- (long long)currentTrackGaplessLastFrameResync;
- (long long)currentTrackGeniusChecksum;
- (id)currentTrackGenre;
- (long long)currentTrackGlobalID;
- (BOOL)currentTrackHasAlternateAudio;
- (BOOL)currentTrackHasBeenPlayed;
- (BOOL)currentTrackHasSubtitles;
- (BOOL)currentTrackIsAudibleAudioBook;
- (BOOL)currentTrackIsCompilation;
- (BOOL)currentTrackIsDemoRental;
- (int)currentTrackIsDownloading;
- (BOOL)currentTrackIsHD;
- (BOOL)currentTrackIsHidden;
- (BOOL)currentTrackIsITunesU;
- (BOOL)currentTrackIsOTAPurchased;
- (BOOL)currentTrackIsPodcast;
- (BOOL)currentTrackIsRental;
- (BOOL)currentTrackIsTemporaryCloudDownload;
- (BOOL)currentTrackIsUserDisabled;
- (id)currentTrackKind;
- (unsigned long)currentTrackMediaType;
- (long long)currentTrackPendingGeniusChecksum;
- (long long)currentTrackPersistentID;
- (int)currentTrackPlayCountRecent;
- (int)currentTrackPlayCountUser;
- (long long)currentTrackRatingLevel;
- (double)currentTrackRelativeVolume;
- (BOOL)currentTrackRememberBookmarkTime;
- (long long)currentTrackRentalDuration;
- (long long)currentTrackRentalPlaybackDuration;
- (double)currentTrackRentalPlaybackStartDate;
- (double)currentTrackRentalStartDate;
- (int)currentTrackSampleRate;
- (id)currentTrackSeasonNumber;
- (id)currentTrackSeriesName;
- (int)currentTrackSkipCountRecent;
- (int)currentTrackSkipCountUser;
- (id)currentTrackSortAlbum;
- (id)currentTrackSortAlbumArtist;
- (id)currentTrackSortArtist;
- (id)currentTrackSortComposer;
- (id)currentTrackSortSeriesName;
- (id)currentTrackSortTitle;
- (double)currentTrackStartTimeMS;
- (double)currentTrackStopTimeMS;
- (long long)currentTrackStoreAccountID;
- (long long)currentTrackStoreArtistID;
- (long long)currentTrackStoreComposerID;
- (double)currentTrackStoreDatePurchased;
- (long long)currentTrackStoreGenreID;
- (long long)currentTrackStoreItemID;
- (long long)currentTrackStoreKeyID;
- (long long)currentTrackStoreKeyPlatformID;
- (long long)currentTrackStoreKeyVersions;
- (long long)currentTrackStoreMatchedStatus;
- (long long)currentTrackStorePlaylistID;
- (long long)currentTrackStoreRedownloadedStatus;
- (long long)currentTrackStoreSagaID;
- (long long)currentTrackStoreStoreKind;
- (long long)currentTrackStoreStorefrontID;
- (long long)currentTrackStoreXID;
- (int)currentTrackSubtitleLanguage;
- (int)currentTrackSubtitleTrackID;
- (int)currentTrackSubtitleTrackIndex;
- (id)currentTrackTitle;
- (long long)currentTrackTotalSize;
- (double)currentTrackTotalTimeMS;
- (int)currentTrackTrackCount;
- (int)currentTrackTrackNumber;
- (int)currentTrackUserAlbumRating;
- (int)currentTrackUserRating;
- (long long)currentTrackVolumeNormalization;
- (int)currentTrackYear;
- (void)dealloc;
- (void)getCurrentTrackArtworkCacheID:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackCategory:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackChapterData:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackCollectionDescription:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackComment:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackCopyright:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackDescription:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackDownloadIdentifier:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackEQPreset:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackEpisodeID:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackExtendedContentRating:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackFeedURL:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackGrouping:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackIntegrity:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackLongDescription:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackLyrics:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackMovieInfo:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackNetworkName:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackPodcastExternalGUID:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackRedownloadActionParameters:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackSortTitle:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackStoreArtworkURL:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackStoreFlavor:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackStoreLinkID:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackStoreURL:(struct sqlite3_context { }*)arg1;
- (void)getCurrentTrackTitle:(struct sqlite3_context { }*)arg1;
- (BOOL)hasNextTrack;
- (id)initWithItemsResponseData:(id)arg1;
- (BOOL)mediaKindIsSupported:(unsigned int)arg1;
- (void)postParseCurrentTrack;
- (void)seekToNextTrack;
- (void)seekToStart;

@end
