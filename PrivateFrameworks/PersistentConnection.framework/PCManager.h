/* Generated by RuntimeBrowser on iPhone OS 2.2.1
   Image: /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection
 */

@class PCPersistentInterfaceManager, NSDate, NSString, PCPersistentTimer, NSThread, PHMGrowthAlgorithm;



@interface PCManager : NSObject 
{
    NSInteger _state;
    NSInteger _prefsStyle;
    PHMGrowthAlgorithm *_growthAlgorithm;
    int (*_hbCallback)();
    void *_context;
    NSString *_identifier;
    NSString *_powerIdentifier;
    float _hbThreshold;
    NSDate *_scheduledWakeDate;
    BOOL _hbSlicesInitialized;
    NSInteger _hbSlices[4];
    PCPersistentTimer *_heartbeatTimer;
    PCPersistentTimer *_delayTimer;
    NSDate *_onTimeWakeDate;
    double _pingStartTime;
    BOOL _hadEarlyHeartbeat;
    BOOL _isForcedHeartbeat;
    BOOL _hasStarted;
    BOOL _isRunning;
    BOOL _inCallback;
    PCPersistentInterfaceManager *_interfaceManager;
    NSInteger _defaultPollingInterval;
    NSInteger _overridePollingInterval;
    BOOL _isPollingIntervalOverriden;
    NSInteger _wakeGracePeriod;
    NSInteger _reconnectIteration;
    BOOL _reconnectWithHBIDelay;
    BOOL _exclusivelyPolls;
    NSThread *_managerThread;
}

@property(retain) NSThread *managerThread; /* unknown property attribute: V_managerThread */

+ (id)sharedPowerControlOperationQueue;
+ (void)_setSpeedFactor:(float)arg1;
+ (unsigned long long)uniqueIdentifier;
+ (NSInteger)_deviceOffset;
+ (void)prepareSocketForPush:(NSInteger)arg1;
+ (void)prepareStreamForPush:(struct __CFReadStream { }*)arg1;
+ (id)urlConnectionForPushWithRequest:(id)arg1 delegeate:(id)arg2 usesCache:(BOOL)arg3 maxContentLength:(long long)arg4 startImmediately:(BOOL)arg5 connectionProperties:(id)arg6;
+ (id)getLastSystemWakeDate;

- (void)dealloc;
- (void)_loadPrefsGeneratingEvent:(id)arg1;
- (void)_adjustInterfaceAssertion;
- (id)initWithCallback:(int (*)())arg1 serviceIdentifier:(id)arg2 context:(void*)arg3;
- (void)_setupHBSlices;
- (NSInteger)_nextForcedHB;
- (void)_setupWakeTimeInterval:(double)arg1 heartbeatFireInterval:(double)arg2;
- (void)_setupHeartbeatForReconnect;
- (void)_setupHeartbeatForPoll;
- (void)_setupHeartbeatForPush:(NSInteger)arg1;
- (void)setHeartbeatThreshold:(float)arg1;
- (NSInteger)style;
- (NSInteger)heartbeatGracePeriod;
- (void)setHeartbeatGracePeriod:(NSInteger)arg1;
- (void)setExclusivelyPolls;
- (NSInteger)pollingInterval;
- (void)setOverridePollingInterval:(NSInteger)arg1;
- (void)cancelPollingIntervalOverride;
- (BOOL)_validateActionForCurrentStyle:(NSInteger)arg1;
- (void)_resolveStateWithAction:(NSInteger)arg1;
- (void)startHeartbeat;
- (void)resumeHeartbeat:(NSInteger)arg1;
- (void)endHeartbeat;
- (BOOL)shouldClientScheduleReconnectDueToFailure;
- (NSInteger)currentHeartbeatInterval;
- (void)setMinimumHeartbeatInterval:(NSInteger)arg1;
- (void)setMaximumHeartbeatInterval:(NSInteger)arg1;
- (void)_interfaceStatusChanged:(id)arg1;
- (void)_hbTimerFired:(id)arg1;
- (void)_sendHBNotificationWithDelay:(double)arg1;
- (void)_hbDelayedFire:(id)arg1;
- (void)_callBackWithEvent:(NSInteger)arg1;
- (void)_clearTimers;
- (id)_powerIdentifier;
- (void)_setupWakeAtDate:(id)arg1;
- (void)_cancelScheduledWake;
- (void)_cancelAllExistingWakes;
- (void)_takePowerAssertion;
- (void)_releasePowerAssertion;
- (void)_performWakeWithDate:(id)arg1 setWake:(BOOL)arg2;
- (id)_hbiCacheDirectoryPath;
- (id)_hbiCachePath;
- (id)_hbiCacheLockfilePath;
- (BOOL)_isCachedHBIStillValid:(NSInteger)arg1 date:(id)arg2;
- (NSInteger)_openLockFile;
- (void)_closeLockFile:(NSInteger)arg1;
- (void)_saveCachedHBI:(NSInteger)arg1;
- (NSInteger)_getCachedHBI;
- (id)_stringForEvent:(NSInteger)arg1;
- (id)managerThread;
- (void)setManagerThread:(id)arg1;

@end
