/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
 */

@class <AFSpeechDelegate>, DKConnection, <AFAssistantUIService>;

@interface AFConnection : NSObject <AFManagedStore> {
    DKConnection *_connection;
    <AFAssistantUIService> *_delegate;
    <AFSpeechDelegate> *_speechDelegate;
    float _averagePower;
    float _peakPower;
    unsigned int _stateInSync : 1;
    unsigned int _shouldSpeak : 1;
    unsigned int _isCapturingSpeech : 1;
    unsigned int _hasOutstandingRequest : 1;
    unsigned int _replyContextMayInitiateCall : 1;
}

@property <AFAssistantUIService> * delegate;
@property <AFSpeechDelegate> * speechDelegate;
@property(readonly) BOOL isRecording;

+ (BOOL)isAvailable;
+ (void)initialize;
+ (BOOL)userDataSyncNeeded;
+ (void)stopMonitoringAvailability;
+ (BOOL)assistantIsSupported;
+ (BOOL)assistantIsSupportedForLanguageCode:(id)arg1 error:(id*)arg2;
+ (void)beginMonitoringAvailability;
+ (void)_reachabilityDidChange:(id)arg1;
+ (BOOL)assistantIsEnabled;

- (id)init;
- (void)dealloc;
- (BOOL)isRecording;
- (void)stopSpeech;
- (void)cancelSpeech;
- (void)endSession;
- (float)averagePower;
- (void)setRecordingAlertRoute:(int)arg1;
- (void)preheat;
- (id)_connection;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)rollbackRequest;
- (void)clearContext;
- (void)startSpeechRequest;
- (void)_clearAssistantInfoForAccountWithIdentifier:(id)arg1;
- (void)_asyncBarrierWithBlock:(id)arg1;
- (void)_barrier;
- (void)_sendMessage:(id)arg1 withReplySync:(id)arg2;
- (void)_sendMessage:(id)arg1 withReply:(id)arg2;
- (void)startSpeechRequestWithSpeechFileAtURL:(id)arg1;
- (void)setSpeechDelegate:(id)arg1;
- (id)speechDelegate;
- (void)clearUndoStack;
- (void)redoRequest;
- (void)undoRequest;
- (void)clearAndSetApplicationContext;
- (void)sendReplyCommand:(id)arg1;
- (void)sendGenericAceCommand:(id)arg1;
- (BOOL)replyContextMayInitiateCall;
- (float)peakPower;
- (void)startRequestWithCorrectedText:(id)arg1 forSpeechIdentifier:(id)arg2;
- (void)setBluetoothDeviceAddress:(id)arg1;
- (void)startRequestWithText:(id)arg1;
- (void)setLockState:(BOOL)arg1;
- (BOOL)setLanguageCode:(id)arg1 error:(id*)arg2;
- (void)_msgSpeechRecognitionDidFail:(id)arg1;
- (void)_msgSpeechRecognized:(id)arg1;
- (void)_msgSpeechRecordingDidFail:(id)arg1;
- (void)_msgSpeechRecordingDidCancel:(id)arg1;
- (void)_msgSpeechRecordingDidEnd:(id)arg1;
- (void)_msgSpeechLevelUpdate:(id)arg1;
- (void)_msgSpeechRecordingDidBegin:(id)arg1;
- (void)_msgSpeechRecordingWillBegin:(id)arg1;
- (void)_msgReplyMayInitiateCall:(id)arg1;
- (void)_msgRequestError:(id)arg1;
- (void)_msgRequestCompleted:(id)arg1;
- (void)_msgDoCommand:(id)arg1;
- (void)setDomainObject:(id)arg1 forKey:(id)arg2;
- (id)domainObjectForKey:(id)arg1;
- (void)startSpeechRequestWithOptions:(id)arg1;
- (void)startRequestWithText:(id)arg1 timeout:(double)arg2;
- (void)_scheduleRequestTimeout:(double)arg1;
- (void)_requestWillBegin;
- (void)_msgStateUpdate:(id)arg1;
- (void)_invokeRequestTimeout;
- (void)_handleMessage:(id)arg1;
- (void)_unhandledMessage:(id)arg1;
- (void)_cancelRequestTimeout;
- (void)_tellSpeechDelegateRecognitionDidFail:(id)arg1;
- (void)_tellSpeechDelegateDidRecognizeSpeechPhrases:(id)arg1 correctionIdentifier:(id)arg2;
- (void)_tellSpeechDelegateRecordingDidFail:(id)arg1;
- (void)_tellSpeechDelegateRecordingDidCancel;
- (void)_tellSpeechDelegateRecordingDidEnd;
- (void)_checkAndSetIsCapturingSpeech:(BOOL)arg1;
- (void)_tellSpeechDelegateRecordingDidBegin;
- (void)_tellSpeechDelegateRecordingWillBegin;
- (void)_tellDelegateShouldSpeakChanged:(BOOL)arg1;
- (BOOL)shouldSpeak;
- (void)_tellDelegateRequestFailed:(id)arg1;
- (void)_tellDelegateRequestFinished;
- (void)_requestDidEnd;
- (void)_clearConnection;
- (void)_requestStateUpdate;
- (void)cancelRequest;

@end
