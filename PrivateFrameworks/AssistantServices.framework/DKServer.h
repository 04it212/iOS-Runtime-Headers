/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSMutableSet, NSString, NSSet, NSMutableDictionary;

@interface DKServer : NSObject  {
    struct _xpc_connection_s { } *_conn;
    NSMutableSet *_connections;
    NSMutableDictionary *_handlerMap;
    NSString *_entitlement;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _allowConnectionHandler;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _newConnectionHandler;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _disconnectHandler;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _shutdownHandler;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _defaultMessageHandler;

    struct dispatch_queue_s { } *_dispatchQueue;
}

@property(readonly) NSSet * connections;
@property(copy) id allowConnectionHandler;
@property(copy) id newConnectionHandler;
@property(copy) id defaultMessageHandler;
@property(copy) id disconnectHandler;
@property(copy) id shutdownHandler;


- (void)shutdown;
- (void)dealloc;
- (void)setDispatchQueue:(struct dispatch_queue_s { }*)arg1;
- (void)resume;
- (void)setShutdownHandler:(id)arg1;
- (id)shutdownHandler;
- (id)defaultMessageHandler;
- (void)setNewConnectionHandler:(id)arg1;
- (id)newConnectionHandler;
- (void)setAllowConnectionHandler:(id)arg1;
- (id)allowConnectionHandler;
- (BOOL)hasActiveConnections;
- (void)setHandlerForMessageName:(id)arg1 handler:(id)arg2;
- (id)initListenerWithServiceName:(id)arg1;
- (struct dispatch_queue_s { }*)_highAvailabilityQueue;
- (void)setDefaultMessageHandler:(id)arg1;
- (id)initListenerWithServiceName:(id)arg1 andQueue:(struct dispatch_queue_s { }*)arg2;
- (void)_handleNewConnection:(struct _xpc_connection_s { }*)arg1;
- (BOOL)_connectionIsAllowed:(struct _xpc_connection_s { }*)arg1;
- (id)_handlerForMessageName:(id)arg1;
- (id)_connections;
- (void)setDisconnectHandler:(id)arg1;
- (id)disconnectHandler;
- (id)connections;

@end
