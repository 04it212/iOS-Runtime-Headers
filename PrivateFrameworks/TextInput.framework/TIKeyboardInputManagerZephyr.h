/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextInput.framework/TextInput
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class UIKeyboardCandidate, TIKeyboardInputManagerConfig, TIWordTokenizer, NSMutableString, NSMutableArray, CPLRUDictionary;

@interface TIKeyboardInputManagerZephyr : UIKeyboardInputManager {
    struct RefPtr<TIAutoshiftRegularExpression> { 
        struct TIAutoshiftRegularExpression {} *m_ptr; 
    int _autocapitalizationType;
    CPLRUDictionary *_autocorrectionHistory;
    TIKeyboardInputManagerConfig *_config;
    NSMutableArray *_inputHistory;
    UIKeyboardCandidate *_revisitedCandidate;
    } m_autoshift_regex;
    NSMutableString *m_composedText;
    unsigned int m_defaultCandidateIndex;
    struct TIInputManagerZephyr { int (**x1)(); struct vector<KB::Input, std::allocator<KB::Input> > { struct _Vector_impl { struct Input {} *x_1_2_1; struct Input {} *x_1_2_2; struct Input {} *x_1_2_3; } x_2_1_1; } x2; struct String { unsigned short x_3_1_1; unsigned short x_3_1_2; unsigned short x_3_1_3; unsigned short x_3_1_4; unsigned char x_3_1_5; char *x_3_1_6; BOOL x_3_1_7[16]; } x3; struct String { unsigned short x_4_1_1; unsigned short x_4_1_2; unsigned short x_4_1_3; unsigned short x_4_1_4; unsigned char x_4_1_5; char *x_4_1_6; BOOL x_4_1_7[16]; } x4; unsigned int x5; unsigned int x6; struct Hashmap<KB::String, KB::Word> { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; boolx_7_1_6; struct HashTraits<KB::String> { } x_7_1_7; struct Bucket<KB::String, KB::Word> {} *x_7_1_8; struct Bucket<KB::String, KB::Word> {} *x_7_1_9; } x7; boolx8; boolx9; boolx10; boolx11; boolx12; boolx13; struct __CFString {} *x14; struct __CFLocale {} *x15; struct RefPtr<KB::DictionaryContainer> { struct DictionaryContainer {} *x_16_1_1; } x16; boolx17; boolx18; struct StrokeBuildManager {} *x19; struct String { unsigned short x_20_1_1; unsigned short x_20_1_2; unsigned short x_20_1_3; unsigned short x_20_1_4; unsigned char x_20_1_5; char *x_20_1_6; BOOL x_20_1_7[16]; } x20; struct Hashmap<KB::String, KB::FPoint> { unsigned int x_21_1_1; unsigned int x_21_1_2; unsigned int x_21_1_3; unsigned int x_21_1_4; unsigned int x_21_1_5; boolx_21_1_6; struct HashTraits<KB::String> { } x_21_1_7; struct Bucket<KB::String, KB::FPoint> {} *x_21_1_8; struct Bucket<KB::String, KB::FPoint> {} *x_21_1_9; } x21; boolx22; boolx23; boolx24; struct Vector<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> { unsigned int x_25_1_1; struct VectorBuffer<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> { struct RefPtr<TI::Favonius::LayoutKey> {} *x_2_2_1; unsigned int x_2_2_2; } x_25_1_2; } x25; struct RefPtr<TI::Favonius::KeyboardLayout> { struct KeyboardLayout {} *x_26_1_1; } x26; struct String { unsigned short x_27_1_1; unsigned short x_27_1_2; unsigned short x_27_1_3; unsigned short x_27_1_4; unsigned char x_27_1_5; char *x_27_1_6; BOOL x_27_1_7[16]; } x27; struct vector<KB::String, std::allocator<KB::String> > { struct _Vector_impl { struct String {} *x_1_2_1; struct String {} *x_1_2_2; struct String {} *x_1_2_3; } x_28_1_1; } x28; struct RefPtr<TI::Favonius::Logger> { struct Logger {} *x_29_1_1; } x29; } *m_impl;
    TIWordTokenizer *m_wordTokenizer;
}

@property int autocapitalizationType;
@property(retain) CPLRUDictionary * autocorrectionHistory;
@property(readonly) TIKeyboardInputManagerConfig * config;
@property(readonly) NSMutableArray * inputHistory;
@property(retain) UIKeyboardCandidate * revisitedCandidate;

- (struct TIInputManagerZephyr { int (**x1)(); struct vector<KB::Input, std::allocator<KB::Input> > { struct _Vector_impl { struct Input {} *x_1_2_1; struct Input {} *x_1_2_2; struct Input {} *x_1_2_3; } x_2_1_1; } x2; struct String { unsigned short x_3_1_1; unsigned short x_3_1_2; unsigned short x_3_1_3; unsigned short x_3_1_4; unsigned char x_3_1_5; char *x_3_1_6; BOOL x_3_1_7[16]; } x3; struct String { unsigned short x_4_1_1; unsigned short x_4_1_2; unsigned short x_4_1_3; unsigned short x_4_1_4; unsigned char x_4_1_5; char *x_4_1_6; BOOL x_4_1_7[16]; } x4; unsigned int x5; unsigned int x6; struct Hashmap<KB::String, KB::Word> { unsigned int x_7_1_1; unsigned int x_7_1_2; unsigned int x_7_1_3; unsigned int x_7_1_4; unsigned int x_7_1_5; boolx_7_1_6; struct HashTraits<KB::String> { } x_7_1_7; struct Bucket<KB::String, KB::Word> {} *x_7_1_8; struct Bucket<KB::String, KB::Word> {} *x_7_1_9; } x7; boolx8; boolx9; boolx10; boolx11; boolx12; boolx13; struct __CFString {} *x14; struct __CFLocale {} *x15; struct RefPtr<KB::DictionaryContainer> { struct DictionaryContainer {} *x_16_1_1; } x16; boolx17; boolx18; struct StrokeBuildManager {} *x19; struct String { unsigned short x_20_1_1; unsigned short x_20_1_2; unsigned short x_20_1_3; unsigned short x_20_1_4; unsigned char x_20_1_5; char *x_20_1_6; BOOL x_20_1_7[16]; } x20; struct Hashmap<KB::String, KB::FPoint> { unsigned int x_21_1_1; unsigned int x_21_1_2; unsigned int x_21_1_3; unsigned int x_21_1_4; unsigned int x_21_1_5; boolx_21_1_6; struct HashTraits<KB::String> { } x_21_1_7; struct Bucket<KB::String, KB::FPoint> {} *x_21_1_8; struct Bucket<KB::String, KB::FPoint> {} *x_21_1_9; } x21; boolx22; boolx23; boolx24; struct Vector<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> { unsigned int x_25_1_1; struct VectorBuffer<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> { struct RefPtr<TI::Favonius::LayoutKey> {} *x_2_2_1; unsigned int x_2_2_2; } x_25_1_2; } x25; struct RefPtr<TI::Favonius::KeyboardLayout> { struct KeyboardLayout {} *x_26_1_1; } x26; struct String { unsigned short x_27_1_1; unsigned short x_27_1_2; unsigned short x_27_1_3; unsigned short x_27_1_4; unsigned char x_27_1_5; char *x_27_1_6; BOOL x_27_1_7[16]; } x27; struct vector<KB::String, std::allocator<KB::String> > { struct _Vector_impl { struct String {} *x_1_2_1; struct String {} *x_1_2_2; struct String {} *x_1_2_3; } x_28_1_1; } x28; struct RefPtr<TI::Favonius::Logger> { struct Logger {} *x_29_1_1; } x29; }*)initImplementation;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)acceptInput;
- (BOOL)acceptsCharacter:(unsigned short)arg1;
- (id)addInput:(id)arg1 flags:(unsigned int)arg2 point:(struct CGPoint { float x1; float x2; })arg3 firstDelete:(unsigned int*)arg4 fromVariantKey:(BOOL)arg5;
- (void)appendToInputContext:(id)arg1;
- (int)autocapitalizationType;
- (id)autocorrection;
- (id)autocorrectionCandidateForInput:(id)arg1 withWord:(const struct Word { struct String { unsigned short x_1_1_1; unsigned short x_1_1_2; unsigned short x_1_1_3; unsigned short x_1_1_4; unsigned char x_1_1_5; char *x_1_1_6; BOOL x_1_1_7[16]; } x1; struct String { unsigned short x_2_1_1; unsigned short x_2_1_2; unsigned short x_2_1_3; unsigned short x_2_1_4; unsigned char x_2_1_5; char *x_2_1_6; BOOL x_2_1_7[16]; } x2; float x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; float x10; unsigned char x11; unsigned int x12; struct RefPtr<KB::LinguisticTagDistribution> { struct LinguisticTagDistribution {} *x_13_1_1; } x13; struct RefPtr<KB::LinguisticTagWeights> { struct LinguisticTagWeights {} *x_14_1_1; } x14; }*)arg2;
- (id)autocorrectionHistory;
- (BOOL)canHandleKeyHitTest;
- (BOOL)canStartSentenceAfterString:(id)arg1;
- (void)candidateRejected:(id)arg1;
- (id)candidates;
- (id)candidatesForString:(id)arg1;
- (struct __CFDictionary { }*)chargedKeyProbabilities;
- (void)checkAutocorrectionDictionaries;
- (void)clearAllCentroids;
- (void)clearDynamicDictionary;
- (void)clearInput;
- (void)clearInputContext;
- (void)clearKeyAreas;
- (id)config;
- (void)configureInputModeSpecificFeatures:(id)arg1 withLayout:(id)arg2;
- (void)dealloc;
- (void)decreaseUserFrequency:(id)arg1 usageFlags:(unsigned int)arg2;
- (id)defaultCandidate;
- (unsigned int)defaultCandidateIndex;
- (id)deleteFromInput:(unsigned int*)arg1;
- (void)deleteFromStrokeHistory;
- (unsigned int)deleteLengthForString:(id)arg1;
- (BOOL)doesComposeText;
- (unsigned int)externalIndexToInternal:(unsigned int)arg1;
- (id)externalStringToInternal:(id)arg1;
- (BOOL)inHardwareKeyboardMode;
- (void)increaseUserFrequency:(id)arg1 usageFlags:(unsigned int)arg2;
- (id)init;
- (id)initWithConfig:(id)arg1;
- (id)inputContext;
- (unsigned int)inputCount;
- (BOOL)inputEmpty;
- (id)inputHistory;
- (unsigned int)inputIndex;
- (void)inputLocationChanged;
- (id)inputString;
- (unsigned int)internalIndexToExternal:(unsigned int)arg1;
- (id)internalStringToExternal:(id)arg1;
- (int)keyHitTest:(struct CGPoint { float x1; float x2; })arg1 touchStage:(int)arg2 atTime:(double)arg3 withTouch:(id)arg4 forceShift:(BOOL)arg5 forcingKey:(int)arg6;
- (void)loadDictionaries;
- (void)loadFavoniusLanguageModel;
- (unsigned int)maximumShortcutLengthAllowed;
- (BOOL)nextInputWouldStartSentence;
- (id)phraseCandidateCompletedByWord:(const struct String { unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned char x5; char *x6; BOOL x7[16]; }*)arg1 allowNoSuggest:(BOOL)arg2;
- (void)registerCentroid:(struct CGPoint { float x1; float x2; })arg1 forKey:(id)arg2;
- (void)registerKeyArea:(struct CGPoint { float x1; float x2; })arg1 withRadii:(struct CGPoint { float x1; float x2; })arg2 forKeyCode:(unsigned short)arg3 forLowerKey:(id)arg4 forUpperKey:(id)arg5;
- (BOOL)removeSuffixOfInputContext:(id)arg1;
- (void)reviseInputHistoryForRetroCorrectionCandidates:(id)arg1 forInputs:(id)arg2;
- (id)revisitedCandidate;
- (id)sentenceDelimitingCharacters;
- (id)sentencePrefixingCharacters;
- (id)sentenceTrailingCharacters;
- (void)setAutoCorrects:(BOOL)arg1;
- (void)setAutocapitalizationType:(int)arg1;
- (void)setAutocorrectionHistory:(id)arg1;
- (void)setAutoshiftFromInputContext;
- (void)setCalculatesChargedKeyProbabilities:(BOOL)arg1;
- (void)setCollatorLocale;
- (void)setInHardwareKeyboardMode:(BOOL)arg1;
- (void)setInput:(id)arg1;
- (void)setInputIndex:(unsigned int)arg1;
- (void)setKeyboardEventsLagging:(BOOL)arg1;
- (void)setLearnsCorrection:(BOOL)arg1;
- (void)setOriginalInput:(id)arg1;
- (void)setRevisitedCandidate:(id)arg1;
- (void)setTypologyRecorder:(id)arg1;
- (id)shadowTyping;
- (id)shortcutConversionForInput:(id)arg1 andExistingString:(id)arg2 existingStringStartsInMiddleOfWord:(BOOL)arg3;
- (id)shortcutConversionForString:(id)arg1 stringStartsInMiddleOfWord:(BOOL)arg2;
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)arg1;
- (BOOL)stringIsExemptFromChecker:(id)arg1;
- (BOOL)supportsShortcutConversion;
- (void)textAccepted:(id)arg1;
- (id)textPrecedingNextInput;
- (void)updateForRevisitedString:(id)arg1;
- (id)updateInputHistoryForAcceptedText:(id)arg1;
- (BOOL)usesCandidateSelection;
- (unsigned int)wordHistoryDepth;

@end
