/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSString;

@interface AXIPCClient : NSObject  {
    struct __CFMachPort { } *_serverPort;
    unsigned int _assignedServerMachPort;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _portDeathHandler;

    float _timeout;
    NSString *_clientIdentifier;
    struct __CFRunLoopSource { } *_clientSource;
    unsigned int serviceMachPort;
    BOOL _connected;
    NSString *_serviceName;
    unsigned int clientCallbackPort;
    struct __CFRunLoopSource { } *clientCallbackSource;
}

@property(getter=isConnected) BOOL connected;
@property(retain) NSString * serviceName;
@property(readonly) unsigned int serviceMachPort;
@property(copy) id portDeathHandler;
@property float timeout;
@property(retain) NSString * clientIdentifier;
@property(readonly) unsigned int clientCallbackPort;
@property(readonly) struct __CFRunLoopSource { }* clientCallbackSource;
@property struct __CFMachPort { }* serverPort;

+ (id)allClients;
+ (void)initialize;

- (void)setConnected:(BOOL)arg1;
- (void)setServerPort:(struct __CFMachPort { }*)arg1;
- (BOOL)disconnectWithError:(id*)arg1;
- (unsigned int)serviceMachPort;
- (id)portDeathHandler;
- (BOOL)_verifyConnectionWithError:(id*)arg1;
- (BOOL)sendSimpleMessage:(id)arg1 withError:(id*)arg2;
- (BOOL)verifyConnectionExists;
- (void)_registerWithServer;
- (BOOL)connectWithError:(id*)arg1;
- (id)sendMessage:(id)arg1 withError:(id*)arg2;
- (void)sendSimpleMessage:(id)arg1;
- (void)setPortDeathHandler:(id)arg1;
- (struct __CFRunLoopSource { }*)clientCallbackSource;
- (id)initWithPort:(unsigned int)arg1;
- (unsigned int)clientCallbackPort;
- (void)setClientIdentifier:(id)arg1;
- (id)clientIdentifier;
- (void)dealloc;
- (id)serviceName;
- (void)setServiceName:(id)arg1;
- (float)timeout;
- (void)setTimeout:(float)arg1;
- (id)initWithServiceName:(id)arg1;
- (BOOL)isConnected;
- (void)_serverDied;
- (struct __CFMachPort { }*)serverPort;

@end
