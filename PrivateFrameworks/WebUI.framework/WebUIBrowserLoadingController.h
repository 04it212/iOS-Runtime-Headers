/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 */

@class NSError, UIWebBrowserView, <WebUIBrowserLoadingControllerDelegate>, NSString, WebDataSource, NSURL, NSArray;

@interface WebUIBrowserLoadingController : NSObject  {
    NSURL *_backURL;
    NSURL *_forwardURL;
    NSArray *_fallbackURLs;
    BOOL _securePageHasInsecureContent;
    NSString *_lastSuccessfulURLString;
    BOOL _loadStartedDuringSimulatedClick;
    BOOL _loadEndedWithError;
    NSError *_errorThatCausedLoadToEnd;
    WebDataSource *_dataSourceWithError;
    unsigned int _pendingFrameLoadMessages;
    NSString *_userTypedAddress;
    <WebUIBrowserLoadingControllerDelegate> *_delegate;
    UIWebBrowserView *_browserView;
    BOOL _canGoBack;
    BOOL _canGoForward;
    BOOL _loading;
    float _estimatedProgress;
    NSString *_title;
    NSString *_URLString;
    NSURL *_URL;
    BOOL _simulatingClick;
}

@property <WebUIBrowserLoadingControllerDelegate> * delegate;
@property(retain) UIWebBrowserView * browserView;
@property(readonly) BOOL canGoBack;
@property(readonly) BOOL canGoForward;
@property(getter=isSecure,readonly) BOOL secure;
@property(getter=isLoading,readonly) BOOL loading;
@property float estimatedProgress;
@property(copy) NSString * title;
@property(readonly) NSString * URLString;
@property(retain) NSURL * URL;
@property(getter=isSimulatingClick,readonly) BOOL simulatingClick;


- (BOOL)isSimulatingClick;
- (void)finishSimulatedClick;
- (void)beginSimulatedClickForURL:(id)arg1;
- (void)loadWebClip:(id)arg1 userDriven:(BOOL)arg2;
- (void)loadRequest:(id)arg1 userDriven:(BOOL)arg2;
- (void)_forceStopLoadingFromDelegateWithError:(id)arg1;
- (void)_forceStartLoading;
- (void)loadStartedDuringSimulatedClickForURL:(id)arg1;
- (void)_setSecurePageHasInsecureContent:(BOOL)arg1;
- (void)_updateAfterHistoryChange;
- (void)_progressChanged:(id)arg1;
- (void)_didNotLoadURL;
- (void)_mightLoadURL:(id)arg1;
- (void)_tryMultipleURLs:(id)arg1 forWebClip:(id)arg2;
- (void)_loadRequest:(id)arg1 userDriven:(BOOL)arg2;
- (void)_setFallbackURLs:(id)arg1;
- (void)_setUserTypedAddress:(id)arg1;
- (void)_setLoading:(BOOL)arg1 withError:(BOOL)arg2 fromFragmentLoad:(BOOL)arg3;
- (void)_updateBackForward;
- (void)_updateURL;
- (id)_getDataSourceURL:(id)arg1;
- (void)_updateURLString;
- (void)_setLoading:(BOOL)arg1 withError:(BOOL)arg2 fromDelegate:(BOOL)arg3;
- (void)_setLoadingFromDelegate:(BOOL)arg1 withError:(id)arg2 dataSource:(id)arg3;
- (void)_setLoading:(BOOL)arg1 withError:(BOOL)arg2 fromDelegate:(BOOL)arg3 fromFragmentLoad:(BOOL)arg4;
- (BOOL)_URLMayStartLoad:(id)arg1;
- (void)_performWebViewLoadSelector:(SEL)arg1 forceProgress:(BOOL)arg2;
- (id)_dataSourceURL;
- (void)_setLoading:(BOOL)arg1 withError:(BOOL)arg2;
- (void)setEstimatedProgress:(float)arg1;
- (void)_setForwardURL:(id)arg1;
- (void)_setBackURL:(id)arg1;
- (id)browserView;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)initWithDelegate:(id)arg1;
- (id)URL;
- (void)dealloc;
- (id)URLString;
- (float)estimatedProgress;
- (void)setBrowserView:(id)arg1;
- (void)loadUserTypedAddress:(id)arg1;
- (void)setURL:(id)arg1;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didReceiveTitle:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (void)goForward;
- (void)goBack;
- (void)stopLoading;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (BOOL)isLoading;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (BOOL)isSecure;
- (id)title;
- (void)reload;
- (void)setTitle:(id)arg1;
- (void)webView:(id)arg1 didPopStateWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didReplaceStateWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didPushStateWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didRunInsecureContent:(id)arg2;
- (void)webViewDidDisplayInsecureContent:(id)arg1;
- (void)webView:(id)arg1 didCancelClientRedirectForFrame:(id)arg2;
- (void)webView:(id)arg1 willPerformClientRedirectToURL:(id)arg2 delay:(double)arg3 fireDate:(id)arg4 forFrame:(id)arg5;

@end
