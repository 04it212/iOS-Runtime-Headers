/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Conference.framework/Conference
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class FTCConnectionHandler, IMServiceImpl, NSArray, NSDictionary, NSMutableDictionary, NSSet, NSString, NSTimer;

@interface CNFRegController : NSObject {
    struct { 
        unsigned int listeningForAccountChanges : 1; 
        unsigned int listeningForCallerIDChanges : 1; 
        unsigned int listeningForAccountActivation : 1; 
        unsigned int preventingIdleSleep : 1; 
        unsigned int expectingWiFiPicker : 1; 
        unsigned int showedWifiFirstRunAlert : 1; 
        unsigned int ignoringAccountChanges : 1; 
        unsigned int activatingAccounts : 1; 
    id _accountActivationChangedBlock;
    id _accountAddedBlock;
    id _accountAuthorizationChangedBlock;
    NSMutableDictionary *_accountFilterCache;
    id _accountRegistrationBlock;
    id _accountRemovedBlock;
    NSArray *_accounts;
    id _alertHandler;
    id _aliasAddedBlock;
    id _aliasRemovedBlock;
    id _aliasStatusChangedBlock;
    NSDictionary *_cachedCallerIDMap;
    FTCConnectionHandler *_connectionHandler;
    } _controllerFlags;
    id _displayNameChangedBlock;
    int _ftcServiceType;
    unsigned int _logIndent;
    NSString *_logName;
    unsigned char _originalCellFlag;
    BOOL _originalUsesBackgroundNetwork;
    unsigned char _originalWifiFlag;
    id _profileChangedBlock;
    id _profileStatusChangedBlock;
    int _requiredWifiCount;
    id _resetBlock;
    id _serviceDidBecomeUnsupportedBlock;
    int _serviceType;
    NSArray *_services;
    NSTimer *_wifiAlertWatchTimer;
}

@property(copy) id accountActivationChangedBlock;
@property(copy) id accountAddedBlock;
@property(copy) id accountAuthorizationChangedBlock;
@property(copy) id accountRegistrationBlock;
@property(copy) id accountRemovedBlock;
@property(copy,readonly) NSArray * accounts;
@property(copy) id alertHandler;
@property(copy) id aliasAddedBlock;
@property(copy) id aliasRemovedBlock;
@property(copy) id aliasStatusChangedBlock;
@property(retain,readonly) NSArray * aliases;
@property(copy,readonly) NSDictionary * cachedCallerIDMap;
@property(copy) id displayNameChangedBlock;
@property(copy,readonly) NSArray * emailAccounts;
@property(retain,readonly) NSArray * emailAliases;
@property(copy,readonly) NSArray * failedAccounts;
@property(retain,readonly) IMServiceImpl * firstService;
@property int ftcServiceType;
@property(copy,readonly) NSArray * phoneAccounts;
@property(copy) id profileChangedBlock;
@property(copy) id profileStatusChangedBlock;
@property(copy) id resetBlock;
@property(copy) id serviceDidBecomeUnsupportedBlock;
@property(getter=isServiceEnabled) BOOL serviceEnabled;
@property(retain,readonly) NSSet * serviceNames;
@property(getter=isServiceSupported,readonly) BOOL serviceSupported;
@property int serviceType;
@property(copy) NSArray * services;

+ (id)controllerForServiceType:(int)arg1;

- (id)__filter_activeAccountsPredicate;
- (id)__filter_emailAccountPredicate;
- (id)__filter_failedAccountsPredicate;
- (id)__filter_inactiveAccountsPredicate;
- (id)__filter_phoneAccountPredicate;
- (id)__filter_registeredAccountPredicate;
- (id)__filter_validatedAliasPredicate;
- (id)__filter_validatedProfilePredicate;
- (id)_accountForAlias:(id)arg1 accounts:(id)arg2;
- (BOOL)_accountHasValidatedLocale:(id)arg1;
- (BOOL)_accountIsAuthenticated:(id)arg1;
- (BOOL)_accountIsRegistered:(id)arg1;
- (id)_accountsPassingTests:(id)arg1 message:(id)arg2;
- (id)_aliasesForAccount:(id)arg1;
- (id)_aliasesPassingTest:(id)arg1;
- (void)_clearAccountCache;
- (void)_clearFilterCache;
- (id)_createAccountWithLogin:(id)arg1;
- (void)_decrementLogIndent;
- (id)_guessedDisplayAliasFromAccounts:(id)arg1;
- (void)_handleCallerIDChanged;
- (void)_handleCallerIDChangedForResume:(id)arg1;
- (void)_incrementLogIndent;
- (BOOL)_isValidCallerIDAlias:(id)arg1 forAccount:(id)arg2;
- (id)_logName;
- (id)_logSpace;
- (void)_nukeCallerIDCache;
- (void)_postCallerIDChanged;
- (id)_predicatesWithFilter:(int)arg1;
- (void)_rebuildAccountCache;
- (void)_showNetworkAlertWithMessage:(id)arg1;
- (void)_startListeningForCallerIDChanges;
- (void)_startWiFiAlertWatchTimer;
- (void)_stopListeningForCallerIDChanges;
- (void)_stopWiFiAlertWatchTimer;
- (void)_wifiAlertWatchTimerFired:(id)arg1;
- (id)accountActivationChangedBlock;
- (void)accountActivationStateChanged:(id)arg1;
- (void)accountAdded:(id)arg1;
- (id)accountAddedBlock;
- (id)accountAuthorizationChangedBlock;
- (void)accountDisplayNameChanged:(id)arg1;
- (id)accountForAlias:(id)arg1;
- (id)accountRegistrationBlock;
- (void)accountRegistrationChanged:(id)arg1;
- (void)accountRemoved:(id)arg1;
- (id)accountRemovedBlock;
- (unsigned int)accountState:(id)arg1;
- (unsigned int)accountState;
- (unsigned int)accountStateForAccount:(id)arg1;
- (id)accountWithLogin:(id)arg1;
- (id)accounts;
- (id)accountsWithFilter:(int)arg1 message:(id)arg2;
- (id)accountsWithFilter:(int)arg1;
- (void)activateAccounts;
- (void)activateAccountsExcludingAccounts:(id)arg1;
- (id)activeAccounts;
- (id)addAlias:(id)arg1 toAccount:(id)arg2;
- (id)addAlias:(id)arg1;
- (id)alertHandler;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (id)aliasAddedBlock;
- (id)aliasNamed:(id)arg1;
- (id)aliasRemovedBlock;
- (void)aliasStatusChanged:(id)arg1;
- (id)aliasStatusChangedBlock;
- (id)aliasSummaryString:(BOOL*)arg1;
- (id)aliases;
- (void)aliasesChanged:(id)arg1;
- (id)aliasesForAccounts:(id)arg1;
- (void)authorizationCredentialsChanged:(id)arg1;
- (id)authorizationIDForAccount:(id)arg1;
- (id)authorizationTokenForAccount:(id)arg1;
- (id)cachedCallerIDMap;
- (void)clearAllCaches;
- (void)connect:(BOOL)arg1;
- (void)connect;
- (id)createAccountWithLogin:(id)arg1 authID:(id)arg2 authToken:(id)arg3;
- (id)createAccountWithLogin:(id)arg1 password:(id)arg2;
- (void)daemonConnected:(id)arg1;
- (void)daemonDisconnected:(id)arg1;
- (void)deactivateAccounts;
- (void)dealloc;
- (BOOL)deviceCanTakeNetworkAction;
- (void)deviceCapabilityChanged:(id)arg1;
- (BOOL)deviceHasNetworkEnabled;
- (BOOL)deviceHasSaneNetworkConnection;
- (id)displayAccount;
- (id)displayAlias;
- (id)displayNameChangedBlock;
- (id)emailAccounts;
- (id)emailAliases;
- (BOOL)ensureSingleAppleIDAccountExistsWithUsername:(id)arg1;
- (id)failedAccounts;
- (id)firstAccount;
- (id)firstService;
- (int)ftcServiceType;
- (id)guessedAccountName;
- (id)guessedAlias;
- (id)guessedDisplayAlias;
- (void)handleAliasAdded:(id)arg1;
- (void)handleAliasRemoved:(id)arg1;
- (BOOL)hasAlias:(id)arg1;
- (BOOL)hasAliasNamed:(id)arg1;
- (BOOL)hasFailedLogin;
- (BOOL)hasFailedLoginDueToBadLogin;
- (id)init;
- (id)initWithServiceType:(int)arg1;
- (BOOL)isConnected;
- (BOOL)isServiceEnabled;
- (BOOL)isServiceSupported;
- (id)loginForAccount:(id)arg1;
- (void)nukeAccount:(id)arg1;
- (void)nukeAllAccounts;
- (void)openURL:(id)arg1;
- (id)phoneAccounts;
- (id)profileBasePhoneNumberForAccount:(id)arg1;
- (void)profileChanged:(id)arg1;
- (id)profileChangedBlock;
- (id)profileRegionIDForAccount:(id)arg1;
- (id)profileStatusChangedBlock;
- (void)profileValidationStateChanged:(id)arg1;
- (int)profileValidationStatusForAccount:(id)arg1;
- (BOOL)refreshAuthorizationCredentialsForAccount:(id)arg1;
- (BOOL)removeAlias:(id)arg1;
- (void)removeAllHandlers;
- (id)resetBlock;
- (void)resetNetworkFirstRunAlert;
- (id)serviceDidBecomeUnsupportedBlock;
- (id)serviceNames;
- (int)serviceType;
- (id)services;
- (void)setAccountActivationChangedBlock:(id)arg1;
- (void)setAccountAddedBlock:(id)arg1;
- (void)setAccountAuthorizationChangedBlock:(id)arg1;
- (void)setAccountRegistrationBlock:(id)arg1;
- (void)setAccountRemovedBlock:(id)arg1;
- (void)setAlertHandler:(id)arg1;
- (void)setAliasAddedBlock:(id)arg1;
- (void)setAliasRemovedBlock:(id)arg1;
- (void)setAliasStatusChangedBlock:(id)arg1;
- (BOOL)setDisplayAlias:(id)arg1;
- (void)setDisplayNameChangedBlock:(id)arg1;
- (void)setFtcServiceType:(int)arg1;
- (void)setProfileChangedBlock:(id)arg1;
- (void)setProfileStatusChangedBlock:(id)arg1;
- (void)setResetBlock:(id)arg1;
- (void)setServiceDidBecomeUnsupportedBlock:(id)arg1;
- (void)setServiceEnabled:(BOOL)arg1;
- (void)setServiceType:(int)arg1;
- (void)setServices:(id)arg1;
- (BOOL)shouldHandleAccountNotification:(id)arg1;
- (void)showNetworkAlert;
- (void)showNetworkAlertIfNecessary;
- (void)showNetworkFirstRunAlert;
- (void)startListeningForAccountChanges;
- (void)startRequiringWifi;
- (void)stopListeningForAccountChanges;
- (void)stopRequiringWifi;
- (id)useableAliases;

@end
