/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Symbolication.framework/Symbolication
 */

@class <VMUMemory>, NSArray, NSDictionary, NSString;

@interface VMUSymbolOwner : NSObject <NSCopying> {
    NSUInteger _compatibilityVersion;
    NSUInteger _currentVersion;
    NSUInteger _flags;
    NSString *_name;
    NSArray *_regions;
    NSDictionary *_signature;
    NSArray *_sourceInfos;
    NSArray *_symbols;
    <VMUMemory> *_textMemory;
}

+ (id)symbolOwnerWithName:(id)arg1 signature:(id)arg2 textMemory:(id)arg3 regions:(id)arg4 symbols:(id)arg5 sourceInfos:(id)arg6 flags:(NSUInteger)arg7 currentVersion:(NSUInteger)arg8 compatibilityVersion:(NSUInteger)arg9;

- (id)architecture;
- (NSUInteger)compatibilityVersion;
- (BOOL)containsAddress:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (NSUInteger)currentVersion;
- (void)dealloc;
- (id)description;
- (NSUInteger)flags;
- (id)initWithName:(id)arg1 signature:(id)arg2 textMemory:(id)arg3 regions:(id)arg4 symbols:(id)arg5 sourceInfos:(id)arg6 flags:(NSUInteger)arg7 currentVersion:(NSUInteger)arg8 compatibilityVersion:(NSUInteger)arg9;
- (BOOL)isAOut;
- (BOOL)isBundle;
- (BOOL)isCommpage;
- (BOOL)isDsym;
- (BOOL)isDyld;
- (BOOL)isDylib;
- (BOOL)isEqualToSymbolOwner:(id)arg1;
- (BOOL)isLazy;
- (BOOL)isMachO;
- (BOOL)isPEF;
- (BOOL)isProtected;
- (id)name;
- (id)path;
- (id)programTextForAddress:(unsigned long long)arg1;
- (id)programTextForAddressRange:(struct _VMURange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)regionForAddress:(unsigned long long)arg1;
- (id)regions;
- (id)regionsForName:(id)arg1;
- (id)signature;
- (unsigned long long)size;
- (void)slideToSegmentAddresses:(id)arg1;
- (id)sourceInfoForAddress:(unsigned long long)arg1;
- (id)sourceInfos;
- (id)sourceInfosInAddressRange:(struct _VMURange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)symbolForAddress:(unsigned long long)arg1;
- (id)symbolForName:(id)arg1;
- (id)symbolOwnerByAddingContentsOfOwner:(id)arg1;
- (id)symbols;
- (id)symbolsForMangledName:(id)arg1;
- (id)symbolsForName:(id)arg1;
- (id)symbolsInAddressRange:(struct _VMURange { unsigned long long x1; unsigned long long x2; })arg1;
- (BOOL)validate;

@end
