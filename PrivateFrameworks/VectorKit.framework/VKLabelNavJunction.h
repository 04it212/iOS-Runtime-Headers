/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class VKLabelNavRoad, NSArray, VKLabelTile, NSMutableArray;

@interface VKLabelNavJunction : NSObject {
    struct { 
        float x; 
        float y; 
    struct { 
        unsigned int index; 
        float offset; 
    struct { 
        double x; 
        double y; 
        double z; 
    unsigned int _depthFromRoute;
    float _distanceFromPreviousShieldLabel;
    BOOL _foundOverpasses;
    BOOL _foundRoads;
    struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; } *_geoJunction;
    VKLabelNavRoad *_incomingRoad;
    BOOL _isOnDualCarriageway;
    BOOL _isOverpass;
    VKLabelNavRoad *_outgoingRoad;
    int _preferredLabelPlacement;
    NSMutableArray *_roads;
    } _routeOffset;
    double _sortValue;
    VKLabelTile *_tile;
    } _tileCoordinate;
    } _worldCoordinate;
}

@property unsigned int depthFromRoute;
@property float distanceFromPreviousShieldLabel;
@property(readonly) const struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; }* geoJunction;
@property(readonly) VKLabelNavRoad * incomingRoad;
@property(readonly) BOOL isAwayFromRoute;
@property(readonly) BOOL isIntersection;
@property(readonly) BOOL isMultiRoadIntersection;
@property(readonly) BOOL isOffRouteGraph;
@property BOOL isOnDualCarriageway;
@property(readonly) BOOL isOverpass;
@property(readonly) BOOL isRoadTerminus;
@property(readonly) BOOL isTileEdgeJunction;
@property(readonly) VKLabelNavRoad * outgoingRoad;
@property int preferredLabelPlacement;
@property(readonly) int requiredLabelPlacement;
@property(readonly) NSArray * roads;
@property struct { unsigned int x1; float x2; } routeOffset;
@property(readonly) VKLabelTile * tile;
@property(readonly) struct { float x1; float x2; } tileCoordinate;

- (id).cxx_construct;
- (void)addRouteEdge:(id)arg1 atA:(BOOL)arg2;
- (void)dealloc;
- (unsigned int)depthFromRoute;
- (id)description;
- (float)distanceFromPreviousShieldLabel;
- (void)evaluateCrossStreets;
- (void)findOverpasses;
- (void)findRoads;
- (const struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; }*)geoJunction;
- (id)incomingRoad;
- (id)initWithGEOJunction:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; }*)arg1 routeOffset:(struct { unsigned int x1; float x2; })arg2 tile:(id)arg3;
- (id)initWithRoadEdge:(const struct { struct { /* ? */ } *x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; struct { /* ? */ } *x6; struct { /* ? */ } *x7; }*)arg1 atA:(BOOL)arg2 routeOffset:(struct { unsigned int x1; float x2; })arg3 tile:(id)arg4;
- (BOOL)isAwayFromRoute;
- (BOOL)isIntersection;
- (BOOL)isMultiRoadIntersection;
- (BOOL)isOffRouteGraph;
- (BOOL)isOnDualCarriageway;
- (BOOL)isOverpass;
- (BOOL)isRoadTerminus;
- (BOOL)isTileEdgeJunction;
- (BOOL)matchesLocationForJunction:(id)arg1;
- (id)outgoingRoad;
- (int)preferredLabelPlacement;
- (int)requiredLabelPlacement;
- (id)roads;
- (struct { unsigned int x1; float x2; })routeOffset;
- (void)setDepthFromRoute:(unsigned int)arg1;
- (void)setDistanceFromPreviousShieldLabel:(float)arg1;
- (void)setIsOnDualCarriageway:(BOOL)arg1;
- (void)setPreferredLabelPlacement:(int)arg1;
- (void)setRouteOffset:(struct { unsigned int x1; float x2; })arg1;
- (id)tile;
- (struct { float x1; float x2; })tileCoordinate;

@end
