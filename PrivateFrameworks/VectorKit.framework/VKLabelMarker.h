/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class UIView, NSString, <VKLabelMarkerDelegate>, UICalloutView, NSMutableArray, NSArray;

@interface VKLabelMarker : NSObject <VKCalloutSource> {
    struct _GEOTileKey { 
        unsigned int z : 6; 
        unsigned int x : 26; 
        unsigned int y : 26; 
        unsigned int type : 6; 
        unsigned int pixelSize : 8; 
        unsigned int textScale : 8; 
        unsigned int provider : 8; 
        unsigned int expires : 1; 
        unsigned int reserved1 : 7; 
        unsigned char reserved2[4]; 
    struct shared_ptr<vk::Label> { 
        struct Label {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    struct { 
        double latitude; 
        double longitude; 
    struct { 
        double x0; 
        double x1; 
        double y0; 
        double y1; 
    } _bounds;
    unsigned long long _businessID;
    UICalloutView *_calloutView;
    float _contentScale;
    } _coordinate;
    <VKLabelMarkerDelegate> *_delegate;
    NSMutableArray *_featureHandles;
    BOOL _hasBusinessID;
    } _label;
    UIView *_leftCalloutAccessoryView;
    NSString *_manifestIdentifier;
    UIView *_rightCalloutAccessoryView;
    } _tileKey;
    NSString *_title;
}

@property(readonly) struct { double x1; double x2; double x3; double x4; } bounds;
@property(readonly) unsigned long long businessID;
@property(retain) UICalloutView * calloutView;
@property(readonly) struct { double x1; double x2; } coordinate;
@property <VKLabelMarkerDelegate> * delegate;
@property(readonly) NSArray * featureHandles;
@property(readonly) BOOL hasBusinessID;
@property(readonly) struct shared_ptr<vk::Label> { struct Label {} *x1; struct __shared_weak_count {} *x2; } label;
@property(retain) UIView * leftCalloutAccessoryView;
@property(readonly) NSString * manifestIdentifier;
@property(retain) UIView * rightCalloutAccessoryView;
@property(readonly) NSString * title;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct { double x1; double x2; double x3; double x4; })bounds;
- (unsigned long long)businessID;
- (struct CGPoint { float x1; float x2; })calloutAnchorPointWithCanvasSize:(struct CGSize { float x1; float x2; })arg1;
- (id)calloutView;
- (struct { double x1; double x2; })coordinate;
- (void)dealloc;
- (id)debugAnchorPointString;
- (id)delegate;
- (id)featureHandles;
- (BOOL)hasBusinessID;
- (id)initWithFeature:(struct LabelFeature { int (**x1)(); struct vector<std::__1::shared_ptr<vk::Label>, vk_allocator<std::__1::shared_ptr<vk::Label>> > { struct shared_ptr<vk::Label> {} *x_2_1_1; struct shared_ptr<vk::Label> {} *x_2_1_2; struct __compressed_pair<std::__1::shared_ptr<vk::Label> *, vk_allocator<std::__1::shared_ptr<vk::Label>> > { struct shared_ptr<vk::Label> {} *x_3_2_1; } x_2_1_3; } x2; unsigned long long x3; unsigned long long x4; float x5; unsigned int x6; id x7; id x8; int x9; id x10; struct shared_ptr<const vk::LabelFeatureText> { struct LabelFeatureText {} *x_11_1_1; struct __shared_weak_count {} *x_11_1_2; } x11; struct LabelFeatureTileData {} *x12; struct mutex { struct _opaque_pthread_mutex_t { long x_1_2_1; BOOL x_1_2_2[40]; } x_13_1_1; } x13; struct LabelFeatureTileData {} *x14; int x15; boolx16; boolx17; boolx18; boolx19; }*)arg1 label:(const struct shared_ptr<vk::Label> { struct Label {} *x1; struct __shared_weak_count {} *x2; }*)arg2 contentScale:(float)arg3;
- (BOOL)isOneWayArrow;
- (BOOL)isPOI;
- (struct shared_ptr<vk::Label> { struct Label {} *x1; struct __shared_weak_count {} *x2; })label;
- (id)leftCalloutAccessoryView;
- (id)manifestIdentifier;
- (id)rightCalloutAccessoryView;
- (struct CGPoint { float x1; float x2; })screenPointToScrollRelativeToWithCanvasSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setCalloutView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLeftCalloutAccessoryView:(id)arg1;
- (void)setRightCalloutAccessoryView:(id)arg1;
- (id)title;

@end
