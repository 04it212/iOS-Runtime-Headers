/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKLineDrawStyle : NSObject <_VKStyle> {
    struct vector<LineDash, vk_allocator<LineDash> > { 
        struct LineDash {} *__begin_; 
        struct LineDash {} *__end_; 
        struct __compressed_pair<LineDash *, vk_allocator<LineDash> > { 
            struct LineDash {} *__first_; 
        } __end_cap_; 
    } fillDashes;
    struct vector<LineStipple, vk_allocator<LineStipple> > { 
        struct LineStipple {} *__begin_; 
        struct LineStipple {} *__end_; 
        struct __compressed_pair<LineStipple *, vk_allocator<LineStipple> > { 
            struct LineStipple {} *__first_; 
        } __end_cap_; 
    } stipples;
    struct vector<LineDash, vk_allocator<LineDash> > { 
        struct LineDash {} *__begin_; 
        struct LineDash {} *__end_; 
        struct __compressed_pair<LineDash *, vk_allocator<LineDash> > { 
            struct LineDash {} *__first_; 
        } __end_cap_; 
    } strokeDashes;
    BOOL hasDashAtAnyZ;
    struct VKProfileSparseRamp<float> { 
        union { 
            struct VKProfileSparseRampValue { 
                float value; 
                unsigned char hi; 
            } v[2]; 
            float *extra; 
        } u; 
        unsigned char count; 
    } insetShadowHeight;
    struct VKProfileSparseRamp<float> { 
        union { 
            struct VKProfileSparseRampValue { 
                float value; 
                unsigned char hi; 
            } v[2]; 
            float *extra; 
        } u; 
        unsigned char count; 
    } insetShadowAngle;
    struct VKProfileSparseRamp<_VGLColor> { 
        union { 
            struct VKProfileSparseRampValue { 
                struct _VGLColor { 
                    float r; 
                    float g; 
                    float b; 
                    float a; 
                } value; 
                unsigned char hi; 
            } v[2]; 
            struct _VGLColor {} *extra; 
        } u; 
        unsigned char count; 
    } insetShadowColor;
    struct VKProfileSparseRamp<GEOVectorTilePoint> { 
        union { 
            struct VKProfileSparseRampValue { 
                struct { 
                    float x; 
                    float y; 
                } value; 
                unsigned char hi; 
            } v[2]; 
            struct { /* ? */ } *extra; 
        } u; 
        unsigned char count; 
    } dropShadowOffset;
    struct VKProfileSparseRamp<float> { 
        union { 
            struct VKProfileSparseRampValue { 
                float value; 
                unsigned char hi; 
            } v[2]; 
            float *extra; 
        } u; 
        unsigned char count; 
    } dropShadowWidth;
    struct VKProfileSparseRamp<_VGLColor> { 
        union { 
            struct VKProfileSparseRampValue { 
                struct _VGLColor { 
                    float r; 
                    float g; 
                    float b; 
                    float a; 
                } value; 
                unsigned char hi; 
            } v[2]; 
            struct _VGLColor {} *extra; 
        } u; 
        unsigned char count; 
    } dropShadowColor;
}


- (struct _VGLColor { float x1; float x2; float x3; float x4; })dropShadowColorAtZoom:(float)arg1;
- (struct { float x1; float x2; })dropShadowOffsetAtZoom:(float)arg1;
- (float)dropShadowWidthAtZoom:(float)arg1;
- (BOOL)hasDropShadowAtZoom:(float)arg1;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })insetShadowColorAtZoom:(float)arg1;
- (float)insetShadowAngleAtZoom:(float)arg1;
- (float)insetShadowHeightAtZoom:(float)arg1;
- (BOOL)hasStrokeDashAtZoom:(int)arg1;
- (BOOL)hasFillDashAtZoom:(int)arg1;
- (void)strokeDashPattern:(float**)arg1 length:(unsigned int*)arg2 atZoom:(float)arg3;
- (void)stippleArray:(float**)arg1 length:(unsigned int*)arg2 atZoom:(float)arg3;
- (void)fillDashPattern:(float**)arg1 length:(unsigned int*)arg2 atZoom:(float)arg3;
- (BOOL)hasDashAtAnyZ;
- (void)takeFromZoomInvariantProperties:(id)arg1;
- (void)takeFromStyleProperties:(id)arg1 atZoom:(unsigned int)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;

@end
