/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class VGLContext, VGLTexture;

@interface VGLTextureCanvas : NSObject <VGLCanvas> {
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    struct _VGLColor { 
        float r; 
        float g; 
        float b; 
        float a; 
    float _contentScale;
    unsigned int _depthbuffer;
    unsigned int _framebuffer;
    } _glClearColor;
    } _size;
    } _sizeInPixels;
    VGLContext *_targetContext;
    VGLTexture *_targetTexture;
}

@property(readonly) float contentScale;
@property struct _VGLColor { float x1; float x2; float x3; float x4; } glClearColor;
@property(readonly) struct CGSize { float x1; float x2; } size;
@property(readonly) struct CGSize { float x1; float x2; } sizeInPixels;
@property(retain) VGLTexture * targetTexture;
@property(readonly) VGLContext * vglContext;

+ (Class)contextClass;

- (float)contentScale;
- (void)dealloc;
- (id)description;
- (void)didDrawView;
- (struct _VGLColor { float x1; float x2; float x3; float x4; })glClearColor;
- (id)initWithSize:(struct CGSize { float x1; float x2; })arg1 scale:(float)arg2;
- (void)setGlClearColor:(struct _VGLColor { float x1; float x2; float x3; float x4; })arg1;
- (void)setRasterizedContext:(id)arg1;
- (void)setTargetTexture:(id)arg1;
- (struct CGSize { float x1; float x2; })size;
- (struct CGSize { float x1; float x2; })sizeInPixels;
- (id)targetTexture;
- (id)vglContext;
- (void)willDrawView;

@end
