/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
 */

@class AVConferenceXPCClient, CALayer, NSDictionary, NSObject<AVConferenceDelegate>, NSTimer;

@interface AVConference : NSObject {
    AVConferenceXPCClient *connection;
    NSObject<AVConferenceDelegate> *delegate;
    int mostRecentCallID;
    CALayer *networkQualityGraphLayer_;
    NSTimer *networkQualityUpdateTimer_;
    id opaqueConf;
    CALayer *remoteLayerBack;
    CALayer *remoteLayerFront;
    CALayer *remoteSubLayerBack;
    CALayer *remoteSubLayerFront;
    BOOL runningInServer;
    NSDictionary *serverBag;
    BOOL shouldDisplayNetworkQualityGraph_;
    BOOL shouldDisplayVideoInfoLayer;
    BOOL shouldDisplayVideoInfoLayer_;
    BOOL useServer;
    id weakAVConference;
}

@property NSObject<AVConferenceDelegate> * delegate;
@property(getter=isSpeakerPhoneEnabled) BOOL enableSpeakerPhone;
@property(readonly) float inputMeterLevel;
@property(getter=isInputMeteringEnabled) BOOL inputMeteringEnabled;
@property(readonly) double localBitrate;
@property(readonly) int localFrameHeight;
@property(readonly) int localFrameWidth;
@property(readonly) double localFramerate;
@property(readonly) double localPacketLossRate;
@property(getter=isMicrophoneMuted) BOOL microphoneMuted;
@property(readonly) int mostRecentCallID;
@property(readonly) unsigned int natType;
@property(retain) CALayer * networkQualityGraphLayer;
@property(retain) NSTimer * networkQualityUpdateTimer;
@property(readonly) float outputMeterLevel;
@property(getter=isOutputMeteringEnabled) BOOL outputMeteringEnabled;
@property(readonly) double remoteBitrate;
@property(readonly) int remoteFrameHeight;
@property(readonly) int remoteFrameWidth;
@property(readonly) double remoteFramerate;
@property(readonly) double remotePacketLossRate;
@property BOOL requiresWifi;
@property(readonly) double roundTripTime;
@property BOOL shouldDisplayNetworkQualityGraph;
@property BOOL shouldDisplayVideoInfoLayer;
@property(getter=isUsingViceroyBlobFormat) BOOL useViceroyBlobFormat;

+ (short)addressPointerFromBlob:(id)arg1;
+ (unsigned int)doBlockingConnectionCheck:(BOOL)arg1;
+ (unsigned int)doBlockingConnectionCheck;
+ (id)externalAddressForSelfConnectionBlob:(id)arg1;
+ (void)refreshLoggingParameters;
+ (void)startAudioSession;
+ (void)stopAudioSession;

- (void)addGKSCallEvent:(id)arg1 sessionID:(id)arg2;
- (id)connectionBlobForParticipantID:(id)arg1 callID:(int*)arg2 error:(id*)arg3;
- (id)convertBlobtoNewBlob:(id)arg1;
- (id)convertBlobtoOldBlob:(id)arg1;
- (id)currentAudioInputDevice;
- (void)dealloc;
- (id)delegate;
- (void)deregisterBlocksForVCNotifications;
- (unsigned int)doBlockingConnectionCheck;
- (BOOL)getIsAudioPaused:(BOOL*)arg1 callID:(int)arg2 error:(id*)arg3;
- (BOOL)getIsVideoPaused:(BOOL*)arg1 callID:(int)arg2 error:(id*)arg3;
- (void)handleGKSConnectivitySettingsUpdate:(id)arg1;
- (id)init;
- (float)inputMeterLevel;
- (BOOL)isInputMeteringEnabled;
- (BOOL)isMicrophoneMuted;
- (BOOL)isOutputMeteringEnabled;
- (BOOL)isSpeakerPhoneEnabled;
- (BOOL)isUsingViceroyBlobFormat;
- (void)listenForNotifications;
- (double)localBitrate;
- (int)localFrameHeight;
- (int)localFrameWidth;
- (double)localFramerate;
- (double)localPacketLossRate;
- (id)localScreenAttributesForVideoAttributes:(id)arg1;
- (int)mostRecentCallID;
- (unsigned int)natType;
- (float)networkQuality;
- (double)networkQualityForCallID:(int)arg1;
- (id)networkQualityGraphLayer;
- (id)networkQualityUpdateTimer;
- (float)outputMeterLevel;
- (void)processCancelRelayRequest:(int)arg1 cancelDict:(id)arg2 didOriginateRequest:(BOOL)arg3;
- (void)processRelayRequestResponse:(int)arg1 responseDict:(id)arg2 didOriginateRequest:(BOOL)arg3;
- (void)processRelayUpdate:(int)arg1 updateDict:(id)arg2 didOriginateRequest:(BOOL)arg3;
- (void)receivedRealTimeData:(id)arg1 fromParticipantID:(id)arg2;
- (void)registerBlocksForVCNotifications;
- (double)remoteBitrate;
- (void)remoteCancelledCallID:(int)arg1;
- (int)remoteFrameHeight;
- (int)remoteFrameWidth;
- (double)remoteFramerate;
- (double)remotePacketLossRate;
- (void*)remoteVideoBackLayer;
- (void*)remoteVideoLayer;
- (BOOL)requiresWifi;
- (double)roundTripTime;
- (void)sendProtobuf:(id)arg1 withType:(int)arg2 forCallID:(int)arg3;
- (void)serverDied;
- (void)serverReconnected;
- (BOOL)setActive:(BOOL)arg1;
- (BOOL)setAudioInputDevice:(id)arg1;
- (void)setCallReport:(int)arg1 withReport:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setEnableSpeakerPhone:(BOOL)arg1;
- (void)setInputMeteringEnabled:(BOOL)arg1;
- (void)setLocalScreenAttributes:(id)arg1;
- (void)setMicrophoneMuted:(BOOL)arg1;
- (void)setNetworkQualityGraphLayer:(id)arg1;
- (void)setNetworkQualityUpdateTimer:(id)arg1;
- (void)setOutputMeteringEnabled:(BOOL)arg1;
- (BOOL)setPauseAudio:(BOOL)arg1 callID:(int)arg2 error:(id*)arg3;
- (BOOL)setPauseVideo:(BOOL)arg1 callID:(int)arg2 error:(id*)arg3;
- (void)setPeerCN:(id)arg1 callID:(int)arg2;
- (void)setRemoteVideoBackLayer:(void*)arg1;
- (void)setRemoteVideoLayer:(void*)arg1;
- (void)setRemoteVideoLayerContentsRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 camera:(int)arg2;
- (void)setRequiresWifi:(BOOL)arg1;
- (BOOL)setServerInfo:(id)arg1;
- (void)setSessionID:(id)arg1 callID:(int)arg2;
- (void)setSetSessionID:(id)arg1 forCallID:(int)arg2;
- (void)setShouldDisplayNetworkQualityGraph:(BOOL)arg1;
- (void)setShouldDisplayVideoInfoLayer:(BOOL)arg1;
- (void)setUseViceroyBlobFormat:(BOOL)arg1;
- (BOOL)shouldDisplayNetworkQualityGraph;
- (BOOL)shouldDisplayVideoInfoLayer;
- (BOOL)startConnectionWithParticipantID:(id)arg1 callID:(int)arg2 connectionID:(id)arg3 usingBlob:(id)arg4 isCaller:(BOOL)arg5 capabilities:(id)arg6 error:(id*)arg7;
- (BOOL)startConnectionWithParticipantID:(id)arg1 callID:(int)arg2 usingBlob:(id)arg3 isCaller:(BOOL)arg4 capabilities:(id)arg5 error:(id*)arg6;
- (void)startNetworkQualityUpdateTimer;
- (id)statsForCallID:(int)arg1;
- (void)stopCallID:(int)arg1;
- (void)stopListeningForNotifications;
- (void)stopNetworkQualityUpdateTimer;
- (void)updateGKSConnectivitySettings;
- (BOOL)updateNetworkQualityGraph;
- (void)videoConference:(id)arg1 cancelRelayRequest:(int)arg2 requestDict:(id)arg3;
- (void)videoConference:(id)arg1 didReceiveFirstRemoteFrameForCallID:(int)arg2;
- (void)videoConference:(id)arg1 didRemoteScreenAttributesChange:(id)arg2 forCallID:(int)arg3;
- (void)videoConference:(id)arg1 didRemoteVideoAttributesChange:(id)arg2 forCallID:(int)arg3;
- (void)videoConference:(id)arg1 didStartSession:(BOOL)arg2 withCallID:(int)arg3 error:(id)arg4;
- (void)videoConference:(id)arg1 didStartSession:(BOOL)arg2 withCallID:(int)arg3 withUserInfo:(id)arg4 error:(id)arg5;
- (void)videoConference:(id)arg1 didStopWithCallID:(int)arg2 error:(id)arg3 callMetadata:(id)arg4;
- (void)videoConference:(id)arg1 didStopWithCallID:(int)arg2 error:(id)arg3;
- (void)videoConference:(id)arg1 inititiateRelayRequest:(int)arg2 requestDict:(id)arg3;
- (void)videoConference:(id)arg1 receivedNoRemotePacketsForTime:(double)arg2 callID:(int)arg3;
- (void)videoConference:(id)arg1 remoteAudioPaused:(BOOL)arg2 callID:(int)arg3;
- (void)videoConference:(id)arg1 remoteMediaStalled:(BOOL)arg2 callID:(int)arg3;
- (void)videoConference:(id)arg1 remoteVideoPaused:(BOOL)arg2 callID:(int)arg3;
- (void)videoConference:(id)arg1 sendRelayUpdate:(int)arg2 updateDict:(id)arg3;
- (void)videoConference:(id)arg1 updateInputMeterLevel:(float)arg2;
- (void)videoConference:(id)arg1 updateOutputMeterLevel:(float)arg2;
- (void)videoConference:(id)arg1 videoQualityNotificationForCallID:(int)arg2 isDegraded:(BOOL)arg3 isRemote:(BOOL)arg4;
- (void)videoConference:(id)arg1 withCallID:(int)arg2 networkHint:(BOOL)arg3;
- (void)warmupForCall;

@end
