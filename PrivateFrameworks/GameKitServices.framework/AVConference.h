/* Generated by RuntimeBrowser on iPhone OS 4.0
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices
 */

@class NSObject<AVConferenceNotificationObserver>, NSTimer, NSObject<AVConferenceDelegate>, CALayer, NSMutableDictionary;



@interface AVConference : NSObject 
{
    id opaqueConf;
    BOOL useServer;
    BOOL runningInServer;
    void *serverConnection;
    NSObject<AVConferenceDelegate> *delegate;
    NSObject<AVConferenceNotificationObserver> *genericObserver;
    struct dispatch_queue_s { } *notificationQueue;
    NSMutableDictionary *notificationDictionary;
    BOOL testIsRunning;
    BOOL shouldDisplayNetworkQualityGraph_;
    CALayer *networkQualityGraphLayer_;
    NSTimer *networkQualityUpdateTimer_;
}

@property(getter=isUsingViceroyBlobFormat) BOOL useViceroyBlobFormat;
@property(getter=isMicrophoneMuted) BOOL microphoneMuted;
@property(getter=isOutputMeteringEnabled) BOOL outputMeteringEnabled;
@property(getter=isInputMeteringEnabled) BOOL inputMeteringEnabled;
@property(readonly) float outputMeterLevel;
@property(readonly) float inputMeterLevel;
@property BOOL requiresWifi;
@property void *localVideoLayer;
@property void *localVideoBackLayer;
@property void *remoteVideoLayer;
@property void *remoteVideoBackLayer;
@property(getter=getLocalFramerate,readonly) double localFramerate;
@property(getter=getLocalBitrate,readonly) double localBitrate;
@property(getter=getRemoteFramerate,readonly) double remoteFramerate;
@property(getter=getRemoteBitrate,readonly) double remoteBitrate;
@property(getter=isSpeakerPhoneEnabled) BOOL enableSpeakerPhone;
@property NSUInteger cameraType;
@property NSUInteger orientation;
@property(readonly) BOOL natType;
@property(retain) NSTimer *networkQualityUpdateTimer;
@property(retain) CALayer *networkQualityGraphLayer;
@property BOOL shouldDisplayNetworkQualityGraph;
@property NSObject<AVConferenceNotificationObserver> *genericObserver;
@property NSObject<AVConferenceDelegate> *delegate;

+ (short)addressPointerFromBlob:(id)arg1;
+ (id)externalAddressForSelfConnectionBlob:(id)arg1;

- (void)stopPreview;
- (void)setOrientation:(NSUInteger)arg1;
- (BOOL)setActive:(BOOL)arg1;
- (id)init;
- (NSUInteger)orientation;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setCameraType:(NSUInteger)arg1;
- (NSUInteger)cameraType;
- (BOOL)isUsingViceroyBlobFormat;
- (void)remoteCancelledCallID:(NSInteger)arg1;
- (NSInteger)getLocalVideoSlot:(BOOL)arg1;
- (BOOL)setPauseAudio:(BOOL)arg1 callID:(NSInteger)arg2 error:(id*)arg3;
- (void)stopCallID:(NSInteger)arg1;
- (void)setOutputMeteringEnabled:(BOOL)arg1;
- (void)setInputMeteringEnabled:(BOOL)arg1;
- (double)getLocalFramerate;
- (double)getLocalBitrate;
- (float)outputMeterLevel;
- (float)inputMeterLevel;
- (void*)remoteVideoBackLayer;
- (void)listenForNotifications;
- (void)stopListeningForNotifications;
- (void)updateGKSConnectivitySettings;
- (void)handleGKSConnectivitySettingsUpdate:(id)arg1;
- (void)warmupForCall;
- (void)testIsPausedProc:(id)arg1;
- (void)setSetSessionID:(id)arg1 forCallID:(NSInteger)arg2;
- (void)addGKSCallEvent:(id)arg1 sessionID:(id)arg2;
- (id)connectionBlobForParticipantID:(id)arg1 callID:(NSInteger*)arg2 error:(id*)arg3;
- (void)setRequiresWifi:(BOOL)arg1;
- (BOOL)startConnectionWithParticipantID:(id)arg1 callID:(NSInteger)arg2 connectionID:(id)arg3 usingBlob:(id)arg4 isCaller:(BOOL)arg5 capabilities:(id)arg6 error:(id*)arg7;
- (BOOL)getIsAudioPaused:(BOOL*)arg1 callID:(NSInteger)arg2 error:(id*)arg3;
- (void*)remoteVideoLayer;
- (BOOL)updateNetworkQualityGraph;
- (void)startNetworkQualityUpdateTimer;
- (void)stopNetworkQualityUpdateTimer;
- (NSInteger)getRemoteVideoSlot:(BOOL)arg1;
- (BOOL)startPreviewWithError:(id*)arg1;
- (void)applyServerInfo:(id)arg1;
- (BOOL)setServerInfo:(id)arg1;
- (void)videoConference:(id)arg1 didStartSession:(BOOL)arg2 withCallID:(NSInteger)arg3 error:(id)arg4;
- (void)videoConference:(id)arg1 updateInputMeterLevel:(float)arg2;
- (id)localDisplayNameForCallID:(NSInteger)arg1;
- (void)processCancelRelayRequest:(NSInteger)arg1 cancelDict:(id)arg2 didOriginateRequest:(BOOL)arg3;
- (id)networkQualityUpdateTimer;
- (void)setNetworkQualityUpdateTimer:(id)arg1;
- (id)networkQualityGraphLayer;
- (void)setNetworkQualityGraphLayer:(id)arg1;
- (void)setShouldDisplayNetworkQualityGraph:(BOOL)arg1;
- (void)setGenericObserver:(id)arg1;
- (void)processServerSideApplicationQuery:(id)arg1 responseDict:(id*)arg2;
- (void)processApplicationQuery:(id)arg1 responseDict:(id*)arg2;
- (void)addTransaction:(id)arg1 outputDictionary:(id*)arg2;
- (BOOL)shouldDisplayNetworkQualityGraph;
- (BOOL)requiresWifi;
- (void)videoConference:(id)arg1 didStopWithCallID:(NSInteger)arg2 error:(id)arg3;
- (void)setLocalVideoLayer:(void*)arg1;
- (void*)localVideoLayer;
- (double)getRemoteFramerate;
- (double)getRemoteBitrate;
- (BOOL)natType;
- (float)networkQuality;
- (void)videoConference:(id)arg1 updateOutputMeterLevel:(float)arg2;
- (void)videoConference:(id)arg1 notificationEvent:(id)arg2;
- (void*)localVideoBackLayer;
- (double)networkQualityForCallID:(NSInteger)arg1;
- (BOOL)isOutputMeteringEnabled;
- (BOOL)isInputMeteringEnabled;
- (BOOL)getIsVideoPaused:(BOOL*)arg1 callID:(NSInteger)arg2 error:(id*)arg3;
- (BOOL)setPauseVideo:(BOOL)arg1 callID:(NSInteger)arg2 error:(id*)arg3;
- (void)setPeerCN:(id)arg1 callID:(NSInteger)arg2;
- (BOOL)startConnectionWithParticipantID:(id)arg1 callID:(NSInteger)arg2 usingBlob:(id)arg3 isCaller:(BOOL)arg4 capabilities:(id)arg5 error:(id*)arg6;
- (BOOL)isMicrophoneMuted;
- (void)setMicrophoneMuted:(BOOL)arg1;
- (void)receivedRealTimeData:(id)arg1 fromParticipantID:(id)arg2;
- (void)setRemoteVideoLayer:(void*)arg1;
- (void)setEnableSpeakerPhone:(BOOL)arg1;
- (BOOL)isSpeakerPhoneEnabled;
- (void)processRelayRequestResponse:(NSInteger)arg1 responseDict:(id)arg2 didOriginateRequest:(BOOL)arg3;
- (void)processRelayUpdate:(NSInteger)arg1 updateDict:(id)arg2 didOriginateRequest:(BOOL)arg3;
- (void)setUseViceroyBlobFormat:(BOOL)arg1;
- (void)setRemoteVideoBackLayer:(void*)arg1;
- (void)setLocalVideoBackLayer:(void*)arg1;
- (id)genericObserver;
- (id)remoteDisplayNameForCallID:(NSInteger)arg1;
- (id)initWithFlags:(NSInteger)arg1;

@end
