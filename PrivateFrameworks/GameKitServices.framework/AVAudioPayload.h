/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
 */

@class NSArray;

@interface AVAudioPayload : NSObject {
    unsigned long bitrate;
    unsigned long blockSize;
    unsigned long bundleHeaderBytes;
    BOOL canBundle;
    BOOL canSetBitrate;
    unsigned long encodedBytesPerFrame;
    struct tagHANDLE { int x1; } *encoder;
    BOOL forcingBitrate;
    int format;
    int payload;
    unsigned long sampleRate;
    unsigned long samplesPerFrame;
    BOOL shouldReset;
    NSArray *supportedBitrates;
    BOOL useSBR;
}

@property(readonly) unsigned long bitrate;
@property(readonly) unsigned long blockSize;
@property(readonly) unsigned long bundleHeaderBytes;
@property(readonly) BOOL canBundle;
@property(readonly) unsigned long encodedBytesPerFrame;
@property(readonly) int payload;
@property(readonly) unsigned long sampleRate;
@property(readonly) unsigned long samplesPerFrame;
@property(readonly) NSArray * supportedBitrates;
@property BOOL useSBR;

+ (BOOL)isPayloadSupported:(int)arg1;

- (unsigned long)aacBitrate;
- (unsigned long)bitrate;
- (unsigned long)blockSize;
- (unsigned long)bundleHeaderBytes;
- (BOOL)canBundle;
- (void)cleanupEncoder;
- (BOOL)createEncoderWithInternalFormat:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; }*)arg1;
- (void)createSupportedBitrates;
- (void)createSupportedBitratesForAACELD;
- (void)dealloc;
- (int)encodeAudio:(void*)arg1 numInputBytes:(int)arg2 outputBytes:(void*)arg3 numOutputBytes:(int)arg4;
- (unsigned long)encodedBytesPerFrame;
- (unsigned int)flags;
- (BOOL)getEncodeProperties;
- (BOOL)getMagicCookie:(char *)arg1 withLength:(unsigned int*)arg2;
- (BOOL)getProperties;
- (id)initWithPayload:(int)arg1 blockSize:(unsigned long)arg2;
- (int)payload;
- (float)qualityForBitrate:(unsigned long)arg1;
- (void)resetEncoder;
- (unsigned long)sampleRate;
- (unsigned long)samplesPerFrame;
- (BOOL)setBitrate:(unsigned long)arg1;
- (void)setInternalSampleRate:(unsigned long)arg1;
- (void)setUseSBR:(BOOL)arg1;
- (id)supportedBitrates;
- (BOOL)useSBR;

@end
