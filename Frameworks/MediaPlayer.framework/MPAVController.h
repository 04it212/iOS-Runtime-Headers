/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@class NSTimer, MPQueuePlayer, MPQueueFeeder, MPAVItem, NSNotification, MPAudioDeviceController, MPVideoView, MPAVErrorResolver, MPAVControllerToAggregateDCommunicator, MPAVDestinationBrowser, NSDictionary, NSArray, MPAVPlaylistManager, NSString, NSMutableArray, CALayer;

@interface MPAVController : NSObject <AVAudioSessionDelegateMediaPlayerOnly, MPAVErrorResolverDelegate> {
    MPAVPlaylistManager *_avPlaylistManager;
    double _connectionFailTime;
    BOOL _forceSynchronousQueueFilling;
    unsigned int _valid : 1;
    int _playbackMode;
    MPAudioDeviceController *_audioDeviceController;
    MPQueueFeeder *_feeder;
    MPAVErrorResolver *_itemErrorResolver;
    NSDictionary *_pickedRouteDescription;
    CALayer *_videoLayer;
    unsigned int _videoLayerUsageCount;
    MPVideoView *_videoView;
    unsigned int _tickTimerEnabled;
    struct __CFRunLoopTimer { } *_tickTimer;
    double _tickInterval;
    struct __CFRunLoopTimer { } *_currentItemBookkeepingTimer;
    int _indexChangeDirection;
    unsigned int _itemIndexAtDeath;
    int _lastDisconnectReason;
    double _lastKnownTimeBeforeDeath;
    double _lastPlaybackIndexChangeTime;
    double _lastSetTime;
    double _lastSetTimeChangeTime;
    unsigned int _hasDelayedCurrentTimeToSet : 1;
    unsigned int _forceDelayedCurrentTimeToSet : 1;
    double _delayedCurrentTimeToSet;
    int _delayedCurrentTimeOptions;
    unsigned int _lastSetTimeMarker;
    unsigned int _autoPlayWhenLikelyToKeepUp : 1;
    unsigned int _autoplayDisabledForCurrentItem : 1;
    unsigned int _closedCaptioningEnabled : 1;
    int _eqPreset;
    double _nextFadeOutDuration;
    id _boundaryTimeObserver;
    NSArray *_boundaryTimes;
    unsigned int _boundaryTimeIndexLastPosted;
    float _rateBeforeSeek;
    float _inflightSeekRate;
    unsigned int _scanLevel;
    int _scanDirection;
    int _resetRateAfterSeekingUpdateDisabled;
    unsigned int _seeklessState;
    unsigned int _isSeekingOrScrubbing : 1;
    unsigned int _resetRateAfterSeeking : 1;
    unsigned int _activeRewindHoldingAtStart : 1;
    double _lastSeekableEnd;
    double _whenSawSeekableEnd;
    double _maxSeekableFwd;
    double _seekFwdSlop;
    double _lastSeekableStart;
    double _whenSawSeekableStart;
    double _maxSeekableRev;
    double _seekRevSlop;
    unsigned int _canSeekRev : 1;
    unsigned int _canSeekFwd : 1;
    unsigned int _alwaysPlayWheneverPossible : 1;
    unsigned int _stopAtEnd : 1;
    unsigned int _didReachEnd : 1;
    unsigned int _pausedDuringInterruption : 1;
    unsigned int _useApplicationAudioSession : 1;
    unsigned int _subtitlesEnabled : 1;
    unsigned int _videoFrameDisplayOnResumeDisabled : 1;
    unsigned int _disconnectedVideoLayerOnSuspend : 1;
    unsigned int _playInBackgroundUserDefaultEnabled : 1;
    unsigned int _state;
    unsigned int _displayOverridePlaybackState;
    unsigned int _bufferingState;
    NSNotification *_delayedPlaybackStateNotification;
    NSMutableArray *_queueFeederStateStack;
    int _feederMode;
    MPAVControllerToAggregateDCommunicator *_aggregateDCommunicator;
    double _itemInitialBookmarkTime;
    float _rateBeforeResignActive;
    int _ubiquitousBookkeepingDisabledCount;
    double _secondsSinceUbiquitousCheckpoint;
    NSTimer *_externalProtectionTimer;
    BOOL _logContentProtection;
    BOOL _shouldEnforceHDCP;
    MPAVDestinationBrowser *_destinationBrowser;
}

@property(readonly) MPQueueFeeder * feeder;
@property BOOL autoPlayWhenLikelyToKeepUp;
@property BOOL closedCaptioningEnabled;
@property double nextFadeOutDuration;
@property unsigned int repeatType;
@property(getter=isShuffled,readonly) BOOL shuffled;
@property unsigned int shuffleType;
@property(readonly) BOOL hasVolumeControl;
@property float volume;
@property(readonly) BOOL muted;
@property(readonly) NSString * routeNameForVolumeControl;
@property(readonly) unsigned int activeRepeatType;
@property(readonly) unsigned int activeShuffleType;
@property(readonly) MPAVItem * currentItem;
@property double currentTime;
@property(readonly) double currentMonotonousTime;
@property(readonly) double durationOfCurrentItemIfAvailable;
@property(readonly) double playableDurationOfCurrentItemIfAvailable;
@property(readonly) unsigned int numberOfItems;
@property(readonly) unsigned int bufferingState;
@property(getter=isPlaying,readonly) BOOL playing;
@property unsigned int state;
@property(getter=isRewindHoldingAtStart,readonly) BOOL rewindHoldingAtStart;
@property BOOL subtitlesEnabled;
@property(getter=isValid,readonly) BOOL valid;
@property BOOL alwaysPlayWheneverPossible;
@property int feederMode;
@property(getter=isFullScreenVideoMode,readonly) BOOL fullScreenVideoMode;
@property int playbackMode;
@property BOOL stopAtEnd;
@property(readonly) MPAudioDeviceController * audioDeviceController;
@property BOOL useApplicationAudioSession;
@property(readonly) MPAVDestinationBrowser * destinationBrowser;
@property(readonly) BOOL isCurrentItemReady;
@property BOOL ubiquitousBookkeepingEnabled;
@property BOOL allowsAirPlayVideo;
@property(readonly) BOOL isAirPlayVideoActive;
@property BOOL disableAirPlayMirroringDuringPlayback;
@property(readonly) MPQueuePlayer * avPlayer;
@property BOOL shouldEnforceHDCP;
@property int EQPreset;
@property(readonly) MPVideoView * videoView;
@property(readonly) CALayer * videoLayer;
@property(getter=destinationIsTVOut,setter=setDestinationIsTVOut:) BOOL destinationIsTVOut;
@property BOOL videoFrameDisplayOnResumeDisabled;
@property(readonly) BOOL currentItemIsRental;
@property(readonly) BOOL isInExtendedMode;
@property BOOL forceSynchronousQueueFilling;

+ (id)_playerKeysToObserve;
+ (id)_controllerKeysToObserve;
+ (id)_itemKeysToObserve;
+ (BOOL)outputSupportsAC3;
+ (void)initialize;
+ (id)sharedInstance;
+ (BOOL)isNetworkSupportedPath:(id)arg1;

- (double)nextFadeOutDuration;
- (BOOL)forceSynchronousQueueFilling;
- (id)destinationBrowser;
- (void)_updateCurrentItemBookkeepingForTimerCallback;
- (BOOL)ubiquitousBookkeepingEnabled;
- (void)skipToSeekableEnd;
- (void)skipToSeekableStart;
- (BOOL)canSeekForwards;
- (BOOL)canSeekBackwards;
- (void)ensureFeederIsSubclass:(Class)arg1;
- (void)restorePreviousFeederState;
- (void)saveCurrentFeederState;
- (void)switchToVideoPlayback:(BOOL)arg1 forItem:(id)arg2;
- (void)switchToAudioPlayback:(BOOL)arg1 forItem:(id)arg2;
- (void)_setFeeder:(id)arg1;
- (void)applicationDidReceiveMemoryWarningAsUrgent:(BOOL)arg1;
- (id)audioDeviceController;
- (BOOL)isFullScreenVideoMode;
- (id)routeNameForVolumeControl;
- (BOOL)hasVolumeControl;
- (void)setDisableAirPlayMirroringDuringPlayback:(BOOL)arg1;
- (BOOL)disableAirPlayMirroringDuringPlayback;
- (void)setAlwaysPlayWheneverPossible:(BOOL)arg1;
- (BOOL)isShuffled;
- (BOOL)shouldDisplayAsPlaying;
- (BOOL)isTickTimerEnabled;
- (void)beginTickTimerWithInterval:(double)arg1;
- (BOOL)forceRestartPlaybackIfNecessary;
- (void)playChapterTimeMarkerAtIndex:(unsigned int)arg1;
- (void)playItemAtIndex:(unsigned int)arg1;
- (double)currentMonotonousTime;
- (BOOL)isRewindHoldingAtStart;
- (BOOL)isSeekingOrScrubbing;
- (BOOL)fadeOutForQuit;
- (void)errorResolver:(id)arg1 didResolveError:(id)arg2 withResolution:(int)arg3;
- (void)setRateForScanning:(float)arg1;
- (void)_updateSeekingIntervalsForStreaming;
- (void)_configureUpdateCurrentItemBookkeepingTimer;
- (unsigned int)_seeklessStateForState:(unsigned int)arg1;
- (void)_clearResetRateAfterSeeking;
- (void)_scheduleUpdateCurrentItemBookkeepingTimer;
- (void)_postPlaybackStateChangedNotificationWithOriginalState:(unsigned int)arg1 newState:(unsigned int)arg2 delayable:(BOOL)arg3;
- (void)autoclearDisplayOverride;
- (void)_delayedPostPlaybackStateChangedNotification;
- (BOOL)shouldHaveNoActionAtEndForState:(unsigned int)arg1;
- (BOOL)autoPlayWhenLikelyToKeepUp;
- (void)_setVideoLayerOnAVController:(id)arg1 force:(BOOL)arg2 pauseIfNecessary:(BOOL)arg3;
- (void)_playerFailedToQueueNotification:(id)arg1;
- (void)_itemAssetIsLoadedNotification:(id)arg1;
- (void)_timeHasJumpedNotification:(id)arg1;
- (void)_itemFailedToPlayToEndNotification:(id)arg1;
- (id)embeddedDataTimesForItem:(id)arg1;
- (int)EQPreset;
- (void)_configureAVPlaylistManager:(id)arg1;
- (void)_registerForAVPlaylistManagerObservation:(id)arg1;
- (BOOL)_connectAVPlaylistManager;
- (void)_protectionStatusTimerCallback:(id)arg1;
- (unsigned int)_currentIndexInBoundaryCMTimes:(id)arg1;
- (void)_updateCurrentTimeToBookmarkTimeForDynamicPropertyChange;
- (BOOL)_itemIsRestricted:(id)arg1;
- (void)_resumeBookkeepingTimer;
- (void)_resumeTickTimer;
- (void)_pauseBookkeepingTimer;
- (void)_pauseTickTimer;
- (BOOL)destinationIsTVOut;
- (BOOL)isInExtendedMode;
- (void)_firstVideoFrameDisplayed:(id)arg1;
- (void)_tracksDidChange:(id)arg1;
- (void)_timedMetadataAvailable:(id)arg1;
- (void)_streamRanDry:(id)arg1;
- (void)_streamBufferFull:(id)arg1;
- (void)_streamUnlikelyToKeepUp:(id)arg1;
- (void)_streamLikelyToKeepUp:(id)arg1;
- (void)_sizeDidChange:(id)arg1;
- (void)_isAirPlayVideoActiveDidChange:(id)arg1;
- (void)_serverConnectionDidDie:(id)arg1;
- (void)_itemDidChange:(id)arg1;
- (void)_itemWillChange:(id)arg1;
- (id)_extractImageFromMetadata:(id)arg1;
- (void)_checkForBoundaryTimeCrossing;
- (void)_postMPAVControllerSizeDidChangeNotificationWithItem:(id)arg1;
- (void)audioDeviceControllerAudioRoutesChanged:(id)arg1;
- (void)_updateCurrentItemBookkeeping;
- (void)_prepareToPlayItem:(id)arg1;
- (void)_delayedUpdateTimeMarker;
- (void)_postMPAVControllerItemReadyToPlayNotificationWithItem:(id)arg1;
- (void)_setBufferingState:(unsigned int)arg1;
- (void)_setValid:(BOOL)arg1;
- (void)_scheduleExternalProtectionTimerIfNecessary;
- (void)_delayedUpdateScanningRate;
- (void)airPlayVideoEnded;
- (void)_itemFailedToPlayToEnd:(id)arg1;
- (void)_itemReadyToPlay:(id)arg1;
- (void)_reloadTimeMarkerObservationsForItem:(id)arg1;
- (void)_registerForAVItemNotifications:(id)arg1;
- (void)_playbackFailedWithError:(id)arg1 canResolve:(BOOL)arg2;
- (void)_setItemErrorResolver:(id)arg1;
- (void)_resetQueue:(BOOL)arg1 videoLayer:(id)arg2;
- (int)feederMode;
- (void)_clearSeekingIntervalsForStreaming;
- (void)setFeederMode:(int)arg1;
- (id)videoLayer;
- (void)finalizeBookkeepingNow;
- (void)ensureHasAVPlaylistManager;
- (void)_setActionAtEndAttributeForState:(unsigned int)arg1;
- (void)_disconnectAVPlaylistManagerWithReason:(int)arg1;
- (void)applyShuffleSettings;
- (void)applyRepeatSettings;
- (unsigned int)_displayPlaybackState;
- (BOOL)_showsPlayingWhenInState:(unsigned int)arg1;
- (void)endTickTimer;
- (BOOL)alwaysPlayWheneverPossible;
- (void)_attemptAutoPlay;
- (void)playItemAtIndex:(unsigned int)arg1 forceRestart:(BOOL)arg2;
- (void)_rateDidChange:(id)arg1;
- (BOOL)_canPlayItem:(id)arg1;
- (void)_delayedSetCurrentTime;
- (void)pauseWithFadeout:(float)arg1;
- (void)_setAVControllerQueueFeeder:(id)arg1 startQueueIndex:(unsigned int)arg2;
- (void)_switchToFeeder:(id)arg1 mode:(int)arg2 index:(unsigned int)arg3 play:(BOOL)arg4 configureFeederBlock:(id)arg5;
- (void)_stopExternalProtectionTimer;
- (void)_endSeekAndChangeRate:(BOOL)arg1;
- (unsigned int)_playbackIndexForDelta:(int)arg1 fromIndex:(unsigned int)arg2 ignoreElapsedTime:(BOOL)arg3;
- (BOOL)_changeChapterTimeMarkerIndexBy:(int)arg1;
- (void)_delayedPlaybackIndexChange;
- (void)setPlaybackIndex:(int)arg1 selectionDirection:(int)arg2;
- (void)updateBookkeepingNow;
- (void)_updateCurrentTimeToNextStartTimeForQueueFeeder:(id)arg1 withItemIndex:(int)arg2;
- (id)_avPlaylistManager;
- (void)_updateScanningRate;
- (BOOL)currentItemIsRental;
- (void)_setState:(unsigned int)arg1;
- (void)_unregisterForAVPlaylistManagerObservation:(id)arg1;
- (void)_unregisterForAVItemNotifications:(id)arg1;
- (void)_setVideoLayerOnAVController:(id)arg1 force:(BOOL)arg2;
- (void)_clearVideoLayer;
- (void)_cancelUpdateCurrentItemBookkeepingTimer;
- (void)_mediaLibraryDynamicPropertiesDidChangeNotification:(id)arg1;
- (void)_closedCaptioningStatusDidChangeNotification:(id)arg1;
- (void)_itemTimeMarkersAvailableNotification:(id)arg1;
- (void)_applicationDidFinishSuspensionSnapshot:(id)arg1;
- (void)_applicationSuspended:(id)arg1;
- (void)_applicationSuspendedEventsOnly:(id)arg1;
- (void)_resetInternalState;
- (void)setShuffleType:(unsigned int)arg1;
- (void)setRepeatType:(unsigned int)arg1;
- (void)ensureFeederIsClass:(Class)arg1;
- (unsigned int)shuffleType;
- (unsigned int)repeatType;
- (void)reloadFeederWithStartQueueIndex:(unsigned int)arg1;
- (void)feederChangedContents:(id)arg1;
- (void)setAutoclearingDisplayOverridePlaybackState:(unsigned int)arg1;
- (void)setUbiquitousBookkeepingEnabled:(BOOL)arg1;
- (void)setSubtitlesEnabled:(BOOL)arg1;
- (BOOL)subtitlesEnabled;
- (BOOL)videoFrameDisplayOnResumeDisabled;
- (void)setDestinationIsTVOut:(BOOL)arg1;
- (void)_volumeDidChangeNotification:(id)arg1;
- (void)enableAutoplayForCurrentItem;
- (void)togglePlayback;
- (void)disableAutoplayForCurrentItem;
- (void)setVideoFrameDisplayOnResumeDisabled:(BOOL)arg1;
- (BOOL)stopAtEnd;
- (double)timeOfSeekableEnd;
- (double)timeOfSeekableStart;
- (double)timeOfPlayableEnd;
- (double)timeOfPlayableStart;
- (double)playableDurationOfCurrentItemIfAvailable;
- (double)durationOfCurrentItemIfAvailable;
- (BOOL)isLiveStreaming;
- (void)setClosedCaptioningEnabled:(BOOL)arg1;
- (BOOL)closedCaptioningEnabled;
- (void)setForceSynchronousQueueFilling:(BOOL)arg1;
- (void)setNextFadeOutDuration:(double)arg1;
- (void)switchToFeeder:(id)arg1 mode:(int)arg2 index:(unsigned int)arg3 play:(BOOL)arg4;
- (void)setPlaybackIndex:(int)arg1;
- (BOOL)shouldEnforceHDCP;
- (void)setShouldEnforceHDCP:(BOOL)arg1;
- (void)changePlaybackIndexBy:(int)arg1;
- (void)endUsingVideoLayer;
- (void)beginUsingVideoLayer;
- (void)setPlaybackMode:(int)arg1;
- (int)playbackMode;
- (void)changePlaybackIndexBy:(int)arg1 deltaType:(int)arg2 ignoreElapsedTime:(BOOL)arg3;
- (void)changePlaybackIndexBy:(int)arg1 deltaType:(int)arg2;
- (void)endSeek;
- (void)beginSeek:(int)arg1;
- (void)setDisplayOverridePlaybackState:(unsigned int)arg1;
- (void)endPlayback;
- (id)avPlayer;
- (void)setAutoPlayWhenLikelyToKeepUp:(BOOL)arg1;
- (unsigned int)bufferingState;
- (void)_itemPlaybackDidEndNotification:(id)arg1;
- (void)setStopAtEnd:(BOOL)arg1;
- (void)setUseApplicationAudioSession:(BOOL)arg1;
- (BOOL)useApplicationAudioSession;
- (unsigned int)activeShuffleType;
- (unsigned int)activeRepeatType;
- (id)feeder;
- (id)videoView;
- (void)play;
- (float)volume;
- (void)setVolume:(float)arg1;
- (void)pause;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (unsigned int)numberOfItems;
- (id)currentItem;
- (void)setState:(unsigned int)arg1;
- (unsigned int)state;
- (BOOL)isValid;
- (void)applicationWillTerminate;
- (void)endInterruptionFromInterruptor:(id)arg1 category:(id)arg2 flags:(unsigned int)arg3;
- (BOOL)allowsAirPlayVideo;
- (BOOL)isAirPlayVideoActive;
- (void)setAllowsAirPlayVideo:(BOOL)arg1;
- (BOOL)isPlaying;
- (BOOL)setRate:(float)arg1;
- (float)rate;
- (double)currentTime;
- (void)setCurrentTime:(double)arg1;
- (void)beginInterruption;
- (id)init;
- (void)dealloc;
- (BOOL)isCurrentItemReady;
- (void)setCurrentTime:(double)arg1 options:(int)arg2;
- (BOOL)muted;
- (void)contentsDidChangeByRemovingRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned int)arg1;
- (void)setEQPreset:(int)arg1;
- (void)_updateProgress:(struct __CFRunLoopTimer { }*)arg1;
- (BOOL)reloadWithDataSource:(id)arg1;
- (BOOL)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(BOOL)arg2;
- (void)switchToContextForQuery:(id)arg1 behindTopController:(BOOL)arg2;
- (void)_updateFeederModeFromCurrentItem;
- (id)currentMediaQuery;
- (id)currentMediaItem;

@end
