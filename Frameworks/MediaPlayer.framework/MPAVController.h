/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@class <MPAVDestination>, AVController, CALayer, MPAVControllerToAggregateDCommunicator, MPAVDestinationBrowser, MPAVErrorResolver, MPAudioDeviceController, MPQueueFeeder, NSMutableArray, NSNotification;

@interface MPAVController : NSObject {
    unsigned int _valid : 1;
    unsigned int _hasDelayedCurrentTimeToSet : 1;
    unsigned int _forceDelayedCurrentTimeToSet : 1;
    unsigned int _autoPlayWhenLikelyToKeepUp : 1;
    unsigned int _closedCaptioningEnabled : 1;
    unsigned int _isSeekingOrScrubbing : 1;
    unsigned int _resetRateAfterSeeking : 1;
    unsigned int _activeRewindHoldingAtStart : 1;
    unsigned int _canSeekRev : 1;
    unsigned int _canSeekFwd : 1;
    unsigned int _alwaysPlayWheneverPossible : 1;
    unsigned int _stopAtEnd : 1;
    unsigned int _didReachEnd : 1;
    unsigned int _pausedDuringInterruption : 1;
    unsigned int _useApplicationAudioSession : 1;
    unsigned int _subtitlesEnabled : 1;
    unsigned int _videoFrameDisplayOnResumeDisabled : 1;
    unsigned int _destinationInterrupted : 1;
    unsigned int _ignoreNextDestinationInterruption : 1;
    MPAVControllerToAggregateDCommunicator *_aggregateDCommunicator;
    MPAudioDeviceController *_audioDeviceController;
    AVController *_avController;
    NSUInteger _bufferingState;
    double _connectionFailTime;
    struct __CFRunLoopTimer { } *_currentItemBookkeepingTimer;
    NSInteger _delayedCurrentTimeOptions;
    double _delayedCurrentTimeToSet;
    NSNotification *_delayedPlaybackStateNotification;
    <MPAVDestination> *_destination;
    MPAVDestinationBrowser *_destinationBrowser;
    NSUInteger _displayOverridePlaybackState;
    NSInteger _eqPreset;
    MPQueueFeeder *_feeder;
    NSInteger _feederMode;
    NSInteger _indexChangeDirection;
    float _inflightSeekRate;
    MPAVErrorResolver *_itemErrorResolver;
    NSUInteger _itemIndexAtDeath;
    NSInteger _lastDisconnectReason;
    double _lastKnownTimeBeforeDeath;
    double _lastPlaybackIndexChangeTime;
    double _lastSeekableEnd;
    double _lastSeekableStart;
    double _lastSetTime;
    double _lastSetTimeChangeTime;
    NSUInteger _lastSetTimeMarker;
    double _maxSeekableFwd;
    double _maxSeekableRev;
    double _nextFadeOutDuration;
    NSInteger _playbackMode;
    NSMutableArray *_queueFeederStateStack;
    float _rateBeforeSeek;
    double _repeatGap;
    NSInteger _resetRateAfterSeekingUpdateDisabled;
    NSInteger _scanDirection;
    NSUInteger _scanLevel;
    double _seekFwdSlop;
    double _seekRevSlop;
    NSUInteger _seeklessState;
    NSUInteger _state;
    id _subtitlesRecipient;
    double _tickInterval;
    struct __CFRunLoopTimer { } *_tickTimer;
    NSUInteger _tickTimerEnabled;
    CALayer *_videoLayer;
    NSUInteger _videoLayerUsageCount;
    double _whenSawSeekableEnd;
    double _whenSawSeekableStart;
}

@property(getter=destinationIsTVOut) BOOL destinationIsTVOut; /* unknown property attribute: SsetDestinationIsTVOut: */
@property(retain,readonly) MPAudioDeviceController *audioDeviceController;
@property(retain,readonly) AVController *avController;
@property(readonly) <MPAVDestination> *bestDestination;
@property(retain,readonly) MPAVItem *currentItem;
@property(retain) <MPAVDestination> *destination;
@property(readonly) MPAVDestinationBrowser *destinationBrowser;
@property(retain) MPQueueFeeder *feeder;
@property(readonly) NSString *routeNameForVolumeControl;
@property(retain,readonly) CALayer *videoLayer;
@property NSInteger EQPreset;
@property(readonly) NSUInteger activeRepeatType;
@property(readonly) NSUInteger activeShuffleType;
@property BOOL alwaysPlayWheneverPossible;
@property BOOL autoPlayWhenLikelyToKeepUp;
@property(readonly) NSUInteger bufferingState;
@property BOOL closedCaptioningEnabled;
@property(readonly) BOOL currentItemIsRental;
@property double currentTime;
@property NSInteger feederMode;
@property(getter=isFullScreenVideoMode,readonly) BOOL fullScreenVideoMode;
@property(readonly) BOOL handlingRemoteEvent;
@property(readonly) BOOL hasVolumeControl;
@property(readonly) BOOL isCurrentItemReady;
@property(readonly) BOOL muted;
@property double nextFadeOutDuration;
@property(readonly) NSUInteger numberOfItems;
@property NSInteger playbackMode;
@property(getter=isPlaying,readonly) BOOL playing;
@property double repeatGap;
@property NSUInteger repeatType;
@property(getter=isRewindHoldingAtStart,readonly) BOOL rewindHoldingAtStart;
@property NSUInteger shuffleType;
@property(getter=isShuffled,readonly) BOOL shuffled;
@property NSUInteger state;
@property BOOL stopAtEnd;
@property BOOL subtitlesEnabled;
@property(retain,readonly) id subtitlesRecipient;
@property BOOL useApplicationAudioSession;
@property(getter=isValid,readonly) BOOL valid;
@property BOOL videoFrameDisplayOnResumeDisabled;
@property float volume;

+ (void)purgeSharedInstance;
+ (id)sharedIPCAppInstance;
+ (id)sharedIPCAppInstanceIfAvailable;
+ (id)sharedInstance;

- (NSInteger)EQPreset;
- (void)_attemptAutoPlay;
- (id)_avController;
- (void)_availableDestinationsDidChangeNotification:(id)arg1;
- (void)_beginDestinationInterruption;
- (void)_cancelUpdateCurrentItemBookkeepingTimer;
- (BOOL)_changeChapterTimeMarkerIndexBy:(NSInteger)arg1;
- (void)_clearResetRateAfterSeeking;
- (void)_clearSeekingIntervalsForStreaming;
- (void)_clearVideoLayer;
- (void)_coalesceAndPostMPTimeMarkerCrossedNotification;
- (void)_configureAVController:(id)arg1;
- (void)_configureUpdateCurrentItemBookkeepingTimer;
- (BOOL)_connectAVController;
- (void)_crossedEmbeddedChapterHREFDidChangeNotification:(id)arg1;
- (void)_crossedEmbeddedChapterImageDidChangeNotification:(id)arg1;
- (void)_crossedEmbeddedChapterNameDidChangeNotification:(id)arg1;
- (void)_delayedPlaybackIndexChange;
- (void)_delayedPostPlaybackStateChangedNotification;
- (void)_delayedSetCurrentTime;
- (void)_delayedUpdateScanningRate;
- (void)_delayedUpdateTimeMarker;
- (void)_destinationPlaybackStateDidChangeNotification:(id)arg1;
- (void)_didEnterBackgroundNotification:(id)arg1;
- (void)_disconnectAVControllerWithReason:(NSInteger)arg1;
- (NSUInteger)_displayPlaybackState;
- (void)_endDestinationInterruption;
- (void)_endSeekAndChangeRate:(BOOL)arg1;
- (id)_extractImageFromMetadataPayload:(id)arg1;
- (void)_firstVideoFrameDisplayedNotification:(id)arg1;
- (void)_itemAttributeAvailableNotification:(id)arg1;
- (void)_itemCompletedDecodeNotification:(id)arg1;
- (void)_itemDidChangeNotification:(id)arg1;
- (void)_itemFailedToPlayNotification:(id)arg1;
- (void)_itemPlaybackDidEndNotification:(id)arg1;
- (void)_itemReadyToPlayNotification:(id)arg1;
- (void)_itemTimeMarkersAvailableNotification:(id)arg1;
- (void)_itemTypeAvailableNotification:(id)arg1;
- (void)_itemWillChangeNotification:(id)arg1;
- (id)_metadataDictionariesFromMetadataPayload:(id)arg1;
- (void)_pauseTickTimer;
- (void)_playbackFailedWithError:(id)arg1 canResolve:(BOOL)arg2;
- (NSUInteger)_playbackIndexForDelta:(NSInteger)arg1 fromIndex:(NSUInteger)arg2 ignoreElapsedTime:(BOOL)arg3;
- (void)_playbackInterruptedNotification:(id)arg1;
- (void)_playbackInterruptionDidEndNotification:(id)arg1;
- (void)_postMPAVControllerItemReadyToPlayNotificationWithItem:(id)arg1;
- (void)_postMPAVControllerSizeDidChangeNotificationWithItem:(id)arg1;
- (void)_postPlaybackStateChangedNotificationWithOriginalState:(NSUInteger)arg1 newState:(NSUInteger)arg2 delayable:(BOOL)arg3;
- (void)_prepareToPlayItem:(id)arg1;
- (void)_rateDidChangeNotification:(id)arg1;
- (void)_registerForAVItemNotifications:(id)arg1;
- (void)_registerForAVNotifications:(id)arg1;
- (void)_registerForAVSystemNotifications:(id)arg1;
- (void)_reloadTimeMarkerObservationsForItem:(id)arg1;
- (void)_resetInternalState;
- (void)_resetQueue:(BOOL)arg1 videoLayer:(id)arg2;
- (void)_resumeTickTimer;
- (void)_resumedEventsOnly:(BOOL)arg1;
- (void)_resumedEventsOnlyNotification:(id)arg1;
- (void)_resumedNotification:(id)arg1;
- (void)_routeAudioToDeviceIfNecessary;
- (void)_scheduleUpdateCurrentItemBookkeepingTimer;
- (NSUInteger)_seeklessStateForState:(NSUInteger)arg1;
- (void)_serverConnectionDiedNotification:(id)arg1;
- (void)_setAVControllerQueueFeeder:(id)arg1 startQueueIndex:(NSUInteger)arg2;
- (void)_setActionAtEndAttributeForState:(NSUInteger)arg1;
- (void)_setBufferingState:(NSUInteger)arg1;
- (void)_setItemErrorResolver:(id)arg1;
- (void)_setState:(NSUInteger)arg1;
- (void)_setValid:(BOOL)arg1;
- (void)_setVideoLayerOnAVController:(id)arg1 force:(BOOL)arg2;
- (BOOL)_showsPlayingWhenInState:(NSUInteger)arg1;
- (void)_sizeDidChangeNotification:(id)arg1;
- (void)_streamBufferFullNotification:(id)arg1;
- (void)_streamLikelyToKeepUpNotification:(id)arg1;
- (void)_streamRanDryNotification:(id)arg1;
- (void)_streamUnlikelyToKeepUpNotification:(id)arg1;
- (void)_suspendedEventsOnlyNotification:(id)arg1;
- (void)_suspendedNotification:(id)arg1;
- (void)_systemVolumeDidChangeNotification:(id)arg1;
- (void)_timeHasJumpedNotification:(id)arg1;
- (void)_timedMetadataAvailableNotification:(id)arg1;
- (void)_unregisterForAVItemNotifications:(id)arg1;
- (void)_unregisterForAVNotifications:(id)arg1;
- (void)_unregisterForAVSystemNotifications:(id)arg1;
- (void)_updateCurrentItemBookkeeping;
- (void)_updateCurrentTimeToNextStartTimeForQueueFeeder:(id)arg1 withItemIndex:(NSInteger)arg2;
- (void)_updateProgress:(struct __CFRunLoopTimer { }*)arg1;
- (void)_updateScanningRate;
- (void)_updateSeekingIntervalsForStreaming;
- (void)_volumeDidChangeNotification:(id)arg1;
- (void)_volumeMutedDidChangeNotification:(id)arg1;
- (BOOL)_wantsVideoLayerWhenSuspended;
- (NSUInteger)activeRepeatType;
- (NSUInteger)activeShuffleType;
- (BOOL)alwaysPlayWheneverPossible;
- (void)applicationDidReceiveMemoryWarningAsUrgent:(BOOL)arg1;
- (void)applicationWillTerminate;
- (void)applyRepeatSettings;
- (void)applyShuffleSettings;
- (id)audioDeviceController;
- (void)audioDeviceControllerAudioRoutesChanged:(id)arg1;
- (BOOL)autoPlayWhenLikelyToKeepUp;
- (void)autoclearDisplayOverride;
- (id)avController;
- (void)beginSeek:(NSInteger)arg1;
- (void)beginTickTimerWithInterval:(double)arg1;
- (void)beginUsingVideoLayer;
- (id)bestDestination;
- (NSUInteger)bufferingState;
- (BOOL)canSeekBackwards;
- (BOOL)canSeekForwards;
- (void)changePlaybackIndexBy:(NSInteger)arg1 deltaType:(NSInteger)arg2 ignoreElapsedTime:(BOOL)arg3;
- (void)changePlaybackIndexBy:(NSInteger)arg1 deltaType:(NSInteger)arg2;
- (void)changePlaybackIndexBy:(NSInteger)arg1;
- (BOOL)closedCaptioningEnabled;
- (void)controller:(id)arg1 crossedTimeMarker:(NSInteger)arg2 forItem:(id)arg3 context:(id)arg4;
- (BOOL)controller:(id)arg1 shouldBeginPlayingItem:(id)arg2 error:(id*)arg3;
- (id)currentItem;
- (BOOL)currentItemIsRental;
- (double)currentTime;
- (void)dealloc;
- (id)destination;
- (id)destinationBrowser;
- (BOOL)destinationIsTVOut;
- (void)disconnectVideoLayer;
- (id)embeddedDataTimesForItem:(id)arg1;
- (void)endPlayback;
- (void)endSeek;
- (void)endTickTimer;
- (void)endUsingVideoLayer;
- (void)ensureFeederIsClass:(Class)arg1;
- (void)ensureFeederIsSubclass:(Class)arg1;
- (void)ensureHasAVController;
- (void)errorResolver:(id)arg1 didResolveError:(id)arg2 withResolution:(NSInteger)arg3;
- (BOOL)fadeOutForQuit;
- (id)feeder;
- (void)feederChangedContents:(id)arg1;
- (NSInteger)feederMode;
- (BOOL)forceRestartPlaybackIfNecessary;
- (BOOL)handlingRemoteEvent;
- (BOOL)hasVolumeControl;
- (id)init;
- (void)insertAndPostEmbeddedTimeMarkerWithNotification:(id)arg1;
- (BOOL)isCurrentItemReady;
- (BOOL)isFullScreenVideoMode;
- (BOOL)isLiveStreaming;
- (BOOL)isPlaying;
- (BOOL)isRewindHoldingAtStart;
- (BOOL)isSeekingOrScrubbing;
- (BOOL)isShuffled;
- (BOOL)isTickTimerEnabled;
- (BOOL)isValid;
- (BOOL)muted;
- (double)nextFadeOutDuration;
- (NSUInteger)numberOfItems;
- (void)pause;
- (void)pauseWithFadeout:(float)arg1;
- (void)play;
- (void)playChapterTimeMarkerAtIndex:(NSUInteger)arg1;
- (void)playItemAtIndex:(NSUInteger)arg1 forceRestart:(BOOL)arg2;
- (void)playItemAtIndex:(NSUInteger)arg1;
- (NSInteger)playbackMode;
- (void)prepareVideoLayerForReuse;
- (float)rate;
- (void)reloadFeederWithStartQueueIndex:(NSUInteger)arg1;
- (double)repeatGap;
- (NSUInteger)repeatType;
- (void)restorePreviousFeederState;
- (id)routeNameForVolumeControl;
- (void)saveCurrentFeederState;
- (void)setAlwaysPlayWheneverPossible:(BOOL)arg1;
- (void)setAutoPlayWhenLikelyToKeepUp:(BOOL)arg1;
- (void)setAutoclearingDisplayOverridePlaybackState:(NSUInteger)arg1;
- (void)setClosedCaptioningEnabled:(BOOL)arg1;
- (void)setCurrentTime:(double)arg1 options:(NSInteger)arg2;
- (void)setCurrentTime:(double)arg1;
- (void)setDestination:(id)arg1;
- (void)setDestinationIsTVOut:(BOOL)arg1;
- (void)setDisplayOverridePlaybackState:(NSUInteger)arg1;
- (void)setEQPreset:(NSInteger)arg1;
- (void)setFeeder:(id)arg1;
- (void)setFeederMode:(NSInteger)arg1;
- (void)setNextFadeOutDuration:(double)arg1;
- (void)setPlaybackIndex:(NSInteger)arg1;
- (void)setPlaybackMode:(NSInteger)arg1;
- (BOOL)setRate:(float)arg1;
- (void)setRateForScanning:(float)arg1;
- (void)setRepeatGap:(double)arg1;
- (void)setRepeatType:(NSUInteger)arg1;
- (void)setShuffleType:(NSUInteger)arg1;
- (void)setState:(NSUInteger)arg1;
- (void)setStopAtEnd:(BOOL)arg1;
- (void)setSubtitlesEnabled:(BOOL)arg1;
- (void)setUseApplicationAudioSession:(BOOL)arg1;
- (void)setVideoFrameDisplayOnResumeDisabled:(BOOL)arg1;
- (void)setVolume:(float)arg1;
- (BOOL)shouldDisplayAsPlaying;
- (BOOL)shouldHaveNoActionAtEndForState:(NSUInteger)arg1;
- (BOOL)shouldRouteAudioToDeviceForCurrentItem;
- (NSUInteger)shuffleType;
- (void)skipToSeekableEnd;
- (void)skipToSeekableStart;
- (NSUInteger)state;
- (BOOL)stopAtEnd;
- (BOOL)subtitlesEnabled;
- (id)subtitlesRecipient;
- (void)switchToAudioPlayback:(BOOL)arg1;
- (void)switchToVideoPlayback:(BOOL)arg1;
- (double)timeOfPlayableEnd;
- (double)timeOfPlayableStart;
- (void)togglePlayback;
- (void)updateBookkeepingNow;
- (BOOL)useApplicationAudioSession;
- (BOOL)videoFrameDisplayOnResumeDisabled;
- (id)videoLayer;
- (float)volume;

@end
