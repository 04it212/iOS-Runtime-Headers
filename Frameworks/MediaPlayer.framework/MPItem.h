/* Generated by RuntimeBrowser on iPhone OS 4.1
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@class MPArtworkInfo, NSOperationQueue, MPAlternateTracks, MPQueueFeeder, NSMutableArray;



@interface MPItem : AVItem 
{
    MPQueueFeeder *_feeder;
    NSMutableArray *_chapterTimeMarkers;
    NSMutableArray *_artworkTimeMarkers;
    NSMutableArray *_urlTimeMarkers;
    MPAlternateTracks *_alternateTracks;
    NSUInteger _type;
    double _cachedDuration;
    double _cachedPlayableDuration;
    MPArtworkInfo *_largestArtworkInfo;
    NSOperationQueue *_embeddedArtworkInfoQueue;
    float _defaultPlaybackRate;
    unsigned int _advancedDuringPlayback : 1;
    unsigned int _handledFinishTime : 1;
    unsigned int _hasPlayedThisSession : 1;
    unsigned int _isOnDemandItem : 1;
    unsigned int _wasCountedAsSkipped : 1;
    unsigned int _isStreamable : 2;
    unsigned int _useCachedPlayableDuration : 1;
    unsigned int _watchingAttributes : 1;
    unsigned int _videoDisabled : 1;
    unsigned int _lyricsAvailable : 1;
    unsigned int _delayedInvalidateCachedPlayedDurationScheduled : 1;
}

@property BOOL hasPlayedThisSession;
@property BOOL isOnDemandItem;
@property(readonly) NSUInteger countForQueueFeeder;
@property(readonly) NSUInteger indexInQueueFeeder;
@property(readonly) double currentTimeDisplayOverride;
@property(getter=isVideoDisabled) BOOL videoDisabled;
@property(retain,readonly) NSArray *chapterTimeMarkers;
@property(retain,readonly) NSArray *artworkTimeMarkers;
@property(retain,readonly) NSArray *urlTimeMarkers;
@property(readonly) BOOL useEmbeddedChapterData;
@property(retain,readonly) NSString *displayableText;
@property(readonly) BOOL displayableTextLoaded;
@property(readonly) BOOL hasDisplayableText;
@property(retain,readonly) NSString *album;
@property(retain,readonly) NSString *artist;
@property(retain,readonly) NSString *albumArtist;
@property(readonly) BOOL hasDataForItemArtwork;
@property(readonly) BOOL hasDataForAlbumArtwork;
@property(retain,readonly) NSString *mainTitle;
@property(retain,readonly) NSURL *podcastURL;
@property(getter=isStreamable,readonly) BOOL streamable;
@property(readonly) NSUInteger type;
@property(readonly) NSUInteger contentUniqueID;
@property(readonly) float userRating;
@property(readonly) BOOL wantsSubtitles;
@property(readonly) BOOL durationIsValid;
@property(readonly) double durationIfAvailable;
@property(readonly) double durationFromExternalMetadata;
@property(readonly) double playableDuration;
@property(readonly) double timeOfSeekableStart;
@property(readonly) double timeOfSeekableEnd;
@property(readonly) BOOL requiresExternalProtection;
@property(readonly) BOOL externalProtectionEnabled;
@property float defaultPlaybackRate;
@property MPQueueFeeder *feeder;
@property(retain,readonly) MPAlternateTracks *alternateTracks;

+ (NSUInteger)defaultScaleMode;
+ (void)setDefaultScaleMode:(NSUInteger)arg1;

- (id)initWithPath:(id)arg1 error:(id*)arg2;
- (NSUInteger)type;
- (void)_commonInit;
- (double)duration;
- (id)init;
- (void)dealloc;
- (id)mainTitle;
- (float)userRating;
- (id)artist;
- (id)albumArtist;
- (id)album;
- (id)podcastURL;
- (void)setRating:(float)arg1;
- (BOOL)allowAutoChangingScaleModeToFill;
- (BOOL)isSupportedDefaultPlaybackSpeed:(NSUInteger)arg1;
- (void)_releaseAllTimeMarkers;
- (void)flushNowPlayingCaches;
- (void)resetBookkeeping;
- (void)setPlaybackStoppedTime:(double)arg1;
- (void)notePlaybackFinishedByHittingEnd;
- (void)setPlaybackCheckpointCurrentTime:(double)arg1;
- (void)setPlaybackFinishedTime:(double)arg1;
- (void)setUserAdvancedDuringPlayback:(BOOL)arg1;
- (void)setUserEnabledSubtitles:(BOOL)arg1;
- (void)setUserSkippedPlayback:(BOOL)arg1;
- (BOOL)userSkippedPlayback;
- (double)avDuration;
- (void)setupPlaybackInfo;
- (void)updateAttributesForDefaultsChange:(id)arg1;
- (void)postDurationDidChange;
- (BOOL)isPlaceholderForItem:(id)arg1;
- (NSUInteger)countForQueueFeeder;
- (double)currentTimeDisplayOverride;
- (BOOL)displayableTextLoaded;
- (id)displayableText;
- (BOOL)hasAlternatesForTypes:(NSUInteger)arg1;
- (BOOL)hasDataForAlbumArtwork;
- (BOOL)hasDisplayableText;
- (BOOL)hasPlayedThisSession;
- (BOOL)isOnDemandItem;
- (BOOL)isStreamable;
- (BOOL)isVideoDisabled;
- (float)playbackRateForLevel:(NSUInteger)arg1 direction:(NSInteger)arg2 paused:(BOOL)arg3;
- (float)scanIntervalForLevel:(NSUInteger)arg1 paused:(BOOL)arg2;
- (void)setHasPlayedThisSession:(BOOL)arg1;
- (void)setIsOnDemandItem:(BOOL)arg1;
- (void)setVideoDisabled:(BOOL)arg1;
- (void)_realoadEmbeddedTimeMarkers;
- (id)newTimeMarkerWithInfo:(id)arg1 markerType:(NSInteger)arg2;
- (void)_checkAllowsBlockingDurationCall;
- (id)blockingAttributeForKey:(id)arg1;
- (id)_newBlockingLoadedTimeMarkersForMarkerType:(NSInteger)arg1;
- (id)embeddedArtworkInfoQueue;
- (id)_embeddedArtworkInfoForTime:(double)arg1;
- (id)largeArtworkInfoForTime:(double)arg1;
- (id)mediumArtworkInfoForTime:(double)arg1;
- (id)smallArtworkInfoForTime:(double)arg1;
- (id)titlesForTime:(double)arg1;
- (BOOL)useEmbeddedChapterData;
- (BOOL)useAsyncEmbeddedChapterDataLoading;
- (BOOL)useBlockingEmbeddedChapterDataLoading;
- (id*)_ivarAddrForMarkerType:(NSInteger)arg1;
- (void)_blockingloadTimeMarkersForMarkerType:(NSInteger)arg1;
- (id)_mutableTimeMarkersForMarkerType:(NSInteger)arg1;
- (id)chapterTimeMarkers;
- (id)artworkTimeMarkers;
- (id)urlTimeMarkers;
- (BOOL)_insertEmbeddedTimeMarkerWithInfo:(id)arg1 markerType:(NSInteger)arg2;
- (BOOL)insertEmbeddedTimeMarkerWithInfo:(id)arg1 markerType:(NSInteger)arg2;
- (id)newURLTimeMarkersByFakingWithChapterMarkers:(id)arg1;
- (void)loadFakeURLTimeMarkersIfNecessary;
- (id)artworkTimeMarkerForTime:(double)arg1;
- (id)urlTimeMarkerForTime:(double)arg1;
- (BOOL)wantsSubtitles;
- (id)localizedPositionInPlaylistString;
- (BOOL)requiresExternalProtection;
- (BOOL)externalProtectionEnabled;
- (double)durationFromExternalMetadata;
- (BOOL)durationIsValid;
- (double)_durationFromExternalMetadataIfAvailable;
- (double)durationIfAvailable;
- (void)_delayedInvalidateCachedPlayedDuration;
- (void)_itemAttributeAvailableNotification:(id)arg1;
- (void)_updateForNaturalSizeChange;
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)arg1;
- (float)defaultPlaybackRate;
- (id)alternateTracks;
- (void)setOverrideDuration:(double)arg1;
- (void)setAlternateAudioTrackID:(NSUInteger)arg1;
- (void)setSubtitleTrackID:(NSUInteger)arg1;
- (double)timeOfSeekableStart;
- (double)timeOfSeekableEnd;
- (id)chapterTimeMarkerForTime:(double)arg1;
- (void)setDefaultPlaybackRate:(float)arg1;
- (NSUInteger)indexInQueueFeeder;
- (id)feeder;
- (void)setFeeder:(id)arg1;
- (double)playableDuration;
- (NSUInteger)contentUniqueID;
- (BOOL)hasDataForItemArtwork;

@end
