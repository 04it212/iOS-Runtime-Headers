/* Generated by RuntimeBrowser on iPhone OS 3.1
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@class NSTimer;



@interface MediaVolumeSlider : UIOldSliderControl 
{
    NSTimer *_commitTimer;
    float _hitBufferY;
    float _hitBufferHeight;
    float _lastCommittedValue;
    float _lastTrackingValue;
    unsigned int _tracking : 1;
    unsigned int _endingTracking : 1;
    unsigned int _appModeIsMovie : 1;
    unsigned int _updatingVolumeForExternalChange : 1;
    unsigned int _lastCommitSucceeded : 1;
}

@property(getter=isForMovie) BOOL forMovie;

+ (float)defaultHeight;

- (BOOL)_setPlayerVolume:(float)arg1;
- (float)_playerVolume;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })adjustedFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 isForMovie:(BOOL)arg2;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2 fudgeKnob:(BOOL)arg3;
- (void)dealloc;
- (BOOL)isForMovie;
- (void)setForMovie:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })fillBounds;
- (void)drawSliderPiece:(NSInteger)arg1 inRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (id)imageForSliderPiece:(NSInteger)arg1;
- (id)createSliderKnobView;
- (void)commitVolume:(id)arg1;
- (void)_updateVolume:(id)arg1;
- (void)setValue:(float)arg1 animated:(BOOL)arg2 animationCurve:(NSInteger)arg3;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (BOOL)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;

@end
