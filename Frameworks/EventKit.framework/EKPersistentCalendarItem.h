/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/EventKit.framework/EventKit
 */

@class EKPersistentOrganizer, NSSet, NSTimeZone, EKPersistentCalendarItem, EKPersistentCalendar, EKPersistentAttendee, EKPersistentLocation, NSString, NSURL, NSDate, NSData;

@interface EKPersistentCalendarItem : EKPersistentObject  {
}

@property(readonly) NSString * UUID;
@property(retain) EKPersistentCalendar * calendar;
@property(copy) NSString * title;
@property(copy) EKPersistentLocation * location;
@property(copy) NSString * notes;
@property(copy) NSDate * lastModifiedDate;
@property(copy) NSDate * creationDate;
@property(copy) NSDate * startDate;
@property(copy) NSTimeZone * timeZone;
@property(getter=isAllDay) BOOL allDay;
@property int priority;
@property(copy) NSURL * URL;
@property(copy) NSURL * action;
@property(copy) NSString * externalID;
@property(copy) NSData * externalData;
@property(copy) NSString * externalModTag;
@property int externalTrackingStatus;
@property(copy) NSString * uniqueID;
@property int sequenceNumber;
@property(retain) EKPersistentOrganizer * organizer;
@property(readonly) BOOL hasAlarms;
@property(readonly) BOOL hasRecurrenceRules;
@property(readonly) BOOL hasAttendees;
@property(readonly) BOOL hasNotes;
@property(copy) NSSet * alarms;
@property(copy) NSSet * recurrenceRules;
@property(copy) NSSet * attendees;
@property(retain) EKPersistentAttendee * selfAttendee;
@property(copy) NSSet * exceptionDates;
@property(copy) NSSet * attachments;
@property(getter=isDetached,readonly) BOOL detached;
@property(retain) EKPersistentCalendarItem * originalItem;
@property(copy) NSSet * detachedItems;

+ (id)defaultPropertiesToLoad;
+ (id)relations;

- (void)setExternalID:(id)arg1;
- (id)externalID;
- (id)attachments;
- (id)action;
- (id)init;
- (void)setCreationDate:(id)arg1;
- (id)creationDate;
- (void)setSequenceNumber:(int)arg1;
- (int)sequenceNumber;
- (void)removeAttachment:(id)arg1;
- (void)setAttachments:(id)arg1;
- (BOOL)hasAttachments;
- (int)externalTrackingStatus;
- (void)itemDidReplicateInNewCalendar:(id)arg1;
- (id)moveToCalendar:(id)arg1 skipItem:(id)arg2;
- (void)removeDetachedItem:(id)arg1;
- (id)externalModTag;
- (void)removeExceptionDate:(id)arg1;
- (void)primitiveValueChangedForKey:(id)arg1;
- (void)removeAttendee:(id)arg1;
- (void)setAttendees:(id)arg1;
- (void)removeRecurrenceRule:(id)arg1;
- (void)setAlarms:(id)arg1;
- (BOOL)hasAlarms;
- (void)setLastModifiedDate:(id)arg1;
- (void)setNotes:(id)arg1;
- (void)setExternalModTag:(id)arg1;
- (void)setExternalTrackingStatus:(int)arg1;
- (BOOL)hasNotes;
- (id)notes;
- (int)attendeeCount;
- (void)addDetachedItem:(id)arg1;
- (void)removeAlarm:(id)arg1;
- (void)setUniqueID:(id)arg1;
- (void)setOriginalItem:(id)arg1;
- (void)addRecurrenceRule:(id)arg1;
- (id)exceptionDates;
- (void)addAttachment:(id)arg1;
- (void)setSelfAttendee:(id)arg1;
- (void)addAttendee:(id)arg1;
- (void)setOrganizer:(id)arg1;
- (void)addAlarm:(id)arg1;
- (void)deleteSelfAndDetached;
- (void)addExceptionDate:(id)arg1;
- (id)detachedItems;
- (void)setDetachedItems:(id)arg1;
- (void)setExceptionDates:(id)arg1;
- (id)moveToCalendar:(id)arg1;
- (BOOL)hasAttendees;
- (id)uniqueID;
- (BOOL)isDetached;
- (void)setRecurrenceRules:(id)arg1;
- (id)recurrenceRules;
- (BOOL)hasRecurrenceRules;
- (id)alarms;
- (id)organizer;
- (id)attendees;
- (id)originalItem;
- (id)selfAttendee;
- (void)setStartDate:(id)arg1;
- (void)setAllDay:(BOOL)arg1;
- (id)startDate;
- (BOOL)validate:(id*)arg1;
- (BOOL)isAllDay;
- (int)priority;
- (void)setURL:(id)arg1;
- (id)calendar;
- (void)setCalendar:(id)arg1;
- (id)location;
- (id)timeZone;
- (id)URL;
- (id)title;
- (void)setAction:(id)arg1;
- (void)setTimeZone:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setLocation:(id)arg1;
- (id)lastModifiedDate;
- (id)externalData;
- (void)setExternalData:(id)arg1;
- (void)setPriority:(int)arg1;
- (id)UUID;

@end
