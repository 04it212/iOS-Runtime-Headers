/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSOperationQueue;

@interface CMMotionManagerInternal : NSObject {
    int (*fPrivateAccelerometerDataCallback)();
    int (*fPrivateDeviceMotionCallback)();
    int (*fPrivateGyroDataCallback)();
    boolfInactive;
    boolfShowsDeviceMovementDisplay;
    boolfStartAccelerometerOnResume;
    boolfStartDeviceMotionOnResume;
    boolfStartGyroOnResume;
    boolfStartMagnetometerOnResume;
    struct CLAccelerometer { int (**x1)(); char *x2; struct NotificationInfo {} *x3; int x4; boolx5; unsigned int x6; unsigned int x7; struct __CFRunLoopSource {} *x8; int x9; struct CLSensorInterface {} *x10; boolx11; } *fAccelerometer;
    struct Dispatcher { int (**x1)(); } *fAccelerometerDispatcher;
    id fAccelerometerHandler;
    NSOperationQueue *fAccelerometerQueue;
    double fAccelerometerUpdateInterval;
    struct CLDeviceMotion { int (**x1)(); char *x2; struct NotificationInfo {} *x3; int x4; boolx5; unsigned int x6; unsigned int x7; struct __CFRunLoopSource {} *x8; int x9; struct Dispatcher {} *x10; struct Dispatcher {} *x11; boolx12; boolx13; double x14; double x15; double x16; float x17; double x18; struct CLSensorFusion {} *x19; struct CLGyroMotionCalc {} *x20; int x21; int x22; } *fDeviceMotion;
    struct Dispatcher { int (**x1)(); } *fDeviceMotionDispatcher;
    id fDeviceMotionHandler;
    NSOperationQueue *fDeviceMotionQueue;
    double fDeviceMotionUpdateInterval;
    struct CLGyro { int (**x1)(); char *x2; struct NotificationInfo {} *x3; int x4; boolx5; unsigned int x6; unsigned int x7; struct __CFRunLoopSource {} *x8; int x9; struct CLSensorInterface {} *x10; boolx11; } *fGyro;
    struct Dispatcher { int (**x1)(); } *fGyroDispatcher;
    id fGyroHandler;
    NSOperationQueue *fGyroQueue;
    double fGyroUpdateInterval;
    double fLastAccelerometerNotificationTimestamp;
    double fLastDeviceMotionNotificationTimestamp;
    double fLastGyroNotificationTimestamp;
    double fLastMagnetometerNotificationTimestamp;
    struct CLMagnetometer { int (**x1)(); char *x2; struct NotificationInfo {} *x3; int x4; boolx5; unsigned int x6; unsigned int x7; struct __CFRunLoopSource {} *x8; int x9; struct CLSensorInterface {} *x10; boolx11; } *fMagnetometer;
    struct Dispatcher { int (**x1)(); } *fMagnetometerDispatcher;
    id fMagnetometerHandler;
    NSOperationQueue *fMagnetometerQueue;
    double fMagnetometerUpdateInterval;
    void *fPrivateAccelerometerDataCallbackInfo;
    struct Dispatcher { int (**x1)(); } *fPrivateAccelerometerDataDispatcher;
    void *fPrivateDeviceMotionCallbackInfo;
    struct Dispatcher { int (**x1)(); } *fPrivateDeviceMotionDispatcher;
    void *fPrivateGyroDataCallbackInfo;
    struct Dispatcher { int (**x1)(); } *fPrivateGyroDataDispatcher;
}

- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end
