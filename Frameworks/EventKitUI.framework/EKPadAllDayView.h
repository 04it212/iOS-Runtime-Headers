/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@class NSDateComponents, EKPadAllDayViewContents, EKDayOccurrenceView, UILabel, UIScrollView, EKEvent, <EKPadAllDayViewDelegate>, NSCalendar, NSArray, NSTimeZone, NSMutableArray, UIImageView;

@interface EKPadAllDayView : UIView <EKPadAllDayViewContentsDelegate, UIScrollViewDelegate> {
    EKEvent *_selectedEvent;
    EKEvent *_dimmedOccurrence;
    int _maxOccurrencesWithoutScroller;
    NSDateComponents *_startDate;
    NSDateComponents *_endDate;
    unsigned int _daysToDisplay;
    NSArray *_dayStarts;
    int _orientation;
    float _verticalTopMargin;
    float _minimumHeight;
    float _occurrenceHRightInset;
    float _fixedDayWidth;
    float _customLeftMarginWidth;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _contentFrame;
    EKPadAllDayViewContents *_contentView;
    UIScrollView *_scroller;
    UILabel *_allDayLabel;
    BOOL _allDayLabelHighlighted;
    NSMutableArray *_eventFaders;
    NSMutableArray *_dividerFaders;
    float _eventFaderInset;
    UIImageView *_splitterView;
    int _outlineStyle;
    EKDayOccurrenceView *_selectedOccurrenceView;
    NSMutableArray *_layedOutRows;
    NSMutableArray *_dayNames;
    NSMutableArray *_dayDates;
    unsigned int _drawsLeftBorder : 1;
    unsigned int _drawsAllBorders : 1;
    unsigned int _allowsOccurrenceSelection : 1;
    unsigned int _scrollbarShowsInside : 1;
    EKEvent *_scrollingToOccurrence;
    unsigned int _showsDayTitles : 1;
    unsigned int _drawsRightBorder : 1;
    unsigned int _showsLeftAllDayTitle : 1;
    unsigned int _dimsNonSelectedItems : 1;
    unsigned int _leftMarginIncludesTimeView : 1;
    unsigned int _showsHalfOfScrolledEvents : 1;
    BOOL _lazyAddsOccurrenceViews;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _latestVisibleRect;
    <EKPadAllDayViewDelegate> *_delegate;
    int _shouldAbbreviateDayNames;
    BOOL _usesSmallText;
    int _style;
    NSCalendar *_calendar;
}

@property <EKPadAllDayViewDelegate> * delegate;
@property(copy) NSDateComponents * startDate;
@property(copy) NSCalendar * calendar;
@property(copy) NSTimeZone * timeZone;
@property int style;
@property BOOL dimsNonSelectedItems;
@property BOOL showsHalfOfScrolledEvents;
@property BOOL lazyAddsOccurrenceViews;
@property float fixedDayWidth;
@property BOOL usesSmallText;
@property(readonly) float faderInset;
@property int maxOccurrencesWithoutScroller;
@property float customLeftMarginWidth;
@property float minimumHeight;
@property(readonly) float maximumHeight;
@property(readonly) float firstEventYOffset;
@property(readonly) NSArray * occurrenceViews;
@property(retain) EKEvent * dimmedOccurrence;

+ (float)occurrenceHeight;

- (float)maximumHeight;
- (void)setMinimumHeight:(float)arg1;
- (float)minimumHeight;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)calendar;
- (void)setCalendar:(id)arg1;
- (void)setOrientation:(int)arg1;
- (id)timeZone;
- (int)style;
- (void)setStyle:(int)arg1;
- (void)setTimeZone:(id)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setOutlineStyle:(int)arg1;
- (void)setCustomLeftMarginWidth:(float)arg1;
- (float)customLeftMarginWidth;
- (void)setMaxOccurrencesWithoutScroller:(int)arg1;
- (unsigned int)_calendarOrderForCalendar:(id)arg1;
- (void)setLeftMarginIncludesTimeView:(BOOL)arg1;
- (void)setShowsHalfOfScrolledEvents:(BOOL)arg1;
- (id)selectedOccurrenceView;
- (void)setShowsLeftAllDayTitle:(BOOL)arg1;
- (void)setShowsDayTitles:(BOOL)arg1;
- (void)emptySpaceClickForCalendarWeekDayEventContent:(id)arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2;
- (double)_dateForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)_shouldAbbreviateDateTextLabels;
- (float)_faderWidth;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_frameForOccurrenceBlock:(id)arg1 index:(unsigned int)arg2;
- (float)faderInset;
- (void)_loadFadersIfNeeded;
- (float)_scrollbarOffset;
- (float)heightForNumberOfOccurrences:(int)arg1;
- (BOOL)showsHalfOfScrolledEvents;
- (int)maxOccurrencesWithoutScroller;
- (void)_updateSelectedEventOccurrence;
- (id)getSortedBlocksFromOccurrenceBlocks:(id)arg1;
- (id)_numberOfDaysSortDescriptor;
- (id)_calendarOrderSortDescriptor;
- (id)occurrenceViewForOccurrence:(id)arg1;
- (void)_removeDayLabels;
- (void)_computeDayStartsAndEndDate;
- (void)_updateDayLabels;
- (void)updateDayLabels;
- (void)_significantTimeChanged;
- (void)buildDayLabel;
- (id)makeAllDayLabel:(BOOL)arg1;
- (void)setDrawsRightBorder:(BOOL)arg1;
- (void)setDrawsLeftBorder:(BOOL)arg1;
- (void)setOccurrenceHRightInset:(float)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 orientation:(int)arg2 numberOfDaysToDisplay:(unsigned int)arg3 opaque:(BOOL)arg4 backgroundColor:(id)arg5 scrollbarShowsInside:(BOOL)arg6;
- (float)nextAvailableOccurrenceViewYOriginForDay:(double)arg1;
- (id)occurrenceVisibleRect:(id)arg1;
- (void)scrollToEvent:(id)arg1 animating:(BOOL)arg2;
- (BOOL)isAllDayLabelHighlighted;
- (void)setAllDayLabelHighlighted:(BOOL)arg1;
- (void)addViewToScroller:(id)arg1;
- (float)firstEventYOffset;
- (id)dimmedOccurrence;
- (void)setLazyAddsOccurrenceViews:(BOOL)arg1;
- (BOOL)lazyAddsOccurrenceViews;
- (id)occurrenceViewForEvent:(id)arg1;
- (void)setAllowsOccurrenceSelection:(BOOL)arg1;
- (void)setDimmedOccurrence:(id)arg1;
- (BOOL)dimsNonSelectedItems;
- (void)setDimsNonSelectedItems:(BOOL)arg1;
- (void)selectEvent:(id)arg1;
- (id)selectedEvent;
- (void)rectBecameVisible:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setViewsDimmed:(BOOL)arg1 forEvent:(id)arg2;
- (id)occurrenceViews;
- (float)fixedDayWidth;
- (void)setFixedDayWidth:(float)arg1;
- (float)_dayWidth;
- (BOOL)usesSmallText;
- (void)dayOccurrenceViewClicked:(id)arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)dayOccurrenceViewDragExited:(id)arg1;
- (void)dayOccurrenceViewStartTouch:(id)arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)setUsesSmallText:(BOOL)arg1;
- (void)_localeChanged;
- (float)bottomInset;
- (void)setOccurrences:(id)arg1;
- (void)setStartDate:(id)arg1;
- (id)startDate;

@end
