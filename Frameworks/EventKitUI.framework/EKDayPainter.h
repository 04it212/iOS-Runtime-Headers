/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@interface EKDayPainter : NSObject {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct { 
        int year; 
        BOOL month; 
        BOOL day; 
        BOOL hour; 
        BOOL minute; 
        double second; 
    int _busyLevel;
    } _displayedDay;
    } _frame;
    BOOL _isInMonth;
    BOOL _isInspected;
    BOOL _isToday;
}

@property int busyLevel;
@property(readonly) struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; } displayedDay;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } frame;
@property(readonly) BOOL isInMonth;
@property BOOL isInspected;
@property BOOL isToday;

- (int)busyLevel;
- (id)busyLevelTextColor:(int)arg1;
- (id)dayNumberFont;
- (float)digitHeight;
- (struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })displayedDay;
- (void)drawInspectedHighlight;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)engravedTextColor;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frame;
- (struct CGGradient { }*)gradientForBusyLevel:(int)arg1;
- (float)heatmapFillInset;
- (id)inMonthTextColor;
- (int)inMonthTextStyle;
- (id)initWithDate:(struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1 inMonth:(struct { int x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg2;
- (id)inspectedBackgroundImage;
- (id)inspectedBorderColor;
- (BOOL)isInMonth;
- (BOOL)isInspected;
- (BOOL)isToday;
- (float)oneDigitWidth;
- (id)outOfMonthBackgroundColor;
- (id)outOfMonthTextColor;
- (int)outOfMonthTextStyle;
- (void)setBusyLevel:(int)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setIsInspected:(BOOL)arg1;
- (void)setIsToday:(BOOL)arg1;
- (id)todayBackgroundImage;
- (id)todayTextColor;
- (int)todayTextStyle;
- (float)twoDigitWidth;

@end
