/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@class <CalendarEventEditModelDelegate>, CalendarCalendarEditModel, NSDate, NSMutableArray, NSNumber, NSString;

@interface CalendarEventEditModel : CalendarEvent {
    struct { 
        NSInteger year; 
        BOOL month; 
        BOOL day; 
        BOOL hour; 
        BOOL minute; 
        double second; 
    struct { 
        NSInteger year; 
        BOOL month; 
        BOOL day; 
        BOOL hour; 
        BOOL minute; 
        double second; 
    struct { 
        unsigned int dirty : 1; 
        unsigned int datesDirty : 1; 
        unsigned int calendarDirty : 1; 
        unsigned int alarmsDirty : 1; 
        unsigned int recurrencesDirty : 1; 
        unsigned int partStatusDirty : 1; 
        unsigned int commentDirty : 1; 
        unsigned int titleDirty : 1; 
        unsigned int locationDirty : 1; 
        unsigned int notesDirty : 1; 
        unsigned int availabilityDirty : 1; 
        unsigned int attendeesDirty : 1; 
        unsigned int extra : 20; 
    unsigned int _supportsTriggerIntervals : 1;
    unsigned int _supportsInvitationModifications : 1;
    unsigned int _supportsResponseComments : 1;
    unsigned int _canSetAvailability : 1;
    NSMutableArray *_alarms;
    BOOL _allDay;
    NSMutableArray *_attendees;
    NSInteger _availability;
    CalendarCalendarEditModel *_calendar;
    NSNumber *_calendarId;
    NSString *_comment;
    struct CalDatabase { } *_database;
    <CalendarEventEditModelDelegate> *_delegate;
    NSDate *_endDateAbs;
    } _endDateGr;
    void *_event;
    NSInteger _eventId;
    NSString *_location;
    NSInteger _maxAlarms;
    } _modelFlags;
    NSString *_notes;
    struct CalEventOccurrence { } *_occurrence;
    NSInteger _partStatus;
    NSMutableArray *_recurrences;
    NSDate *_startDateAbs;
    } _startDateGr;
    NSString *_title;
}

@property <CalendarEventEditModelDelegate> *delegate;
@property(getter=isAllDay) BOOL allDay;
@property(readonly) NSInteger calendarId;
@property ? endDateGr;
@property ? startDateGr;

+ (id)_externalChangeUserInfoDict;

- (id)_alarmEditModels;
- (id)_attendeeEditModels;
- (void)_ensureCalendar;
- (id)_recurrenceEditModels;
- (void)_setCalendarInternal:(id)arg1;
- (void)addAlarmEditModel:(id)arg1;
- (void)addRecurrenceEditModel:(id)arg1;
- (NSInteger)alarmCount;
- (id)alarmEditModels;
- (NSInteger)attendeeCount;
- (id)attendeeEditModels;
- (NSInteger)availability;
- (id)calendar;
- (NSInteger)calendarId;
- (void)commit;
- (void)commitAlarmsIntoEvent:(void*)arg1 userInfo:(struct __CFDictionary { }*)arg2;
- (void)commitAttendeesIntoEvent:(void*)arg1 userInfo:(struct __CFDictionary { }*)arg2;
- (void)commitDatesIntoEvent:(void*)arg1 userInfo:(struct __CFDictionary { }*)arg2;
- (struct CalDatabase { }*)database;
- (void)dealloc;
- (id)delegate;
- (struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })endDateGr;
- (struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })endDatePinnedForAllDay;
- (void*)event;
- (id)initWithDatabase:(struct CalDatabase { }*)arg1 delegate:(id)arg2;
- (id)initWithOccurrence:(struct CalEventOccurrence { }*)arg1 delegate:(id)arg2;
- (BOOL)isAllDay;
- (BOOL)isDirty;
- (id)location;
- (id)notes;
- (struct CalEventOccurrence { }*)occurrence;
- (id)occurrenceDate;
- (NSInteger)partStatus:(BOOL*)arg1;
- (NSInteger)partStatus;
- (id)recurrenceEditModels;
- (void)removeAlarmEditModelAtIndex:(NSInteger)arg1;
- (void)removeRecurrenceEditModelAtIndex:(NSInteger)arg1;
- (void)replaceAlarmEditModelAtIndex:(NSInteger)arg1 withAlarmEditModel:(id)arg2;
- (void)replaceRecurrenceEditModelAtIndex:(NSInteger)arg1 withRecurrenceEditModel:(id)arg2;
- (id)responseComment;
- (BOOL)revalidate;
- (void)setAllDay:(BOOL)arg1;
- (void)setAttendeeEditModels:(id)arg1;
- (void)setAvailability:(NSInteger)arg1;
- (void)setCalendar:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEndDateGr:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1;
- (void)setLocation:(id)arg1;
- (void)setNotes:(id)arg1;
- (void)setOccurrence:(struct CalEventOccurrence { }*)arg1;
- (void)setPartStatus:(NSInteger)arg1;
- (void)setResponseComment:(id)arg1;
- (void)setStartDate:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1 endDate:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg2 allDay:(BOOL)arg3;
- (void)setStartDateGr:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1;
- (void)setTitle:(id)arg1;
- (struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })startDateGr;
- (struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })startDatePinnedForAllDay;
- (id)title;

@end
