/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@class NSIndexSet, NSString, UIColor;

@interface EKDayOccurrenceContentView : UIView  {
    NSString *_title;
    NSString *_location;
    UIColor *_color;
    UIColor *_textColor;
    float _visibleHeight;
    NSIndexSet *_titleMetrics;
    NSIndexSet *_locationMetrics;
    struct CGPoint { 
        float x; 
        float y; 
    } _titleEndPoint;
    float _textEndY;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _titleRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _locationRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _fullTextRect;
    BOOL _isBirthday;
    BOOL _usesSmallText;
    BOOL _cancelled;
    BOOL _tentative;
    BOOL _borderless;
    BOOL _dimmed;
    BOOL _dragging;
}

@property(copy) NSString * title;
@property(copy) NSString * location;
@property(retain) UIColor * color;
@property(getter=isBirthday) BOOL birthday;
@property(getter=isCancelled) BOOL cancelled;
@property(getter=isTentative) BOOL tentative;
@property(getter=isBorderless) BOOL borderless;
@property(getter=isDimmed) BOOL dimmed;
@property BOOL dragging;
@property BOOL usesSmallText;


- (BOOL)isCancelled;
- (void)dealloc;
- (void)setDimmed:(BOOL)arg1;
- (BOOL)isDimmed;
- (BOOL)isTentative;
- (id)_locationMetricsForSize:(struct CGSize { float x1; float x2; })arg1;
- (id)_tentativeOutline;
- (id)_locationFont;
- (void)_getTitleMetrics:(id*)arg1 endPoint:(struct CGPoint { float x1; float x2; }*)arg2 forSize:(struct CGSize { float x1; float x2; })arg3;
- (id)_titleFont;
- (void)_invalidateMetrics;
- (BOOL)dragging;
- (BOOL)usesSmallText;
- (id)_textColor;
- (id)initWithContentView:(id)arg1;
- (void)setDragging:(BOOL)arg1;
- (BOOL)isBirthday;
- (void)setBorderless:(BOOL)arg1;
- (void)setUsesSmallText:(BOOL)arg1;
- (void)setTentative:(BOOL)arg1;
- (BOOL)isBorderless;
- (id)location;
- (id)color;
- (void)setCancelled:(BOOL)arg1;
- (void)setColor:(id)arg1;
- (id)title;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)setTitle:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setLocation:(id)arg1;
- (void)setBirthday:(BOOL)arg1;

@end
