/* Generated by RuntimeBrowser on iPhone OS 4.1
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@class CalendarModel;



@interface OccurrenceCacheDataSource : NSObject <OccurrenceCacheDataSourceProtocol>
{
    struct CalDatabase { } *_database;
    struct CalFilter { } *_filter;
    struct __CFArray { } *_cachedDays;
    NSInteger _cachedDayCount;
    struct __CFArray { } *_cachedOccurrences;
    NSInteger _cachedOccurrenceCount;
    struct __CFArray { } *_cachedDayIndexes;
    struct _NSRange { 
        NSUInteger location; 
        NSUInteger length; 
    } _cachedDayRange;
    NSInteger _totalOccurrencesCount;
    CalendarModel *_model;
}


- (void)invalidateCachedDayIndexes;
- (BOOL)supportsInvitations;
- (NSInteger)dayIndexForDay:(NSInteger)arg1;
- (struct __CFArray { }*)_cachedDayIndexes;
- (id)initWithDatabase:(struct CalDatabase { }*)arg1 filter:(struct CalFilter { }*)arg2 model:(id)arg3;
- (void)restartSearchWithTerm:(id)arg1;
- (NSInteger)countOfOccurrencesOnDay:(double)arg1;
- (BOOL)supportsFakeTodaySection;
- (NSInteger)dayCountBeforeDay:(double)arg1;
- (NSInteger)cachedDayCount;
- (NSInteger)totalOccurrencesCount;
- (NSInteger)indexOfFirstOccurrenceForDayIndex:(NSInteger)arg1;
- (NSInteger)indexOfLastOccurrenceForDayIndex:(NSInteger)arg1;
- (void)invalidateCachedOccurrences;
- (void)invalidateCachedDays;
- (void)setCachedDayRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)loadOccurrencesForRange:(struct { NSInteger x1; NSInteger x2; })arg1;
- (BOOL)dayIndexAlreadyCached:(NSInteger)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })cachedDayRange;
- (NSInteger)dateForDayIndex:(NSInteger)arg1;
- (NSInteger)dayIndexOfCachedOccurrenceAtIndex:(NSInteger)arg1;
- (NSInteger)cachedOccurrenceCountOnOrAfterDate:(NSInteger)arg1;
- (NSInteger)indexOfFirstCachedOccurrence;
- (NSInteger)cachedOccurrenceCount;
- (NSInteger)dayIndexOfCachedOccurrenceIndex:(NSInteger)arg1;
- (NSInteger)fixDayIndexToFitInCachedDays:(NSInteger)arg1;
- (struct CalEventOccurrence { }*)cachedOccurrenceAtIndex:(NSInteger)arg1;
- (BOOL)cachedOccurrencesAreBeingGenerated;
- (void)startSearching;
- (void)stopSearching;
- (void)invalidate;
- (void)dealloc;

@end
