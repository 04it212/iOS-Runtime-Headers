/* Generated by RuntimeBrowser on iPhone OS 4.0
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@class NSPredicate, NSConditionLock, NSLock, NSMutableArray, EKEventStore;



@interface CalendarEventLoader : NSObject 
{
    EKEventStore *_store;
    struct CalFilter { } *_filter;
    NSPredicate *_predicate;
    NSMutableArray *_occurrences;
    NSMutableArray *_selectedDateOccurrences;
    NSUInteger _paddingMonthsToLoad;
    BOOL _loadsBlocked;
    BOOL _processingReload;
    NSPredicate *_backgroundPredicate;
    NSMutableArray *_bkgndResults;
    NSLock *_bkgndLock;
    NSConditionLock *_bkgndSignal;
    NSConditionLock *_bkgndCompletion;
    BOOL _bkgndTerminate;
    BOOL _bkgndRunning;
    double _selectedDate;
    struct { 
        NSInteger year; 
        BOOL month; 
        BOOL day; 
        BOOL hour; 
        BOOL minute; 
        double second; 
    } _selectedDateGr;
    struct { 
        NSInteger year; 
        BOOL month; 
        BOOL day; 
        BOOL hour; 
        BOOL minute; 
        double second; 
    } _selectedDateTimeGr;
    double _start;
    double _end;
    struct { 
        NSInteger year; 
        BOOL month; 
        BOOL day; 
        BOOL hour; 
        BOOL minute; 
        double second; 
    } _startGr;
    struct { 
        NSInteger year; 
        BOOL month; 
        BOOL day; 
        BOOL hour; 
        BOOL minute; 
        double second; 
    } _endGr;
}

@property(retain) CalFilter *filter;
@property NSUInteger paddingMonthsToLoad;
@property BOOL loadsBlocked;


- (void)reload:(BOOL)arg1;
- (void)setFilter:(struct CalFilter { }*)arg1;
- (void)dealloc;
- (struct CalFilter { }*)filter;
- (void)timeZoneChanged;
- (id)selectedDateOccurrences:(BOOL)arg1;
- (struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })selectedDate;
- (NSUInteger)paddingMonthsToLoad;
- (void)updatePredicate;
- (void)_eventStoreChanged:(id)arg1;
- (void)_reloadOccurrences;
- (void)_setDisplayedDateRange:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1 end:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg2 loadMethod:(NSInteger)arg3;
- (void)displayedDateRange:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; }*)arg1 end:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; }*)arg2;
- (void)setSelectedDate:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1 loadMethod:(NSInteger)arg2;
- (void)loadEventsIfNeeded:(BOOL)arg1;
- (void)clearOccurrences;
- (void)beginBackgroundLoadForPredicate:(id)arg1;
- (void)_backgroundLoader;
- (void)_backgroundLoadCompleted;
- (id)initWithEventStore:(id)arg1;
- (void)setLoadsBlocked:(BOOL)arg1;
- (BOOL)waitForBackgroundLoad;
- (BOOL)loadsBlocked;
- (id)displayedOccurrences:(BOOL)arg1;
- (id)occurrencesForStartDate:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1 endDate:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg2 waitForLoad:(BOOL)arg3;
- (id)occurrencesForDay:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1 waitForLoad:(BOOL)arg2;
- (id)selectedDateOccurrences:(BOOL)arg1 loadIsComplete:(BOOL*)arg2;
- (void)setPaddingMonthsToLoad:(NSUInteger)arg1;
- (void)terminateBackgroundLoading;

@end
