/* Generated by RuntimeBrowser on iPhone OS 3.1
   Image: /System/Library/Frameworks/Foundation.framework/Foundation
 */



@interface NSCoder : NSObject 
{
}


- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void*)arg2;
- (void)encodeDataObject:(id)arg1;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void*)arg2;
- (id)decodeDataObject;
- (NSInteger)versionForClassName:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(NSUInteger)arg2 at:(const void*)arg3;
- (void)encodeBytes:(const void*)arg1 length:(NSUInteger)arg2;
- (id)decodeObject;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(NSUInteger)arg2 at:(void*)arg3;
- (void*)decodeBytesWithReturnedLength:(NSUInteger*)arg1;
- (BOOL)allowsKeyedCoding;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)encodeInt:(NSInteger)arg1 forKey:(id)arg2;
- (void)encodeInt32:(NSInteger)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInteger:(NSInteger)arg1 forKey:(id)arg2;
- (void)encodeLong:(long)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeBytes:(const char *)arg1 length:(NSUInteger)arg2 forKey:(id)arg3;
- (BOOL)containsValueForKey:(id)arg1;
- (BOOL)decodeBoolForKey:(id)arg1;
- (NSInteger)decodeIntForKey:(id)arg1;
- (NSInteger)decodeInt32ForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (NSInteger)decodeIntegerForKey:(id)arg1;
- (long)decodeLongForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (double)decodeDoubleForKey:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(NSUInteger*)arg2;
- (void)setObjectZone:(struct _NSZone { }*)arg1;
- (struct _NSZone { }*)objectZone;
- (NSUInteger)systemVersion;
- (void)encodePoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })decodePoint;
- (void)encodeSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })decodeSize;
- (void)encodeRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })decodeRect;
- (void)encodePoint:(struct CGPoint { float x1; float x2; })arg1 forKey:(id)arg2;
- (void)encodeSize:(struct CGSize { float x1; float x2; })arg1 forKey:(id)arg2;
- (void)encodeRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forKey:(id)arg2;
- (struct CGPoint { float x1; float x2; })decodePointForKey:(id)arg1;
- (struct CGSize { float x1; float x2; })decodeSizeForKey:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })decodeRectForKey:(id)arg1;
- (void)encodeCGPoint:(struct CGPoint { float x1; float x2; })arg1 forKey:(id)arg2;
- (void)encodeCGSize:(struct CGSize { float x1; float x2; })arg1 forKey:(id)arg2;
- (void)encodeCGRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forKey:(id)arg2;
- (void)encodeCGAffineTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 forKey:(id)arg2;
- (void)encodeUIEdgeInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1 forKey:(id)arg2;
- (struct CGPoint { float x1; float x2; })decodeCGPointForKey:(id)arg1;
- (struct CGSize { float x1; float x2; })decodeCGSizeForKey:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })decodeCGRectForKey:(id)arg1;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })decodeCGAffineTransformForKey:(id)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })decodeUIEdgeInsetsForKey:(id)arg1;
- (unsigned long)decodeMessageFlags;

@end
