/* Generated by RuntimeBrowser on iPhone OS 3.0
   Image: /System/Library/Frameworks/Foundation.framework/Foundation
 */

@class NSURLAuthenticationChallenge, NSMutableArray, NSLock, NSURLProtocol;



@interface _NSCFURLProtocolBridge : NSObject <NSURLProtocolClient>
{
    NSUInteger flags;
    NSURLProtocol *nsProt;
    struct _CFURLProtocol { } *_cfProt;
    struct _CFURLAuthChallenge { } *cfChallenge;
    NSURLAuthenticationChallenge *nsChallenge;
    struct __CFRunLoopSource { } *_rlSrc;
    NSMutableArray *events;
    NSLock *eventMutex;
    NSMutableArray *clientInstructions;
    NSLock *clientMutex;
}

+ (void)barRequest:(struct _CFURLRequest { }*)arg1;
+ (void)permitRequest:(struct _CFURLRequest { }*)arg1;
+ (void)registerWithCFURLProtocol;

- (id)description;
- (void)dealloc;
- (void)finalize;
- (id)initWithCFURLProtocol:(struct _CFURLProtocol { }*)arg1;
- (void)schedule:(struct __CFRunLoop { }*)arg1 mode:(struct __CFString { }*)arg2;
- (void)unschedule:(struct __CFRunLoop { }*)arg1 mode:(struct __CFString { }*)arg2;
- (void)sendInstruction:(NSInteger)arg1;
- (void)dispatchInstruction:(NSInteger)arg1;
- (void)dispatchInstructions;
- (void)start;
- (void)stop;
- (void)halt;
- (void)resume;
- (void)useCredential:(struct _CFURLCredential { }*)arg1 forChallenge:(struct _CFURLAuthChallenge { }*)arg2;
- (void)wasRedirectedToRequest:(id)arg1 redirectResponse:(id)arg2;
- (void)cachedResponseIsValid:(id)arg1;
- (void)didReceiveResponse:(id)arg1;
- (void)didLoadData:(id)arg1 lengthReceived:(long long)arg2;
- (void)didFinishLoading;
- (void)didFailWithError:(id)arg1;
- (void)didReceiveAuthenticationChallenge:(id)arg1;
- (void)processEventQ;
- (void)marshalEvent:(NSInteger)arg1 obj:(id)arg2 obj2:(id)arg3;
- (void)URLProtocol:(id)arg1 wasRedirectedToRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)URLProtocol:(id)arg1 cachedResponseIsValid:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveResponse:(id)arg2 cacheStoragePolicy:(NSUInteger)arg3;
- (void)URLProtocol:(id)arg1 didLoadData:(id)arg2 lengthReceived:(long long)arg3;
- (void)URLProtocol:(id)arg1 didLoadData:(id)arg2;
- (void)URLProtocolDidFinishLoading:(id)arg1;
- (void)URLProtocol:(id)arg1 didFailWithError:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)URLProtocol:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;

@end
