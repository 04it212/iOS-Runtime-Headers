/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/QuickLook.framework/QuickLook
 */

@class UITapGestureRecognizer, QLPreviewController, NSMutableSet, NSCache, NSOperationQueue, NSMutableDictionary;

@interface QLSwipeView : UIScrollView <UIScrollViewDelegate, UIGestureRecognizerDelegate, NSCacheDelegate> {
    QLPreviewController *_previewController;
    UITapGestureRecognizer *_tapRecognizer;
    NSMutableDictionary *_displayBundles;
    NSMutableSet *_visibleDisplayBundles;
    NSMutableSet *_recycledDisplayBundles;
    int _lastLoadedDisplayBundleIndex;
    BOOL _shouldReloadAfterScroll;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _lastRealFrame;
    BOOL _inSwipe;
    BOOL _inSetFrame;
    BOOL _inDrag;
    BOOL _wentOffScreen;
    NSCache *_swipeImages;
    NSMutableDictionary *_swipeImageOperations;
    NSOperationQueue *_swipeImageOperationQueue;
}

+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameForVisibleFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 scrollEnabled:(BOOL)arg2;

- (void)dealloc;
- (void)_clearCache;
- (void)_tapGestureRecognized:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)didRotate;
- (void)willRotate;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (BOOL)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)didReceiveMemoryWarning;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)reloadData;
- (void)quickLookWillZoomIn;
- (BOOL)_isDisplayingDisplayBundleForIndex:(unsigned int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_frameForDisplayBundleAtIndex:(unsigned int)arg1;
- (void)_tileDisplayBundles:(BOOL)arg1 inLowMemory:(BOOL)arg2;
- (void)_preloadDisplayBundlesArround:(int)arg1;
- (void)_replaceDisplayBundle:(id)arg1 withGenericDisplayBundleAndError:(id)arg2;
- (BOOL)displayBundle:(id)arg1 decidePolicyForNavigationType:(int)arg2 request:(id)arg3;
- (id)_copyPreviewConverterForPreviewItem:(id)arg1;
- (void)_configureDisplayBundle:(id)arg1;
- (id)_visibleDisplayBundleAtIndex:(unsigned int)arg1;
- (id)_copyDisplayBundleAtIndex:(unsigned int)arg1 withGenericDisplayBundle:(BOOL)arg2;
- (void)_preloadDisplayBundle:(id)arg1;
- (void)_preloadItemIfNeeded:(int)arg1;
- (void)loadPreloadingData;
- (void)overlayWillAppearAnimated:(BOOL)arg1;
- (void)overlayWillDisappearAnimated:(BOOL)arg1;
- (void)displayBundledInteractedWithOverlay:(id)arg1;
- (void)displayBundle:(id)arg1 didLoadItem:(id)arg2 withError:(id)arg3;
- (id)displayBundle:(id)arg1 willSendRequest:(id)arg2;
- (BOOL)displayBundle:(id)arg1 shouldOpenURL:(id)arg2;
- (void)setPreviewItemIndex:(int)arg1 animated:(BOOL)arg2;
- (id)currentDisplayBundle;
- (void)refreshCurrentPreviewItem;
- (void)quickLookDidZoomIn;
- (void)quickLookWillZoomOut;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 controller:(id)arg2;

@end
