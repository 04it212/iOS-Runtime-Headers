/* Generated by RuntimeBrowser on iPhone OS 3.1
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@class MKMapViewInternal;



@interface MKMapView : UIView <NSCoding>
{
    MKMapViewInternal *_internal;
}

@property(getter=isHeadingEnabled) BOOL headingEnabled;
@property(retain) CLLocation *predictedUserLocation;
@property NSInteger userLocationSource;
@property(retain) CLLocation *fixedUserLocation;
@property BOOL ignoreLocationUpdates;
@property BOOL liveTrackingAutoSelectZoomLevel;
@property(getter=isUserLocationChangeDone,readonly) BOOL userLocationChangeDone;
@property(retain) MKMapViewPositioningChange *positioningChange;
@property(retain) MKUserLocationView *userLocationView;
@property <MKMapViewDelegate> *delegate;
@property NSUInteger mapType;
@property ? region;
@property ? centerCoordinate;
@property(getter=isZoomEnabled) BOOL zoomEnabled;
@property(getter=isScrollEnabled) BOOL scrollEnabled;
@property BOOL showsUserLocation;
@property(getter=isUserLocationVisible,readonly) BOOL userLocationVisible;
@property(readonly) NSArray *annotations;
@property(copy) NSArray *selectedAnnotations;
@property(readonly) CGRect annotationVisibleRect;
@property(readonly) MKUserLocation *userLocation;

+ (void)initialize;
+ (NSUInteger)minZoomLevel;
+ (double)userLocationCacheDuration;
+ (void)setUserLocationCacheDuration:(double)arg1;
+ (void)_handleMemoryWarning:(id)arg1;

- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)_setDrawsGridBackground:(BOOL)arg1;
- (void)_updateBadge;
- (void)setShowsBadge:(BOOL)arg1;
- (BOOL)showsBadge;
- (NSInteger)_viewIndexForSubview:(id)arg1;
- (void)_insertSubview:(id)arg1;
- (void)_goToDefaultLocation;
- (id)visibleView;
- (void)_updateContentBounds;
- (void)_setDefaultLocationTimer:(id)arg1;
- (id)_initAndEnableLoading:(BOOL)arg1 startGMMSession:(BOOL)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initFromIBWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;
- (BOOL)scrollViewShouldScrollToTop:(id)arg1;
- (void)_setAccessoryTimer:(id)arg1;
- (void)_setAnnotationTimer:(id)arg1;
- (void)_setTileExpirationTimer:(id)arg1;
- (void)dealloc;
- (void)_handleMemoryWarning:(id)arg1;
- (void)_setTapAndHoldTimer:(id)arg1;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (BOOL)_isHandlingUserEvent;
- (BOOL)_isTrafficVisible;
- (BOOL)_isTilingEnabled;
- (BOOL)shouldPulsateTraffic;
- (id)_createLevelViewWithScale:(NSInteger)arg1;
- (void)_setScale:(float)arg1 forLevelView:(id)arg2;
- (void)_updateScaleForLevelView:(id)arg1;
- (id*)_levelViewsForMapType:(NSUInteger)arg1;
- (id*)_mapLevelViews;
- (NSInteger)_zoomLevelsForMapType:(NSUInteger)arg1;
- (NSInteger)_minZoomLevelForMapType:(NSUInteger)arg1;
- (NSInteger)_maxZoomLevelForMapType:(NSUInteger)arg1;
- (struct CGPoint { float x1; float x2; })_centerPoint;
- (struct CGPoint { float x1; float x2; })_centerPointOffset;
- (struct { double x1; double x2; })centerCoordinate;
- (void)setCenterCoordinate:(struct { double x1; double x2; })arg1 animated:(BOOL)arg2;
- (void)setCenterCoordinate:(struct { double x1; double x2; })arg1;
- (struct CGPoint { float x1; float x2; })centerLongLat;
- (float)minZoomLevel;
- (float)maxZoomLevel;
- (float)_maxZoomLevelForCoordinate:(struct { double x1; double x2; })arg1;
- (float)_maxZoomLevelForCurrentPosition;
- (float)_scaleForScale:(float)arg1;
- (float)_scaleForScale:(float)arg1 longLat:(struct CGPoint { float x1; float x2; })arg2;
- (float)_scaleForScale:(float)arg1 coordinate:(struct { double x1; double x2; })arg2;
- (float)_scaleForScaleUsingCurrentPosition:(float)arg1;
- (NSInteger)_roundedZoomLevel;
- (id)_mapLevelViewForLevel:(NSInteger)arg1;
- (id)_mapLevelViewForScale:(float)arg1;
- (id)_addLevelViewAtLevel:(NSInteger)arg1 updateScale:(BOOL)arg2;
- (id)_scroller;
- (id)_mapLevelView;
- (struct { double x1; double x2; })longLatSpan;
- (void)_updateTraffic;
- (void)_clearTilesForMapType:(NSUInteger)arg1;
- (void)_clearDistantTilesIfNecessaryForMapType:(NSUInteger)arg1;
- (void)_clearTiles;
- (id)_regionsForRouteSteps;
- (void)_resetRouteLoader;
- (void)updateExpiredTiles;
- (void)_stopTileLoading;
- (void)setMapType:(NSUInteger)arg1;
- (NSUInteger)mapType;
- (void)setShowingTraffic:(BOOL)arg1;
- (BOOL)isShowingTraffic;
- (void)setChecksForTraffic:(BOOL)arg1;
- (BOOL)checksForTraffic;
- (void)setAllowsPulsatingTraffic:(BOOL)arg1;
- (BOOL)allowsPulsatingTraffic;
- (void)_updateScrollingAndGestures;
- (BOOL)_animationTypeIgnoresEvents:(NSInteger)arg1;
- (void)_setAnimationType:(NSInteger)arg1;
- (void)_switchToAnimationType:(NSInteger)arg1;
- (NSInteger)animationType;
- (NSUInteger)eventMode;
- (void)_logViews;
- (void)_updateRouteView;
- (struct CGPoint { float x1; float x2; })_routePositionCenter;
- (void)_updateRoutePositionView;
- (void)_updateRoutePosition;
- (BOOL)_needsToPanRoutePositionView;
- (void)_updateAccessories;
- (NSInteger)trafficStatus;
- (void)_updateTrafficStatus;
- (void)_adjustPositionViewWithPreviousScrollerOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)_setStartEffectsTimer:(id)arg1;
- (void)_scheduleStartEffects;
- (void)_cancelStartEffects;
- (void)_startEffects;
- (void)_stopEffects;
- (void)_updateEffects;
- (struct CGPoint { float x1; float x2; })_scrollViewOffsetForOffset:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })_scrollViewOffsetForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })_scrollViewOffsetForCenterPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })_scrollViewOffsetForCoordinate:(struct { double x1; double x2; })arg1;
- (void)_setScrollViewOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)_scrollToCoordinate:(struct { double x1; double x2; })arg1;
- (void)_updateTilingCenterPoint:(struct CGPoint { float x1; float x2; })arg1 coordinate:(struct { double x1; double x2; })arg2 levelView:(id)arg3;
- (void)_updateTiling:(BOOL)arg1;
- (void)updateTiling;
- (void)_forceTiling;
- (BOOL)effectsEnabled;
- (BOOL)overlayViewEffectsEnabled:(id)arg1;
- (BOOL)overlayViewIsRotated:(id)arg1;
- (void)startEffects;
- (void)stopEffects:(BOOL)arg1;
- (void)stopEffects;
- (void)setSuspended:(BOOL)arg1;
- (void)setLoadingEnabled:(BOOL)arg1;
- (void)_setEventMode:(NSInteger)arg1;
- (void)_clearEventMode:(NSInteger)arg1;
- (void)_cancelAccessories;
- (void)_cancelDoubleTap;
- (void)_cancelAccessoriesAndDoubleTap;
- (void)_showAccessories:(id)arg1;
- (id)_stringWithEventMode:(NSInteger)arg1;
- (BOOL)_isScrolling;
- (BOOL)_wasScrolling;
- (BOOL)_isVisible;
- (BOOL)_allVisibleTilesAreLoaded;
- (void)_didDisplayMapAtCoordinate:(struct { double x1; double x2; })arg1 zoomLevel:(NSUInteger)arg2 size:(struct CGSize { float x1; float x2; })arg3;
- (void)_didLoadOrMoveMap;
- (void)setCallsDelegateForAllRegionChanges:(BOOL)arg1;
- (BOOL)callsDelegateForAllRegionChanges;
- (void)_willChangeRegionAnimated:(BOOL)arg1;
- (void)_didChangeRegionMidstream:(BOOL)arg1;
- (void)_setScrolling:(BOOL)arg1 updateTiling:(BOOL)arg2 animated:(BOOL)arg3;
- (void)_setScrolling:(BOOL)arg1;
- (BOOL)_isScrollingAnimation;
- (BOOL)_animateScrollToOffset:(struct CGPoint { float x1; float x2; })arg1 duration:(double)arg2 type:(NSInteger)arg3;
- (BOOL)_shouldConservePowerAnimationType:(NSInteger)arg1;
- (BOOL)_animateScrollToOffset:(struct CGPoint { float x1; float x2; })arg1 duration:(double)arg2 type:(NSInteger)arg3 context:(id)arg4;
- (id)mapInfo;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)_clearFixedUserLocation;
- (void)_fixUserLocationFromPresentationValue;
- (void)_synchronizeScrollingAnimation:(BOOL)arg1 includePositionView:(BOOL)arg2;
- (void)_freezeScrollingAnimation;
- (void)_removeScrollingAnimation;
- (void)_cancelScrollingAnimation;
- (void)scrollWithOffset:(struct CGPoint { float x1; float x2; })arg1 andAnimationType:(NSInteger)arg2;
- (void)overlayView:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint { float x1; float x2; })arg2;
- (float)pointDistanceFromCoordinate:(struct { double x1; double x2; })arg1 toCoordinate:(struct { double x1; double x2; })arg2;
- (void)_freezeUserLocationView;
- (void)_zoomWillStartAnimated:(BOOL)arg1;
- (void)_zoomDidEnd;
- (double)_panDurationFromPoint:(struct CGPoint { float x1; float x2; })arg1 toPoint:(struct CGPoint { float x1; float x2; })arg2 forRoute:(BOOL)arg3;
- (double)_goToCenterCoordinate:(struct { double x1; double x2; })arg1 zoomLevel:(float)arg2 animationType:(NSInteger)arg3;
- (BOOL)goToCenterCoordinate:(struct { double x1; double x2; })arg1 zoomLevel:(float)arg2 animationType:(NSInteger)arg3;
- (float)_zoomLevelForCenterCoordinate:(struct { double x1; double x2; })arg1 topLeftCoordinate:(struct { double x1; double x2; })arg2 bottomRightCoordinate:(struct { double x1; double x2; })arg3 includeAccessoryPadding:(BOOL)arg4;
- (float)_zoomLevelForRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1 includeAccessoryPadding:(BOOL)arg2;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })regionThatFits:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (BOOL)goToRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1 animationType:(NSInteger)arg2;
- (BOOL)goToCenterCoordinate:(struct { double x1; double x2; })arg1 longLatSpan:(struct CGSize { float x1; float x2; })arg2 animationType:(NSInteger)arg3;
- (void)_resumeSearchResultProcessingAndPinDropAnimations;
- (void)_suspendSearchResultsProcessingAndPinDropAnimations;
- (NSInteger)_prepareZoomCoordinatesFromEvent:(struct __GSEvent { }*)arg1 lockOnCenter:(BOOL)arg2;
- (void)pauseUserLocationUpdates;
- (void)resumeUserLocationUpdates;
- (BOOL)_isUserInitiated;
- (void)_setupDestinationRouteViewAtLevel:(NSInteger)arg1;
- (void)willStartGesturesInView:(id)arg1 forEvent:(struct __GSEvent { }*)arg2;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)gestureStarted:(struct __GSEvent { }*)arg1;
- (void)gestureChanged:(struct __GSEvent { }*)arg1;
- (float)_zoomScale;
- (void)zoomToScale:(float)arg1;
- (void)_notifyWillPanRoutePositionWithDuration:(double)arg1;
- (void)_animateRoutePositionViewPan;
- (void)didFinishGesturesInView:(id)arg1 forEvent:(struct __GSEvent { }*)arg2;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void*)arg3;
- (void)_selectUserLocationTypeWithDeltaZoomScale:(float)arg1;
- (void)_prepareForZoomAnimationToScale:(float)arg1 fromEvent:(struct __GSEvent { }*)arg2;
- (void)_zoomToNextLevel:(BOOL)arg1 event:(struct __GSEvent { }*)arg2;
- (BOOL)_shouldHandleTouchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)_firstTouchBegan:(id)arg1 withEvent:(id)arg2;
- (void)_lastTouchEnded:(id)arg1 withEvent:(id)arg2;
- (BOOL)overlayViewDidScrollOrZoom:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)_userScrollingEnded;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)_reachabilityChanged:(id)arg1;
- (void)levelView:(id)arg1 didAddTile:(id)arg2;
- (void)levelView:(id)arg1 willRemoveTile:(id)arg2;
- (void)levelViewDidLayoutTiles:(id)arg1;
- (void)overlayView:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)overlayView:(id)arg1 didSelectSearchResult:(id)arg2 userInitiated:(BOOL)arg3;
- (id)overlayView:(id)arg1 didMoveSearchResult:(id)arg2 toPoint:(struct CGPoint { float x1; float x2; })arg3;
- (void)_willShowRoute;
- (void)_didShowRoute;
- (void)_willHideRoute;
- (void)_didHideRoute;
- (void)_setShowingRoute:(BOOL)arg1 animate:(BOOL)arg2;
- (void)setShowingRoute:(BOOL)arg1 animate:(BOOL)arg2 includingPins:(BOOL)arg3;
- (void)updateBubblePinInVisibleRect;
- (void)overlayViewWillDropPins:(id)arg1;
- (void)overlayViewDidDropPins:(id)arg1;
- (void)_showAddedAnnotationsAndRouteAnimated:(BOOL)arg1;
- (void)setSearchMode:(NSInteger)arg1;
- (void)_showAddedAnnotationsAnimated:(BOOL)arg1;
- (void)dropPinsForSearchResults:(id)arg1 selectedSearchResult:(id)arg2 animate:(BOOL)arg3;
- (void)dropCustomPinForSearchResult:(id)arg1 animate:(BOOL)arg2;
- (struct CGPoint { float x1; float x2; })pinDroppingLongLat;
- (void)goToBookmark:(id)arg1;
- (NSUInteger)_visibleSearchResultsCount:(id)arg1 forZoomLevel:(NSInteger)arg2;
- (void)goToSearchResults:(id)arg1 centerLongLat:(struct CGPoint { float x1; float x2; })arg2 longLatSpan:(struct CGSize { float x1; float x2; })arg3;
- (void)dropPinsForSearchResults:(id)arg1 centerLongLat:(struct CGPoint { float x1; float x2; })arg2 longLatSpan:(struct CGSize { float x1; float x2; })arg3 selectedSearchResult:(id)arg4 animate:(BOOL)arg5;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })mapLevelViewVisibleRect:(id)arg1;
- (void)levelView:(id)arg1 didLoadTile:(id)arg2;
- (id)overlayView;
- (id)accessoryView;
- (void)setAccessoryView:(id)arg1;
- (void)mapLevelViewDidStartLoading:(id)arg1;
- (void)mapLevelViewDidFinishLoading:(id)arg1;
- (void)mapLevelViewDidFailLoading:(id)arg1 withError:(id)arg2;
- (void)mapLevelViewDidStartLoadingTraffic:(id)arg1;
- (void)mapLevelViewDidFinishLoadingTraffic:(id)arg1;
- (void)mapLevelViewDidFailLoadingTraffic:(id)arg1 withError:(id)arg2;
- (void)routeLoaderDidStartLoading:(id)arg1;
- (void)routeLoaderDidStopLoading:(id)arg1;
- (void)mapLevelView:(id)arg1 didUpdateTrafficStatus:(NSInteger)arg2;
- (void)dropPinsForRouteFromSearchResult:(id)arg1 toSearchResult:(id)arg2 animate:(BOOL)arg3;
- (BOOL)pansAndZoomsToRouteStep;
- (void)setPansAndZoomsToRouteStep:(BOOL)arg1;
- (void)goToRouteStepAnimated:(BOOL)arg1;
- (void)centerSelectedPinInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)applicationSuspended:(id)arg1;
- (void)applicationResumed:(id)arg1;
- (void)overlayViewWillAnimateBubble:(id)arg1;
- (void)overlayViewDidAnimateBubble:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleRectInView:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })annotationVisibleRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })overlayViewVisibleRect:(id)arg1;
- (struct CGPoint { float x1; float x2; })overlayViewCenterLongLat:(id)arg1;
- (struct { double x1; double x2; })overlayViewLongLatSpan:(id)arg1;
- (struct CGPoint { float x1; float x2; })visiblePointForPoint:(struct CGPoint { float x1; float x2; })arg1 inOverlayView:(id)arg2;
- (struct CGPoint { float x1; float x2; })pointInOverlayView:(id)arg1 forVisiblePoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)_updateCenteredAttributesWithCoordinate:(struct { double x1; double x2; })arg1;
- (void)_sizeWillChange;
- (void)_sizeDidChangeWithCenterCoordinate:(struct { double x1; double x2; })arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })centeringRect;
- (void)setCenteringRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })region;
- (void)setRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1 animated:(BOOL)arg2;
- (void)setRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGPoint { float x1; float x2; })convertCoordinate:(struct { double x1; double x2; })arg1 toPointToView:(id)arg2;
- (struct { double x1; double x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toCoordinateFromView:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1 toRectToView:(id)arg2;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toRegionFromView:(id)arg2;
- (id)annotations;
- (id)selectedAnnotations;
- (void)setSelectedAnnotations:(id)arg1;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)deselectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)addAnnotation:(id)arg1;
- (void)addAnnotations:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)removeAnnotations:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;
- (id)viewForAnnotation:(id)arg1;
- (id)overlayView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)overlayView:(id)arg1 didAddAnnotationViews:(id)arg2;
- (void)setScrollEnabled:(BOOL)arg1;
- (BOOL)isScrollEnabled;
- (void)setZoomEnabled:(BOOL)arg1;
- (BOOL)isZoomEnabled;
- (BOOL)showsUserLocation;
- (void)setShowsUserLocation:(BOOL)arg1;
- (BOOL)isLiveTrackingEnabled;
- (void)setLiveTrackingEnabled:(BOOL)arg1;
- (void)setLiveTrackingEnabled:(BOOL)arg1 shouldZoom:(BOOL)arg2;
- (void)disableLiveTracking;
- (BOOL)liveTrackingAutoSelectZoomLevel;
- (void)setLiveTrackingAutoSelectZoomLevel:(BOOL)arg1;
- (BOOL)hasUserSpecifiedZoomLevel;
- (void)setHasUserSpecifiedZoomLevel:(BOOL)arg1;
- (id)positioningChange;
- (void)setPositioningChange:(id)arg1;
- (void)enableLocationConsole;
- (id)descriptionForLocation:(id)arg1 sourceInfo:(id)arg2 compact:(BOOL)arg3;
- (void)_updateLocationConsole;
- (void)_userLocationViewDidAppear:(id)arg1;
- (void)_userLocationViewWillDisappear:(id)arg1;
- (void)_ensureLiveTrackingResourcesInitialized;
- (BOOL)_isUserLocationInView:(BOOL)arg1;
- (BOOL)_isLocationCoordinatesInView:(id)arg1;
- (BOOL)_isUserLocationCoordinateInView;
- (BOOL)isBoundedByUserLocation;
- (BOOL)isUserLocationBounded;
- (BOOL)isUserLocationVisible;
- (BOOL)isUserLocationViewCentered;
- (BOOL)isUserPresentationVisible;
- (BOOL)isRunningPositioningChange;
- (BOOL)hasUserLocation;
- (BOOL)isTrackingUserLocation;
- (BOOL)isCachedUserLocation;
- (id)userLocation;
- (id)predictedUserLocation;
- (void)setPredictedUserLocation:(id)arg1;
- (NSInteger)userLocationSource;
- (void)setUserLocationSource:(NSInteger)arg1;
- (struct CGPoint { float x1; float x2; })userPosition;
- (id)fixedUserLocation;
- (void)setFixedUserLocation:(id)arg1;
- (void)_resetPositioningChange;
- (void)resetUserLocation;
- (BOOL)isUserLocationStale;
- (float)_zoomLevelForLocation:(id)arg1 previousLocation:(id)arg2;
- (BOOL)_shouldZoomOnLiveTracking;
- (void)_goToUserLocation:(BOOL)arg1 shouldZoom:(BOOL)arg2;
- (void)_scrollToUserLocation;
- (void)goToUserLocation;
- (void)removeUserLocation;
- (void)_scheduleScrollToReCenterUser;
- (void)_cancelScrollToReCenterUser;
- (void)_runPositioningChangeIfNeeded;
- (void)_runPositioningChangeIfNeeded:(id)arg1;
- (void)_scheduleRunPositioningChange:(id)arg1 delay:(double)arg2;
- (void)_scheduleRunPositioningChange;
- (void)_cancelRunPositioningChange;
- (BOOL)isScrollToUserCenterPending;
- (void)_scheduleScrollToReCenterUserIfNeeded;
- (void)_setScrollToReCenterUserTimer:(id)arg1;
- (void)_setPositioningChangeTimer:(id)arg1;
- (BOOL)_isUserLocationNearPoint:(struct CGPoint { float x1; float x2; })arg1 hitSize:(float)arg2;
- (BOOL)_isUserLocationNearEventPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)_goToCurrentLocationOnTransitionEnd;
- (void)userLocationViewAccuracyDidUpdate:(id)arg1;
- (void)userLocationViewDidQuiesce:(id)arg1;
- (float)_zoomLevelForUserLocation:(id)arg1 distanceHysteresis:(BOOL)arg2 positionViewHysteresis:(BOOL)arg3;
- (void)_updatePositioningChangeMetadata:(id)arg1;
- (BOOL)_shouldChangeZoomLevel:(float*)arg1 withChange:(id)arg2;
- (BOOL)_isHovering;
- (BOOL)_isHoverScheduled;
- (BOOL)_isOrWillHover;
- (void)_stopHover;
- (BOOL)_hasHovered;
- (id)_positioningChange:(BOOL)arg1;
- (id)_positioningChangeWithLocation:(id)arg1 source:(NSInteger)arg2 hasFocus:(BOOL)arg3 isUpdated:(BOOL)arg4;
- (void)_startPositioningChange:(id)arg1;
- (BOOL)isUserLocationChangeDone;
- (BOOL)overlayViewIsUserLocationChangeDone:(id)arg1;
- (BOOL)_isReadyToRunPositioningChange;
- (BOOL)_haveNewPendingLocation;
- (BOOL)ignoreLocationUpdates;
- (void)setIgnoreLocationUpdates:(BOOL)arg1;
- (void)_pauseUserLocationUpdates;
- (void)_resumeUserLocationUpdates:(BOOL)arg1;
- (void)_startHoverExpirationTimerWithDuration:(double)arg1 change:(id)arg2;
- (void)_stopHoverWithChange:(id)arg1;
- (void)_setHoverExpirationTimer:(id)arg1;
- (id)userLocationView;
- (void)onMapAddView:(id)arg1 change:(id)arg2;
- (void)_runPositioningChange;
- (void)_updatePositioningChangeMetrics:(id)arg1;
- (BOOL)_deviceIsPluggedIn;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerDidReset:(id)arg1;
- (void)startUpdatingUserLocation;
- (void)stopUpdatingUserLocation;
- (BOOL)canRotateForHeading;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentBounds;
- (BOOL)isHeadingEnabled;
- (void)_updateHeadingEnabled;
- (void)setHeadingEnabled:(BOOL)arg1;
- (BOOL)isHeadingSupported;
- (void)setHeadingSupported:(BOOL)arg1;
- (BOOL)shouldRotateForHeading;
- (void)setShouldRotateForHeading:(BOOL)arg1;
- (void)pauseUserHeadingUpdates;
- (void)resumeUserHeadingUpdates;
- (void)_setContentAnchorPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)_resetMapAnchorPoint:(BOOL)arg1;
- (struct CGPoint { float x1; float x2; })_anchorWithContentPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })userLocationAnchorPoint;
- (struct CGPoint { float x1; float x2; })visualAnchorPoint;
- (void)_updateMapAnchorPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)_updateMapAnchorCoordinate:(struct { double x1; double x2; })arg1;
- (void)_updateMapAnchorPoint;
- (BOOL)isHeadingTrackingEnabled;
- (void)setHeadingTrackingEnabled:(BOOL)arg1;
- (void)disableHeadingTracking:(BOOL)arg1;
- (void)disableMapRotation:(BOOL)arg1;
- (void)enableMapRotationIfNeeded;
- (void)_startTrackingHeading;
- (void)_stopTrackingHeading;
- (BOOL)_updateRotationSupported;
- (void)_finalizeChange:(id)arg1 rotation:(float)arg2 layer:(id)arg3 type:(NSInteger)arg4;
- (void)_applyHeadingChange:(id)arg1 layer:(id)arg2 annotationViews:(id)arg3 cc:(BOOL)arg4 delegate:(BOOL)arg5 rotationType:(NSInteger)arg6;
- (void)_stopRotationLayer:(id)arg1 annotationViews:(id)arg2;
- (void)_updateRotationType:(NSInteger)arg1 change:(id)arg2;
- (void)_resetOverlayViewPerspective;
- (void)_updateOverlayViewPerspective:(BOOL)arg1;
- (void)_updateHeading:(id)arg1 rotationType:(NSInteger)arg2 animated:(BOOL)arg3;
- (void)locationManagerUpdatedHeading:(id)arg1;
- (void)locationManagerFailedToUpdateHeading:(id)arg1 withError:(id)arg2;

@end
