/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@class GMMMapInfo, GMMRequester, MKAddressBookAddress, MKCache, MKDirectionsResponse, MKDirectionsRouteInfo, MKRoute, MKRouteStep, MKSearchResult, NSArray, NSDictionary, NSMutableArray, NSString, NSTimeZone;

@interface MKDirectionsManager : NSObject <PBRequesterDelegate> {
    BOOL _appendingNewTransitResponses;
    int _defaultMode;
    BOOL _enableRouteCache;
    MKAddressBookAddress *_endAddress;
    NSString *_endAddressString;
    MKSearchResult *_endSearchResult;
    BOOL _isDisplayed;
    BOOL _isLoadingTransitOnly;
    BOOL _isUpdatingCurrentLocation;
    GMMMapInfo *_mapInfo;
    int _mode;
    BOOL _needsSave;
    NSMutableArray *_observers;
    MKDirectionsResponse *_previousTransitResponse;
    GMMRequester *_requester;
    MKDirectionsRouteInfo *_routeInfo;
    MKCache *_routeInfoCache;
    MKAddressBookAddress *_startAddress;
    NSString *_startAddressString;
    MKSearchResult *_startSearchResult;
    int _transitResultPageOffset;
}

@property(readonly) NSTimeZone * arrivalTimeZone;
@property(readonly) unsigned int availableModes;
@property int defaultMode;
@property(readonly) NSTimeZone * departureTimeZone;
@property(readonly) NSDictionary * dictionaryRepresentation;
@property BOOL enableRouteCache;
@property(retain) MKAddressBookAddress * endAddress;
@property(retain) NSString * endAddressString;
@property(retain) MKSearchResult * endSearchResult;
@property(readonly) BOOL hasEnd;
@property(readonly) BOOL hasReceivedResponse;
@property(readonly) BOOL hasStart;
@property(readonly) BOOL isActive;
@property BOOL isDisplayed;
@property(readonly) BOOL isLoading;
@property(readonly) BOOL isTransitEnabled;
@property(readonly) BOOL isUpdatingCurrentLocation;
@property(retain) GMMMapInfo * mapInfo;
@property int mode;
@property(readonly) BOOL needsSave;
@property(readonly) MKRouteStep * previousStep;
@property(readonly) unsigned int previousStepIndex;
@property(readonly) unsigned int receivedResponseCount;
@property(readonly) NSArray * receivedResponses;
@property(retain) GMMRequester * requester;
@property(retain) MKRoute * route;
@property(retain) MKSearchResult * routeEndSearchResult;
@property(retain) MKDirectionsRouteInfo * routeInfo;
@property(retain) MKSearchResult * routeStartSearchResult;
@property(readonly) NSArray * routes;
@property(retain) MKAddressBookAddress * startAddress;
@property(retain) NSString * startAddressString;
@property(readonly) BOOL startAndEndAreEqual;
@property(retain) MKSearchResult * startSearchResult;
@property(retain) MKRouteStep * step;
@property unsigned int stepIndex;
@property(readonly) NSArray * steps;

+ (int)_GMMModeForMode:(int)arg1;
+ (int)_modeForGMMMode:(int)arg1;
+ (unsigned int)_responseIndexForMode:(int)arg1;
+ (id)sharedDirectionsManager;

- (void)_createIconsForResponse:(id)arg1 cache:(BOOL)arg2;
- (id)_createRouteSearchResultWithLocation:(id)arg1 isStart:(BOOL)arg2;
- (id)_endLocation;
- (void)_loadEnded;
- (void)_loadResponseFromDictionaryRepresentation:(id)arg1;
- (void)_reachabilityChanged:(id)arg1;
- (void)_reportErrorCode:(int)arg1;
- (id)_requestWithMode:(int)arg1;
- (void)_resetResponseForMode:(int)arg1;
- (void)_resetResponses;
- (id)_response;
- (id)_responseForIndex:(unsigned int)arg1;
- (id)_responseForMode:(int)arg1;
- (BOOL)_restoreRouteFromCacheForMode:(int)arg1;
- (void)_restoreSearchResults:(id)arg1;
- (BOOL)_routeAvailableForMode:(int)arg1;
- (void)_saveRouteToCache;
- (void)_setResponses:(id)arg1;
- (void)_setResponsesUpdated;
- (void)_setRouteUnavailableForMode:(int)arg1;
- (void)_setUpdatingCurrentLocation:(BOOL)arg1;
- (void)_startLoad:(BOOL)arg1;
- (id)_startLocation;
- (void)_startTransitLoadWithRequest:(id)arg1;
- (void)_updateStartAndEndSearchResults;
- (void)addObserver:(id)arg1;
- (id)arrivalTimeZone;
- (unsigned int)availableModes;
- (void)cancelLoad;
- (void)clearEnd;
- (void)clearRouteCache;
- (void)clearRouteCacheForSearchResult:(id)arg1;
- (void)clearStart;
- (void)dealloc;
- (int)defaultMode;
- (id)departureTimeZone;
- (id)dictionaryRepresentation;
- (BOOL)enableRouteCache;
- (id)endAddress;
- (id)endAddressString;
- (id)endSearchResult;
- (id)firstRouteForTransitResponse;
- (BOOL)hasEnd;
- (BOOL)hasReceivedResponse;
- (BOOL)hasStart;
- (id)init;
- (BOOL)isActive;
- (BOOL)isDisplayed;
- (BOOL)isLoading;
- (BOOL)isTransitEnabled;
- (BOOL)isUpdatingCurrentLocation;
- (void)loadFromDictionaryRepresentation:(id)arg1 restoreSearchResults:(id)arg2;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)logRequestForMode:(int)arg1;
- (id)mapInfo;
- (int)mode;
- (BOOL)needsSave;
- (id)previousStep;
- (unsigned int)previousStepIndex;
- (unsigned int)receivedResponseCount;
- (id)receivedResponses;
- (void)removeObserver:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (id)requester;
- (void)requesterDidCancel:(id)arg1;
- (void)requesterDidFinish:(id)arg1;
- (void)reset;
- (id)route;
- (id)routeEndSearchResult;
- (id)routeInfo;
- (id)routeStartSearchResult;
- (id)routes;
- (id)searchResultMatchingSearchResult:(id)arg1;
- (void)setDefaultMode:(int)arg1;
- (void)setEnableRouteCache:(BOOL)arg1;
- (void)setEndAddress:(id)arg1;
- (void)setEndAddressString:(id)arg1;
- (void)setEndSearchResult:(id)arg1;
- (void)setIsDisplayed:(BOOL)arg1;
- (void)setMapInfo:(id)arg1;
- (void)setMode:(int)arg1 shouldLoad:(BOOL)arg2;
- (void)setMode:(int)arg1;
- (void)setRequester:(id)arg1;
- (void)setRoute:(id)arg1;
- (void)setRouteEndSearchResult:(id)arg1;
- (void)setRouteInfo:(id)arg1;
- (void)setRouteStartSearchResult:(id)arg1;
- (void)setStartAddress:(id)arg1;
- (void)setStartAddressString:(id)arg1;
- (void)setStartSearchResult:(id)arg1;
- (void)setStep:(id)arg1;
- (void)setStepIndex:(unsigned int)arg1;
- (void)setUserEndSearchResult:(id)arg1;
- (void)setUserStartSearchResult:(id)arg1;
- (id)startAddress;
- (id)startAddressString;
- (BOOL)startAndEndAreEqual;
- (void)startLoad;
- (id)startSearchResult;
- (void)startTransitLoadForNextResultPage;
- (void)startTransitLoadWithDate:(id)arg1 isDeparture:(BOOL)arg2;
- (id)step;
- (void)stepBack;
- (void)stepForward;
- (unsigned int)stepIndex;
- (id)steps;
- (void)swapStartAndEnd;
- (id)transitAgencyForRouteStep:(id)arg1;
- (id)transitRequestDate;
- (BOOL)transitRequestDateIsDeparture;
- (void)useStartAndEndSearchResultsFromRoute;

@end
