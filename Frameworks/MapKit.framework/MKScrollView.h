/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@class MKUserLocationView, CALayer, NSArray;

@interface MKScrollView : UIScrollView {
    struct { 
        unsigned int shouldHandleTouchesMoved : 1; 
        unsigned int touchesBegan : 1; 
        unsigned int touchesCancelled : 1; 
        unsigned int touchesEnded : 1; 
    BOOL _adjustContentOffsetDisabled;
    CALayer *_boundedLayer;
    NSArray *_boundsHitDetectionLayers;
    } _delegateImplements;
    BOOL _displayingHitDetectionLayer;
    BOOL _enableBoundsHitDetection;
    unsigned int _gestureCount;
    double _lastGestureEndedInterval;
    id _mk_delegate;
    MKUserLocationView *_userLocationView;
}

@property BOOL enableBoundsHitDetection;
@property(readonly) unsigned int gestureCount;
@property(readonly) double lastGestureEndedInterval;
@property(retain) MKUserLocationView * userLocationView;

- (id)_hitTestForContentView:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)_setContentOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)_updateBoundsHitDetection;
- (id)boundsHitDetectionLayers;
- (void)dealloc;
- (void)didMoveToWindow;
- (BOOL)enableBoundsHitDetection;
- (unsigned int)gestureCount;
- (void)hideBoundsHitDetectionLayers;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (double)lastGestureEndedInterval;
- (void)layoutSubviews;
- (void)setContentOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)setContentSize:(struct CGSize { float x1; float x2; })arg1 adjustOffset:(BOOL)arg2;
- (void)setDelegate:(id)arg1;
- (void)setEnableBoundsHitDetection:(BOOL)arg1;
- (void)setSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setUserLocationView:(id)arg1;
- (void)stopSmoothScroll;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)userLocationAccuracyDidUpdate:(id)arg1;
- (id)userLocationView;
- (void)userLocationWillUpdate:(id)arg1;

@end
