/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@class NSMutableDictionary, MKRoute, MKRouteGroup, <MKRouteManagerDelegate>, UIImageView, MKRouteStep, NSMutableSet, MKShinyRouteOverlayView, <MKOverlay>, MKRouteLoader;

@interface MKRouteManager : NSObject  {
    int _searchMode;
    <MKRouteManagerDelegate> *_delegate;
    MKRouteLoader *_routeLoader;
    UIImageView *_routePositionView;
    <MKOverlay> *_routeViewBModel;
    MKShinyRouteOverlayView *_routeViewB;
    NSMutableSet *_stepsToInvalidate;
    NSMutableDictionary *_transitAnnotationViews;
    BOOL _isShowingTransitAnnotationViews;
    NSMutableDictionary *_alternateRouteAnnotationViews;
    BOOL _isShowingAlternateRouteAnnotationViews;
    BOOL _isDroppingRoutePins;
    struct { 
        double latitude; 
        double longitude; 
    } _routePositionViewCoordinate;
    BOOL _tapRouteToSelectEnabled;
    BOOL _routesWereDistinguishable;
    BOOL _isAnimating;
    float _futureScale;
    struct { 
        double x; 
        double y; 
    } _futureCenterPoint;
    double _futureDuration;
}

@property int searchMode;
@property <MKRouteManagerDelegate> * delegate;
@property(retain) MKRouteLoader * routeLoader;
@property(retain) UIImageView * routePositionView;
@property(retain) <MKOverlay> * routeViewBModel;
@property(retain) MKShinyRouteOverlayView * routeViewB;
@property(retain) NSMutableSet * stepsToInvalidate;
@property(retain) NSMutableDictionary * transitAnnotationViews;
@property BOOL isShowingTransitAnnotationViews;
@property(retain) NSMutableDictionary * alternateRouteAnnotationViews;
@property BOOL isShowingAlternateRouteAnnotationViews;
@property BOOL isDroppingRoutePins;
@property struct { double x1; double x2; } routePositionViewCoordinate;
@property(readonly) MKRouteGroup * routeGroup;
@property(readonly) MKRouteGroup * displayedRouteGroup;
@property(readonly) MKRoute * selectedRoute;
@property(readonly) unsigned int selectedRouteIndex;
@property(readonly) MKRouteStep * step;
@property(readonly) unsigned int stepIndex;
@property(readonly) MKRouteStep * previousStep;
@property(readonly) unsigned int previousStepIndex;
@property(readonly) BOOL routeStartStepIsActive;
@property BOOL needToShowRoute;
@property BOOL showingRoute;
@property(readonly) BOOL pansAndZoomsToRouteOverview;
@property(retain) MKShinyRouteOverlayView * routeView;

+ (id)sharedManager;
+ (void)reorientIfOffscreenAlternateRouteAnnotationView:(id)arg1 forMapView:(id)arg2;
+ (void)updateLocationAndOrientationOfAlternateRouteAnnotationViews:(id)arg1;

- (void)setDelegate:(id)arg1;
- (id)step;
- (id)delegate;
- (void)setRoutePositionViewCoordinate:(struct { double x1; double x2; })arg1;
- (struct { double x1; double x2; })routePositionViewCoordinate;
- (void)setIsShowingAlternateRouteAnnotationViews:(BOOL)arg1;
- (void)setIsShowingTransitAnnotationViews:(BOOL)arg1;
- (BOOL)isShowingTransitAnnotationViews;
- (void)setSearchMode:(int)arg1;
- (int)searchMode;
- (void)goToRouteStepForMapView:(id)arg1 animated:(BOOL)arg2;
- (void)_setupRoutePositionView;
- (id)routeGroup;
- (void)_resetRouteLoaderForMapView:(id)arg1;
- (void)_handleTapToSwitchRoutes:(id)arg1;
- (void)setAlternateRouteAnnotationViews:(id)arg1;
- (void)setTransitAnnotationViews:(id)arg1;
- (void)_cleanupAfterRVBAnimationForMapView:(id)arg1;
- (void)setRouteViewB:(id)arg1;
- (void)setRouteViewBModel:(id)arg1;
- (id)routeViewBModel;
- (id)routeViewB;
- (void)deferred_animateRoutePositionViewPan:(id)arg1;
- (void)_didHideRouteMapView:(id)arg1;
- (void)_setTransitAnnotationViewAlphas:(float)arg1;
- (id)routeCorrectedLocationForLocation:(id)arg1 routeStep:(id*)arg2;
- (void)setNeedToShowRoute:(BOOL)arg1;
- (void)setShowingRoute:(BOOL)arg1;
- (void)setRouteView:(id)arg1;
- (void)_setShowingAlternateRouteAnnotationViews:(BOOL)arg1 forAnnotationContainerView:(id)arg2;
- (void)_setShowingTransitAnnotationViews:(BOOL)arg1 forAnnotationContainerView:(id)arg2;
- (void)_animateRoutePositionViewPanMapView:(id)arg1;
- (void)_saveStepToInvalidate:(int)arg1;
- (BOOL)pansAndZoomsToRouteOverview;
- (BOOL)routeStartStepIsActive;
- (id)_acceptableOrientationsForRouteAnnotationView:(id)arg1 fromOrientations:(id)arg2 withStaticRouteAnnotationView:(id)arg3 inOrientation:(id)arg4;
- (id)_acceptableOrientationsForRouteAnnotationView:(id)arg1 withAnnotationViewsToAvoid:(id)arg2;
- (id)_acceptableOrientationsForRouteAnnotationView:(id)arg1 withAnnotationViewToAvoid:(id)arg2;
- (float)_areaOverlapOfRouteAnnotationView:(id)arg1 withAnnotationViewToAvoid:(id)arg2 inOrientation:(int)arg3;
- (id)titleForAllRoutes;
- (void)_minimizeOverlapOfRouteAnnotationViewsInMapView:(id)arg1;
- (id)titleForRoute:(id)arg1;
- (void)setStepsToInvalidate:(id)arg1;
- (id)stepsToInvalidate;
- (struct { int x1; struct { double x_2_1_1; double x_2_1_2; } x2; })_zoomRegionForStep:(id)arg1 inRoute:(id)arg2 inMapView:(id)arg3;
- (void)setRouteLoader:(id)arg1;
- (id)routeLoader;
- (void)setSelectedRouteIndex:(unsigned int)arg1 forMapView:(id)arg2;
- (id)selectedRoute;
- (id)displayedRouteGroup;
- (void)setRoutePositionView:(id)arg1;
- (id)_routePositionViewImage;
- (unsigned int)selectedRouteIndex;
- (id)previousStep;
- (void)_willRemoveAnnotationView:(id)arg1;
- (void)setIsDroppingRoutePins:(BOOL)arg1;
- (BOOL)isShowingAlternateRouteAnnotationViews;
- (BOOL)isDroppingRoutePins;
- (id)transitAnnotationViews;
- (id)alternateRouteAnnotationViews;
- (id)_viewForAnnotation:(id)arg1;
- (void)_showAnnotationView:(id)arg1;
- (void)_hideAnnotationView:(id)arg1;
- (void)updateAlternateRouteAnnotationViewsForMapView:(id)arg1;
- (void)_setMapView:(id)arg1 showingRoute:(BOOL)arg2 animate:(BOOL)arg3;
- (BOOL)_animateRoutePositionViewPanMapView:(id)arg1 centerPoint:(struct { double x1; double x2; })arg2 scale:(float)arg3 duration:(double)arg4 animation:(int)arg5;
- (void)_synchronizeScrollingAnimation:(BOOL)arg1;
- (unsigned int)previousStepIndex;
- (unsigned int)stepIndex;
- (void)_invalidateRouteStepsForMapView:(id)arg1;
- (struct CGPoint { float x1; float x2; })_routePositionCenterForMapView:(id)arg1;
- (void)_updateRoutePosition;
- (id)routePositionView;
- (BOOL)needToShowRoute;
- (BOOL)showingRoute;
- (void)_animateRouteForMapView:(id)arg1 destination:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg2 duration:(double)arg3 originalScrollViewZoomScale:(float)arg4 zoomScale:(float)arg5;
- (void)_cancelAnimationsForMapView:(id)arg1;
- (void)_updateRoutePositionViewForMapView:(id)arg1;
- (void)animateRoutePositionViewForMapView:(id)arg1;
- (BOOL)_needsToPanRoutePositionView;
- (id)routeView;
- (void)gestureRecognizer:(id)arg1 tappedAnnotationView:(id)arg2;
- (void)mapView:(id)arg1 resetDisplay:(BOOL)arg2;
- (void)_cleanup;
- (id)init;

@end
