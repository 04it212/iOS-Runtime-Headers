/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@class UIRotationGestureRecognizer, MKTiltGestureRecognizer, <MKWorldGestureControllerDelegate>, _UIDynamicValueAnimation;

@interface MKWorldGestureController : MKMapGestureController  {
    <MKWorldGestureControllerDelegate> *_worldDelegate;
    UIRotationGestureRecognizer *_rotationGestureRecognizer;
    _UIDynamicValueAnimation *_rotationDecelerationAnimation;
    MKTiltGestureRecognizer *_tiltGestureRecognizer;
    _UIDynamicValueAnimation *_tiltDecelerationAnimation;
}

@property <MKWorldGestureControllerDelegate> * worldDelegate;
@property(getter=isRotationEnabled) BOOL rotationEnabled;
@property(getter=isTiltEnabled) BOOL tiltEnabled;
@property(readonly) UIRotationGestureRecognizer * rotationGestureRecognizer;
@property(readonly) MKTiltGestureRecognizer * tiltGestureRecognizer;


- (void)dealloc;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (id)tiltGestureRecognizer;
- (id)worldDelegate;
- (id)rotationGestureRecognizer;
- (void)handleTilt:(id)arg1;
- (void)handleRotation:(id)arg1;
- (void)stopDynamicAnimations;
- (BOOL)isTiltEnabled;
- (void)setTiltEnabled:(BOOL)arg1;
- (void)setRotationEnabled:(BOOL)arg1;
- (void)setWorldDelegate:(id)arg1;
- (id)initWithMapView:(id)arg1 gestureTargetView:(id)arg2 doubleTapTargetView:(id)arg3;
- (BOOL)isRotationEnabled;

@end
