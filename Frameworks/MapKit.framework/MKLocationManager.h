/* Generated by RuntimeBrowser on iPhone OS 3.1
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@class MKTripRecorder, NSDictionary, CLLocationManager, CLLocation, NSString, NSHashTable, NSMutableArray, MKRouteStep, MKLocationShiftFunction, GMMLocationShiftRequester, CLHeading, NSTimer;



@interface MKLocationManager : NSObject <CLLocationManagerDelegateInternal, PBRequesterDelegate>
{
    CLLocationManager *_clLocationManager;
    NSHashTable *_locationObservers;
    CLLocation *_lastLocation;
    CLHeading *_heading;
    id _headingObserver;
    NSDictionary *_lastLocationSourceInfo;
    double _lastLocationUpdateTime;
    BOOL _isLastLocationStale;
    BOOL _trackingLocation;
    BOOL _trackingHeading;
    BOOL _shouldThrottleHeading;
    NSString *_tripPath;
    NSMutableArray *_tripPaths;
    MKTripRecorder *_recorder;
    double _expectedTimeTillNextUpdate;
    double _calculatingLocationStartTime;
    double _userLocationCacheDuration;
    double _applicationResumeTime;
    double _applicationSuspendTime;
    double _GPSStartTime;
    double _headingUpdateTime;
    double _locationAccuracyUpdateTime;
    MKRouteStep *_routeStep;
    BOOL _usesRouteCorrection;
    BOOL _isLastLocationRouteCorrected;
    NSTimer *_delayedDeliveryTimer;
    BOOL _isLocationServicesDenied;
    NSTimer *_coalesceTimer;
    double _lastLocationReportTime;
    BOOL _chinaShiftEnabled;
    MKLocationShiftFunction *_shiftFunction;
    GMMLocationShiftRequester *_shiftFunctionRequester;
}

@property(readonly) BOOL isLocationServicesAvailable;
@property(readonly) BOOL isLocationServicesEnabled;
@property(readonly) BOOL isLocationServicesApproved;
@property(readonly) BOOL isHeadingServicesAvailable;
@property(readonly) double headingUpdateTimeInterval;
@property(readonly) BOOL hasLocation;
@property(readonly) BOOL hasHiFiCapability;
@property(readonly) NSInteger lastLocationSource;
@property(retain) GMMLocationShiftRequester *shiftFunctionRequester;
@property(retain) MKLocationShiftFunction *shiftFunction;
@property BOOL chinaShiftEnabled;
@property id headingObserver;
@property(readonly) CLHeading *heading;
@property BOOL shouldThrottleHeading;
@property BOOL usesRouteCorrection;
@property(retain) MKRouteStep *routeStep;
@property(readonly) BOOL isLocationServicesDenied;
@property(readonly) BOOL isLastLocationRouteCorrected;
@property(retain) NSMutableArray *tripPaths;
@property(retain) NSString *tripPath;
@property double userLocationCacheDuration;
@property(readonly) BOOL isLastLocationStale;
@property double expectedTimeTillNextUpdate;
@property(readonly) double accuracy;
@property(readonly) CGPoint longLat;
@property(readonly) NSDictionary *lastLocationSourceInfo;
@property(readonly) CLLocation *lastLocation;

+ (id)sharedLocationManager;
+ (NSInteger)locationMKLocationSourceFromSupportInfo:(id)arg1;
+ (id)supportInfoFromLocationMKLocationSource:(NSInteger)arg1;

- (id)init;
- (BOOL)isLocationServicesEnabled;
- (BOOL)isLocationServicesApproved;
- (BOOL)isLocationServicesAvailable;
- (BOOL)isHeadingServicesAvailable;
- (id)clLocationManager;
- (void)setClLocationManager:(id)arg1;
- (id)lastLocationSourceInfo;
- (void)setLastLocationSourceInfo:(id)arg1;
- (NSInteger)lastLocationSource;
- (id)lastLocation;
- (void)setLastLocation:(id)arg1;
- (double)headingUpdateTimeInterval;
- (void)setHeading:(id)arg1;
- (BOOL)hasLocation;
- (struct CGPoint { float x1; float x2; })longLat;
- (double)accuracy;
- (BOOL)hasHiFiCapability;
- (void)_setDelayedDeliveryTimer:(id)arg1;
- (void)setChinaShiftEnabled:(BOOL)arg1;
- (BOOL)_isTimeToResetOnResume;
- (void)applicationResumed:(id)arg1;
- (void)applicationSuspended:(id)arg1;
- (void)_reportLocationStatus:(SEL)arg1;
- (void)_reportLocationFailureWithError:(id)arg1;
- (void)_reportLocationSuccess;
- (void)_reportLocationReset;
- (void)_reportHeadingSuccess;
- (void)_reportHeadingFailureWithError:(id)arg1;
- (void)repostLastKnownLocation;
- (void)reset;
- (void)_setTrackingLocation:(BOOL)arg1;
- (void)startRecording;
- (void)stopRecording;
- (void)writeRecording;
- (void)writeRecordingToPath:(id)arg1;
- (void)loadRecording:(id)arg1;
- (void)loadRecordings:(id)arg1;
- (void)unloadRecording;
- (BOOL)displayCoreLocationStats;
- (void)writeCoreLocationLog;
- (id)_routeCorrectedLocationForLocation:(id)arg1 routeStep:(id*)arg2;
- (NSInteger)bestLocationSource;
- (void)setCoalesceTimer:(id)arg1;
- (BOOL)shouldCoalesceUpdates;
- (BOOL)shouldStartCoalescingLocation:(id)arg1 supportInfo:(id)arg2;
- (BOOL)shouldStopCoalescingLocation:(id)arg1 supportInfo:(id)arg2;
- (void)_startCoalescingUpdates:(NSInteger)arg1;
- (void)_stopCoalescingUpdates;
- (void)reportCoalescedUpdated;
- (BOOL)isGPSWarmingUp;
- (void)dampenGPSLocationAccuracy:(id*)arg1 oldLocationSource:(NSInteger)arg2;
- (void)requester:(id)arg1 didReceiveResponse:(id)arg2 forRequest:(id)arg3;
- (void)requesterDidFinish:(id)arg1;
- (void)requester:(id)arg1 didFailWithError:(id)arg2;
- (void)requestShiftFunctionForLocation:(id)arg1 supportInfo:(id)arg2 wrap:(BOOL)arg3;
- (id)_applyChinaLocationShift:(id)arg1 supportInfo:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3 usingSupportInfo:(id)arg4;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateHeading:(id)arg2;
- (BOOL)locationManagerShouldDisplayHeadingCalibration:(id)arg1;
- (void)tripPlayerDidEnd:(id)arg1;
- (void)startLocationUpdateWithObserver:(id)arg1;
- (void)stopLocationUpdateWithObserver:(id)arg1;
- (void)setShouldThrottleHeading:(BOOL)arg1;
- (void)_setTrackingHeading:(BOOL)arg1;
- (void)startHeadingUpdateWithObserver:(id)arg1;
- (void)stopHeadingUpdateWithObserver:(id)arg1;
- (id)shiftFunctionRequester;
- (void)setShiftFunctionRequester:(id)arg1;
- (id)shiftFunction;
- (void)setShiftFunction:(id)arg1;
- (BOOL)chinaShiftEnabled;
- (id)headingObserver;
- (void)setHeadingObserver:(id)arg1;
- (id)heading;
- (BOOL)shouldThrottleHeading;
- (BOOL)usesRouteCorrection;
- (void)setUsesRouteCorrection:(BOOL)arg1;
- (id)routeStep;
- (void)setRouteStep:(id)arg1;
- (BOOL)isLocationServicesDenied;
- (BOOL)isLastLocationRouteCorrected;
- (id)tripPaths;
- (void)setTripPaths:(id)arg1;
- (id)tripPath;
- (void)setTripPath:(id)arg1;
- (double)userLocationCacheDuration;
- (void)setUserLocationCacheDuration:(double)arg1;
- (BOOL)isLastLocationStale;
- (double)expectedTimeTillNextUpdate;
- (void)setExpectedTimeTillNextUpdate:(double)arg1;

@end
