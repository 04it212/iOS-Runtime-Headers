/* Generated by RuntimeBrowser on iPhone OS 3.1
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */



@interface MKLevelView : UITiledView 
{
    id _delegate;
    struct __CFDictionary { } *_tileToTileView;
    NSInteger _zoomLevel;
    NSUInteger _mapType;
    struct { 
        double x; 
        double y; 
    } _offset;
    float _scale;
}

@property id delegate;
@property float scale;

+ (Class)tileClass;

- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_visibleRect;
- (void)layoutSubviews;
- (void)setScale:(float)arg1;
- (unsigned char)_tileFlags;
- (id)_createTileWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_removeTile:(id)arg1 cache:(BOOL)arg2;
- (void)setZoomLevel:(NSInteger)arg1;
- (NSInteger)zoomLevel;
- (void)setMapType:(NSUInteger)arg1;
- (struct Tile { unsigned char x1; unsigned char x2; NSInteger x3; NSInteger x4; NSInteger x5; })_topLeftTileInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 foundTile:(BOOL*)arg2;
- (struct Tile { unsigned char x1; unsigned char x2; NSInteger x3; NSInteger x4; NSInteger x5; })_tileAfterTile:(struct Tile { unsigned char x1; unsigned char x2; NSInteger x3; NSInteger x4; NSInteger x5; })arg1 inRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 foundTile:(BOOL*)arg3;
- (struct { double x1; double x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toCoordinateFromView:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toLongitudeLatitudeFromView:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertTilePoint:(struct { double x1; double x2; })arg1 toPointToView:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertCoordinate:(struct { double x1; double x2; })arg1 toPointToView:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertLongitudeLatitude:(struct CGPoint { float x1; float x2; })arg1 toPointToView:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRegion:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1 toRectToView:(id)arg2;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toRegionFromView:(id)arg2;
- (double)_levelSize;
- (void)setOffset:(struct { double x1; double x2; })arg1;
- (void)setOffsetWithMiddleCoordinate:(struct { double x1; double x2; })arg1;
- (void)setOffsetWithCoordinate:(struct { double x1; double x2; })arg1 point:(struct CGPoint { float x1; float x2; })arg2;
- (struct { double x1; double x2; })offset;
- (id)description;
- (float)pointDistanceFromCoordinate:(struct { double x1; double x2; })arg1 toCoordinate:(struct { double x1; double x2; })arg2;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (float)scale;

@end
