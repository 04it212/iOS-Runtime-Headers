/* Generated by RuntimeBrowser on iPhone OS 4.0
   Image: /System/Library/Frameworks/OpenGLES.framework/OpenGLES
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */



@interface EAGLContext : NSObject 
{

  /* Error parsing encoded ivar type info: ^{_EAGLContextPrivate=@"EAGLContext"@"EAGLSharegroup"I^{__GLIContextRec}{__GLIFunctionDispatchRec="accum"^?"alpha_func"^?"are_textures_resident"^?"array_element"^?"begin"^?"bind_texture"^?"bitmap"^?"blend_func"^?"call_list"^?"call_lists"^?"clear"^?"clear_accum"^?"clear_color"^?"clear_depth"^?"clear_index"^?"clear_stencil"^?"clip_plane"^?"color3b"^?"color3bv"^?"color3d"^?"color3dv"^?"color3f"^?"color3fv"^?"color3i"^?"color3iv"^?"color3s"^?"color3sv"^?"color3ub"^?"color3ubv"^?"color3ui"^?"color3uiv"^?"color3us"^?"color3usv"^?"color4b"^?"color4bv"^?"color4d"^?"color4dv"^?"color4f"^?"color4fv"^?"color4i"^?"color4iv"^?"color4s"^?"color4sv"^?"color4ub"^?"color4ubv"^?"color4ui"^?"color4uiv"^?"color4us"^?"color4usv"^?"color_mask"^?"color_material"^?"color_pointer"^?"copy_pixels"^?"copy_tex_image1D"^?"copy_tex_image2D"^?"copy_tex_sub_image1D"^?"copy_tex_sub_image2D"^?"cull_face"^?"delete_lists"^?"delete_textures"^?"depth_func"^?"depth_mask"^?"depth_range"^?"disable"^?"disable_client_state"^?"draw_arrays"^?"draw_buffer"^?"draw_elements"^?"draw_pixels"^?"edge_flag"^?"edge_flag_pointer"^?"edge_flagv"^?"enable"^?"enable_client_state"^?"end"^?"end_list"^?"eval_coord1d"^?"eval_coord1dv"^?"eval_coord1f"^?"eval_coord1fv"^?"eval_coord2d"^?"eval_coord2dv"^?"eval_coord2f"^?"eval_coord2fv"^?"eval_mesh1"^?"eval_mesh2"^?"eval_point1"^?"eval_point2"^?"feedback_buffer"^?"finish"^?"flush"^?"fogf"^?"fogfv"^?"fogi"^?"fogiv"^?"front_face"^?"frustum"^?"gen_lists"^?"gen_textures"^?"get_booleanv"^?"get_clip_plane"^?"get_doublev"^?"get_error"^?"get_floatv"^?"get_integerv"^?"get_lightfv"^?"get_lightiv"^?"get_mapdv"^?"get_mapfv"^?"get_mapiv"^?"get_materialfv"^?"get_materialiv"^?"get_pixel_mapfv"^?"get_pixel_mapuiv"^?"get_pixel_mapusv"^?"get_pointerv"^?"get_polygon_stipple"^?"get_string"^?"get_tex_envfv"^?"get_tex_enviv"^?"get_tex_gendv"^?"get_tex_genfv"^?"get_tex_geniv"^?"get_tex_image"^?"get_tex_level_parameterfv"^?"get_tex_level_parameteriv"^?"get_tex_parameterfv"^?"get_tex_parameteriv"^?"hint"^?"index_mask"^?"index_pointer"^?"indexd"^?"indexdv"^?"indexf"^?"indexfv"^?"indexi"^?"indexiv"^?"indexs"^?"indexsv"^?"indexub"^?"indexubv"^?"init_names"^?"interleaved_arrays"^?"is_enabled"^?"is_list"^?"is_texture"^?"light_modelf"^?"light_modelfv"^?"light_modeli"^?"light_modeliv"^?"lightf"^?"lightfv"^?"lighti"^?"lightiv"^?"line_stipple"^?"line_width"^?"list_base"^?"load_identity"^?"load_matrixd"^?"load_matrixf"^?"load_name"^?"logic_op"^?"map1d"^?"map1f"^?"map2d"^?"map2f"^?"map_grid1d"^?"map_grid1f"^?"map_grid2d"^?"map_grid2f"^?"materialf"^?"materialfv"^?"materiali"^?"materialiv"^?"matrix_mode"^?"mult_matrixd"^?"mult_matrixf"^?"new_list"^?"normal3b"^?"normal3bv"^?"normal3d"^?"normal3dv"^?"normal3f"^?"normal3fv"^?"normal3i"^?"normal3iv"^?"normal3s"^?"normal3sv"^?"normal_pointer"^?"ortho"^?"pass_through"^?"pixel_mapfv"^?"pixel_mapuiv"^?"pixel_mapusv"^?"pixel_storef"^?"pixel_storei"^?"pixel_transferf"^?"pixel_transferi"^?"pixel_zoom"^?"point_size"^?"polygon_mode"^?"polygon_offset"^?"polygon_stipple"^?"pop_attrib"^?"pop_client_attrib"^?"pop_matrix"^?"pop_name"^?"prioritize_textures"^?"push_attrib"^?"push_client_attrib"^?"push_matrix"^?"push_name"^?"raster_pos2d"^?"raster_pos2dv"^?"raster_pos2f"^?"raster_pos2fv"^?"raster_pos2i"^?"raster_pos2iv"^?"raster_pos2s"^?"raster_pos2sv"^?"raster_pos3d"^?"raster_pos3dv"^?"raster_pos3f"^?"raster_pos3fv"^?"raster_pos3i"^?"raster_pos3iv"^?"raster_pos3s"^?"raster_pos3sv"^?"raster_pos4d"^?"raster_pos4dv"^?"raster_pos4f"^?"raster_pos4fv"^?"raster_pos4i"^?"raster_pos4iv"^?"raster_pos4s"^?"raster_pos4sv"^?"read_buffer"^?"read_pixels"^?"rectd"^?"rectdv"^?"rectf"^?"rectfv"^?"recti"^?"rectiv"^?"rects"^?"rectsv"^?"render_mode"^?"rotated"^?"rotatef"^?"scaled"^?"scalef"^?"scissor"^?"select_buffer"^?"shade_model"^?"stencil_func"^?"stencil_mask"^?"stencil_op"^?"tex_coord1d"^?"tex_coord1dv"^?"tex_coord1f"^?"tex_coord1fv"^?"tex_coord1i"^?"tex_coord1iv"^?"tex_coord1s"^?"tex_coord1sv"^?"tex_coord2d"^?"tex_coord2dv"^?"tex_coord2f"^?"tex_coord2fv"^?"tex_coord2i"^?"tex_coord2iv"^?"tex_coord2s"^?"tex_coord2sv"^?"tex_coord3d"^?"tex_coord3dv"^?"tex_coord3f"^?"tex_coord3fv"^?"tex_coord3i"^?"tex_coord3iv"^?"tex_coord3s"^?"tex_coord3sv"^?"tex_coord4d"^?"tex_coord4dv"^?"tex_coord4f"^?"tex_coord4fv"^?"tex_coord4i"^?"tex_coord4iv"^?"tex_coord4s"^?"tex_coord4sv"^?"tex_coord_pointer"^?"tex_envf"^?"tex_envfv"^?"tex_envi"^?"tex_enviv"^?"tex_gend"^?"tex_gendv"^?"tex_genf"^?"tex_genfv"^?"tex_geni"^?"tex_geniv"^?"tex_image1D"^?"tex_image2D"^?"tex_parameterf"^?"tex_parameterfv"^?"tex_parameteri"^?"tex_parameteriv"^?"tex_sub_image1D"^?"tex_sub_image2D"^?"translated"^?"translatef"^?"vertex2d"^?"vertex2dv"^?"vertex2f"^?"vertex2fv"^?"vertex2i"^?"vertex2iv"^?"vertex2s"^?"vertex2sv"^?"vertex3d"^?"vertex3dv"^?"vertex3f"^?"vertex3fv"^?"vertex3i"^?"vertex3iv"^?"vertex3s"^?"vertex3sv"^?"vertex4d"^?"vertex4dv"^?"vertex4f"^?"vertex4fv"^?"vertex4i"^?"vertex4iv"^?"vertex4s"^?"vertex4sv"^?"vertex_pointer"^?"viewport"^?"blend_func_separate"^?"blend_color"^?"blend_equation"^?"lock_arrays_EXT"^?"unlock_arrays_EXT"^?"client_active_texture"^?"active_texture"^?"multi_tex_coord1d"^?"multi_tex_coord1dv"^?"multi_tex_coord1f"^?"multi_tex_coord1fv"^?"multi_tex_coord1i"^?"multi_tex_coord1iv"^?"multi_tex_coord1s"^?"multi_tex_coord1sv"^?"multi_tex_coord2d"^?"multi_tex_coord2dv"^?"multi_tex_coord2f"^?"multi_tex_coord2fv"^?"multi_tex_coord2i"^?"multi_tex_coord2iv"^?"multi_tex_coord2s"^?"multi_tex_coord2sv"^?"multi_tex_coord3d"^?"multi_tex_coord3dv"^?"multi_tex_coord3f"^?"multi_tex_coord3fv"^?"multi_tex_coord3i"^?"multi_tex_coord3iv"^?"multi_tex_coord3s"^?"multi_tex_coord3sv"^?"multi_tex_coord4d"^?"multi_tex_coord4dv"^?"multi_tex_coord4f"^?"multi_tex_coord4fv"^?"multi_tex_coord4i"^?"multi_tex_coord4iv"^?"multi_tex_coord4s"^?"multi_tex_coord4sv"^?"load_transpose_matrixd"^?"load_transpose_matrixf"^?"mult_transpose_matrixd"^?"mult_transpose_matrixf"^?"compressed_tex_image3D"^?"compressed_tex_image2D"^?"compressed_tex_image1D"^?"compressed_tex_sub_image3D"^?"compressed_tex_sub_image2D"^?"compressed_tex_sub_image1D"^?"get_compressed_tex_image"^?"secondary_color3b"^?"secondary_color3bv"^?"secondary_color3d"^?"secondary_color3dv"^?"secondary_color3f"^?"secondary_color3fv"^?"secondary_color3i"^?"secondary_color3iv"^?"secondary_color3s"^?"secondary_color3sv"^?"secondary_color3ub"^?"secondary_color3ubv"^?"secondary_color3ui"^?"secondary_color3uiv"^?"secondary_color3us"^?"secondary_color3usv"^?"secondary_color_pointer"^?"vertex_array_range_EXT"^?"flush_vertex_array_range_EXT"^?"draw_range_elements"^?"color_table"^?"color_table_parameterfv"^?"color_table_parameteriv"^?"copy_color_table"^?"get_color_table"^?"get_color_table_parameterfv"^?"get_color_table_parameteriv"^?"color_sub_table"^?"copy_color_sub_table"^?"convolution_filter1D"^?"convolution_filter2D"^?"convolution_parameterf"^?"convolution_parameterfv"^?"convolution_parameteri"^?"convolution_parameteriv"^?"copy_convolution_filter1D"^?"copy_convolution_filter2D"^?"get_convolution_filter"^?"get_convolution_parameterfv"^?"get_convolution_parameteriv"^?"get_separable_filter"^?"separable_filter2D"^?"get_histogram"^?"get_histogram_parameterfv"^?"get_histogram_parameteriv"^?"get_minmax"^?"get_minmax_parameterfv"^?"get_minmax_parameteriv"^?"histogram"^?"minmax"^?"reset_histogram"^?"reset_minmax"^?"tex_image3D"^?"tex_sub_image3D"^?"copy_tex_sub_image3D"^?"get_uniform_indices"^?"get_active_uniformsiv"^?"get_active_uniform_name"^?"get_uniform_block_index"^?"get_active_uniform_blockiv"^?"get_active_uniform_block_name"^?"uniform_block_binding"^?"get_combiner_input_parameterfv_NV"^?"get_combiner_input_parameteriv_NV"^?"get_combiner_output_parameterfv_NV"^?"get_combiner_output_parameteriv_NV"^?"get_final_combiner_input_parameterfv_NV"^?"get_final_combiner_input_parameteriv_NV"^?"combiner_stage_parameterfv_NV"^?"get_combiner_stage_parameterfv_NV"^?"texture_range_APPLE"^?"get_tex_parameter_pointerv_APPLE"^?"blend_equation_separate_EXT"^?"sample_coverage"^?"sample_pass"^?"pn_trianglesi_ATI"^?"pn_trianglesf_ATI"^?"gen_fences_APPLE"^?"delete_fences_APPLE"^?"set_fence_APPLE"^?"is_fence_APPLE"^?"test_fence_APPLE"^?"finish_fence_APPLE"^?"test_object_APPLE"^?"finish_object_APPLE"^?"bind_program_ARB"^?"delete_programs_ARB"^?"gen_programs_ARB"^?"is_program_ARB"^?"vertex_attrib1s_ARB"^?"vertex_attrib1f_ARB"^?"vertex_attrib1d_ARB"^?"vertex_attrib2s_ARB"^?"vertex_attrib2f_ARB"^?"vertex_attrib2d_ARB"^?"vertex_attrib3s_ARB"^?"vertex_attrib3f_ARB"^?"vertex_attrib3d_ARB"^?"vertex_attrib4s_ARB"^?"vertex_attrib4f_ARB"^?"vertex_attrib4d_ARB"^?"vertex_attrib4Nub_ARB"^?"vertex_attrib1sv_ARB"^?"vertex_attrib1fv_ARB"^?"vertex_attrib1dv_ARB"^?"vertex_attrib2sv_ARB"^?"vertex_attrib2fv_ARB"^?"vertex_attrib2dv_ARB"^?"vertex_attrib3sv_ARB"^?"vertex_attrib3fv_ARB"^?"vertex_attrib3dv_ARB"^?"vertex_attrib4bv_ARB"^?"vertex_attrib4sv_ARB"^?"vertex_attrib4iv_ARB"^?"vertex_attrib4ubv_ARB"^?"vertex_attrib4usv_ARB"^?"vertex_attrib4uiv_ARB"^?"vertex_attrib4fv_ARB"^?"vertex_attrib4dv_ARB"^?"vertex_attrib4Nbv_ARB"^?"vertex_attrib4Nsv_ARB"^?"vertex_attrib4Niv_ARB"^?"vertex_attrib4Nubv_ARB"^?"vertex_attrib4Nusv_ARB"^?"vertex_attrib4Nuiv_ARB"^?"vertex_attrib_pointer_ARB"^?"enable_vertex_attrib_array_ARB"^?"disable_vertex_attrib_array_ARB"^?"get_vertex_attribdv_ARB"^?"get_vertex_attribfv_ARB"^?"get_vertex_attribiv_ARB"^?"get_vertex_attrib_pointerv_ARB"^?"program_env_parameter4d_ARB"^?"program_env_parameter4dv_ARB"^?"program_env_parameter4f_ARB"^?"program_env_parameter4fv_ARB"^?"program_local_parameter4d_ARB"^?"program_local_parameter4dv_ARB"^?"program_local_parameter4f_ARB"^?"program_local_parameter4fv_ARB"^?"get_program_env_parameterdv_ARB"^?"get_program_env_parameterfv_ARB"^?"get_program_local_parameterdv_ARB"^?"get_program_local_parameterfv_ARB"^?"program_string_ARB"^?"get_program_string_ARB"^?"get_programiv_ARB"^?"enable_vertex_attrib_ARB"^?"disable_vertex_attrib_ARB"^?"is_vertex_attrib_enabled_ARB"^?"map_vertex_attrib1d_ARB"^?"map_vertex_attrib1f_ARB"^?"map_vertex_attrib2d_ARB"^?"map_vertex_attrib2f_ARB"^?"point_parameterf"^?"point_parameterfv"^?"point_parameteri"^?"point_parameteriv"^?"fog_coordf"^?"fog_coordfv"^?"fog_coordd"^?"fog_coorddv"^?"fog_coord_pointer"^?"vertex_array_parameteri_EXT"^?"bind_vertex_array_EXT"^?"delete_vertex_arrays_EXT"^?"gen_vertex_arrays_EXT"^?"is_vertex_array_EXT"^?"element_pointer_APPLE"^?"draw_element_array_APPLE"^?"draw_range_element_array_APPLE"^?"weightbv_ARB"^?"weightsv_ARB"^?"weightiv_ARB"^?"weightfv_ARB"^?"weightdv_ARB"^?"weightubv_ARB"^?"weightusv_ARB"^?"weightuiv_ARB"^?"weight_pointer_ARB"^?"vertex_blend_ARB"^?"multi_draw_arrays"^?"multi_draw_elements"^?"window_pos2d"^?"window_pos2dv"^?"window_pos2f"^?"window_pos2fv"^?"window_pos2i"^?"window_pos2iv"^?"window_pos2s"^?"window_pos2sv"^?"window_pos3d"^?"window_pos3dv"^?"window_pos3f"^?"window_pos3fv"^?"window_pos3i"^?"window_pos3iv"^?"window_pos3s"^?"window_pos3sv"^?"active_stencil_face_EXT"^?"stencil_op_separate_ATI"^?"stencil_func_separate_ATI"^?"flush_render_APPLE"^?"finish_render_APPLE"^?"swap_APPLE"^?"delete_object_ARB"^?"get_handle_ARB"^?"detach_object_ARB"^?"create_shader_object_ARB"^?"shader_source_ARB"^?"compile_shader_ARB"^?"create_program_object_ARB"^?"attach_object_ARB"^?"link_program_ARB"^?"use_program_object_ARB"^?"validate_program_ARB"^?"uniform1f_ARB"^?"uniform2f_ARB"^?"uniform3f_ARB"^?"uniform4f_ARB"^?"uniform1i_ARB"^?"uniform2i_ARB"^?"uniform3i_ARB"^?"uniform4i_ARB"^?"uniform1fv_ARB"^?"uniform2fv_ARB"^?"uniform3fv_ARB"^?"uniform4fv_ARB"^?"uniform1iv_ARB"^?"uniform2iv_ARB"^?"uniform3iv_ARB"^?"uniform4iv_ARB"^?"uniform_matrix2fv_ARB"^?"uniform_matrix3fv_ARB"^?"uniform_matrix4fv_ARB"^?"get_object_parameterfv_ARB"^?"get_object_parameteriv_ARB"^?"get_info_log_ARB"^?"get_attached_objects_ARB"^?"get_uniform_location_ARB"^?"get_active_uniform_ARB"^?"get_uniformfv_ARB"^?"get_uniformiv_ARB"^?"get_shader_source_ARB"^?"bind_attrib_location_ARB"^?"get_active_attrib_ARB"^?"get_attrib_location_ARB"^?"clamp_color_ARB"^?"gen_queries"^?"delete_queries"^?"is_query"^?"begin_query"^?"end_query"^?"get_queryiv"^?"get_query_objectiv"^?"get_query_objectuiv"^?"bind_buffer"^?"delete_buffers"^?"gen_buffers"^?"is_buffer"^?"buffer_data"^?"buffer_sub_data"^?"get_buffer_sub_data"^?"map_buffer"^?"unmap_buffer"^?"get_buffer_parameteriv"^?"get_buffer_pointerv"^?"depth_bounds_EXT"^?"draw_buffers_ARB"^?"is_shader"^?"is_program"^?"get_shaderiv"^?"get_programiv"^?"get_shader_info_log"^?"get_program_info_log"^?"stencil_func_separate"^?"stencil_mask_separate"^?"multi_draw_element_array_APPLE"^?"multi_draw_range_element_array_APPLE"^?"is_renderbuffer_EXT"^?"bind_renderbuffer_EXT"^?"delete_renderbuffers_EXT"^?"gen_renderbuffers_EXT"^?"renderbuffer_storage_EXT"^?"get_renderbuffer_parameteriv_EXT"^?"is_framebuffer_EXT"^?"bind_framebuffer_EXT"^?"delete_framebuffers_EXT"^?"gen_framebuffers_EXT"^?"check_framebuffer_status_EXT"^?"framebuffer_texture1D_EXT"^?"framebuffer_texture2D_EXT"^?"framebuffer_texture3D_EXT"^?"framebuffer_renderbuffer_EXT"^?"get_framebuffer_attachment_parameteriv_EXT"^?"generate_mipmap_EXT"^?"buffer_parameteri_APPLE"^?"flush_mapped_buffer_range_APPLE"^?"program_env_parameters4fv_EXT"^?"program_local_parameters4fv_EXT"^?"object_purgeable_APPLE"^?"object_unpurgeable_APPLE"^?"get_object_parameteriv_APPLE"^?"program_parameteri_EXT"^?"framebuffer_texture_EXT"^?"framebuffer_texture_layer_EXT"^?"framebuffer_texture_face_EXT"^?"bind_buffer_range_EXT"^?"bind_buffer_offset_EXT"^?"bind_buffer_base_EXT"^?"begin_transform_feedback_EXT"^?"end_transform_feedback_EXT"^?"transform_feedback_varyings_EXT"^?"get_transform_feedback_varying_EXT"^?"get_integer_indexedv_EXT"^?"get_boolean_indexedv_EXT"^?"uniform_buffer_EXT"^?"get_uniform_buffer_size_EXT"^?"get_uniform_buffer_offset_EXT"^?"clear_colorIi_EXT"^?"clear_colorIui_EXT"^?"tex_parameterIiv_EXT"^?"tex_parameterIuiv_EXT"^?"get_tex_parameterIiv_EXT"^?"get_tex_parameterIuiv_EXT"^?"vertex_attribI1i_EXT"^?"vertex_attribI2i_EXT"^?"vertex_attribI3i_EXT"^?"vertex_attribI4i_EXT"^?"vertex_attribI1ui_EXT"^?"vertex_attribI2ui_EXT"^?"vertex_attribI3ui_EXT"^?"vertex_attribI4ui_EXT"^?"vertex_attribI1iv_EXT"^?"vertex_attribI2iv_EXT"^?"vertex_attribI3iv_EXT"^?"vertex_attribI4iv_EXT"^?"vertex_attribI1uiv_EXT"^?"vertex_attribI2uiv_EXT"^?"vertex_attribI3uiv_EXT"^?"vertex_attribI4uiv_EXT"^?"vertex_attribI4bv_EXT"^?"vertex_attribI4sv_EXT"^?"vertex_attribI4ubv_EXT"^?"vertex_attribI4usv_EXT"^?"vertex_attribI_pointer_EXT"^?"get_vertex_attribIiv_EXT"^?"get_vertex_attribIuiv_EXT"^?"uniform1ui_EXT"^?"uniform2ui_EXT"^?"uniform3ui_EXT"^?"uniform4ui_EXT"^?"uniform1uiv_EXT"^?"uniform2uiv_EXT"^?"uniform3uiv_EXT"^?"uniform4uiv_EXT"^?"get_uniformuiv_EXT"^?"bind_frag_data_location_EXT"^?"get_frag_data_location_EXT"^?"color_mask_indexed_EXT"^?"enable_indexed_EXT"^?"disable_indexed_EXT"^?"is_enabled_indexed_EXT"^?"uniform_matrix2x3fv"^?"uniform_matrix3x2fv"^?"uniform_matrix2x4fv"^?"uniform_matrix4x2fv"^?"uniform_matrix3x4fv"^?"uniform_matrix4x3fv"^?"blit_framebuffer_EXT"^?"renderbuffer_storage_multisample_EXT"^?"begin_conditional_render_NV"^?"end_conditional_render_NV"^?"get_attached_shaders"^?"provoking_vertex_EXT"^?"vertex_attrib_divisor"^?"draw_arrays_instanced"^?"draw_elements_instanced"^?"draw_elements_base_vertex"^?"draw_range_elements_base_vertex"^?"draw_elements_instanced_base_vertex"^?"multi_draw_elements_base_vertex"^?"bind_vertex_array_ARB"^?"delete_vertex_arrays_ARB"^?"gen_vertex_arrays_ARB"^?"is_vertex_array_ARB"^?"vertex_point_sizef_APPLE"^?"tex_image2D_multisample"^?"tex_image3D_multisample"^?"get_multisamplefv"^?"sample_maski"^?"alpha_funcx"^?"clear_colorx"^?"clear_depthf"^?"clear_depthx"^?"clip_planef"^?"clip_planex"^?"color4x"^?"depth_rangef"^?"depth_rangex"^?"fogx"^?"fogxv"^?"frustumf"^?"frustumx"^?"get_clip_planef"^?"get_clip_planex"^?"get_fixedv"^?"get_lightxv"^?"get_materialxv"^?"get_tex_envxv"^?"get_tex_parameterxv"^?"light_modelx"^?"light_modelxv"^?"lightx"^?"lightxv"^?"line_widthx"^?"load_matrixx"^?"materialx"^?"materialxv"^?"mult_matrixx"^?"normal3x"^?"orthof"^?"orthox"^?"point_sizex"^?"polygon_offsetx"^?"rotatex"^?"scalex"^?"tex_envx"^?"tex_envxv"^?"tex_parameterx"^?"tex_parameterxv"^?"translatex"^?"multi_tex_coord4x"^?"sample_coveragex"^?"point_parameterx"^?"point_parameterxv"^?"point_size_pointer"^?"current_palette_matrix_OES"^?"load_palette_from_modelview_matrix_OES"^?"matrix_index_pointer_OES"^?"weight_pointer_OES"^?"drawtexs_OES"^?"drawtexi_OES"^?"drawtexx_OES"^?"drawtexsv_OES"^?"drawtexiv_OES"^?"drawtexxv_OES"^?"drawtexf_OES"^?"drawtexfv_OES"^?"shader_binary_OES"^?"get_shader_precision_format_OES"^?"release_shader_compiler_OES"^?"discard_framebuffer_EXT"^?"framebuffer_parameteri_APPLE"^?"resolve_multisample_framebuffer_APPLE"^?}{__GLIFunctionDispatchRec="accum"^?"alpha_func"^?"are_textures_resident"^?"array_element"^?"begin"^?"bind_texture"^?"bitmap"^?"blend_func"^?"call_list"^?"call_lists"^?"clear"^?"clear_accum"^?"clear_color"^?"clear_depth"^?"clear_index"^?"clear_stencil"^?"clip_plane"^?"color3b"^?"color3bv"^?"color3d"^?"color3dv"^?"color3f"^?"color3fv"^?"color3i"^?"color3iv"^?"color3s"^?"color3sv"^?"color3ub"^?"color3ubv"^?"color3ui"^?"color3uiv"^?"color3us"^?"color3usv"^?"color4b"^?"color4bv"^?"color4d"^?"color4dv"^?"color4f"^?"color4fv"^?"color4i"^?"color4iv"^?"color4s"^?"color4sv"^?"color4ub"^?"color4ubv"^?"color4ui"^?"color4uiv"^?"color4us"^?"color4usv"^?"color_mask"^?"color_material"^?"color_pointer"^?"copy_pixels"^?"copy_tex_image1D"^?"copy_tex_image2D"^?"copy_tex_sub_image1D"^?"copy_tex_sub_image2D"^?"cull_face"^?"delete_lists"^?"delete_textures"^?"depth_func"^?"depth_mask"^?"depth_range"^?"disable"^?"disable_client_state"^?"draw_arrays"^?"draw_buffer"^?"draw_elements"^?"draw_pixels"^?"edge_flag"^?"edge_flag_pointer"^?"edge_flagv"^?"enable"^?"enable_client_state"^?"end"^?"end_list"^?"eval_coord1d"^?"eval_coord1dv"^?"eval_coord1f"^?"eval_coord1fv"^?"eval_coord2d"^?"eval_coord2dv"^?"eval_coord2f"^?"eval_coord2fv"^?"eval_mesh1"^?"eval_mesh2"^?"eval_point1"^?"eval_point2"^?"feedback_buffer"^?"finish"^?"flush"^?"fogf"^?"fogfv"^?"fogi"^?"fogiv"^?"front_face"^?"frustum"^?"gen_lists"^?"gen_textures"^?"get_booleanv"^?"get_clip_plane"^?"get_doublev"^?"get_error"^?"get_floatv"^?"get_integerv"^?"get_lightfv"^?"get_lightiv"^?"get_mapdv"^?"get_mapfv"^?"get_mapiv"^?"get_materialfv"^?"get_materialiv"^?"get_pixel_mapfv"^?"get_pixel_mapuiv"^?"get_pixel_mapusv"^?"get_pointerv"^?"get_polygon_stipple"^?"get_string"^?"get_tex_envfv"^?"get_tex_enviv"^?"get_tex_gendv"^?"get_tex_genfv"^?"get_tex_geniv"^?"get_tex_image"^?"get_tex_level_parameterfv"^?"get_tex_level_parameteriv"^?"get_tex_parameterfv"^?"get_tex_parameteriv"^?"hint"^?"index_mask"^?"index_pointer"^?"indexd"^?"indexdv"^?"indexf"^?"indexfv"^?"indexi"^?"indexiv"^?"indexs"^?"indexsv"^?"indexub"^?"indexubv"^?"init_names"^?"interleaved_arrays"^?"is_enabled"^?"is_list"^?"is_texture"^?"light_modelf"^?"light_modelfv"^?"light_modeli"^?"light_modeliv"^?"lightf"^?"lightfv"^?"lighti"^?"lightiv"^?"line_stipple"^?"line_width"^?"list_base"^?"load_identity"^?"load_matrixd"^?"load_matrixf"^?"load_name"^?"logic_op"^?"map1d"^?"map1f"^?"map2d"^?"map2f"^?"map_grid1d"^?"map_grid1f"^?"map_grid2d"^?"map_grid2f"^?"materialf"^?"materialfv"^?"materiali"^?"materialiv"^?"matrix_mode"^?"mult_matrixd"^?"mult_matrixf"^?"new_list"^?"normal3b"^?"normal3bv"^?"normal3d"^?"normal3dv"^?"normal3f"^?"normal3fv"^?"normal3i"^?"normal3iv"^?"normal3s"^?"normal3sv"^?"normal_pointer"^?"ortho"^?"pass_through"^?"pixel_mapfv"^?"pixel_mapuiv"^?"pixel_mapusv"^?"pixel_storef"^?"pixel_storei"^?"pixel_transferf"^?"pixel_transferi"^?"pixel_zoom"^?"point_size"^?"polygon_mode"^?"polygon_offset"^?"polygon_stipple"^?"pop_attrib"^?"pop_client_attrib"^?"pop_matrix"^?"pop_name"^?"prioritize_textures"^?"push_attrib"^?"push_client_attrib"^?"push_matrix"^?"push_name"^?"raster_pos2d"^?"raster_pos2dv"^?"raster_pos2f"^?"raster_pos2fv"^?"raster_pos2i"^?"raster_pos2iv"^?"raster_pos2s"^?"raster_pos2sv"^?"raster_pos3d"^?"raster_pos3dv"^?"raster_pos3f"^?"raster_pos3fv"^?"raster_pos3i"^?"raster_pos3iv"^?"raster_pos3s"^?"raster_pos3sv"^?"raster_pos4d"^?"raster_pos4dv"^?"raster_pos4f"^?"raster_pos4fv"^?"raster_pos4i"^?"raster_pos4iv"^?"raster_pos4s"^?"raster_pos4sv"^?"read_buffer"^?"read_pixels"^?"rectd"^?"rectdv"^?"rectf"^?"rectfv"^?"recti"^?"rectiv"^?"rects"^?"rectsv"^?"render_mode"^?"rotated"^?"rotatef"^?"scaled"^?"scalef"^?"scissor"^?"select_buffer"^?"shade_model"^?"stencil_func"^?"stencil_mask"^?"stencil_op"^?"tex_coord1d"^?"tex_coord1dv"^?"tex_coord1f"^?"tex_coord1fv"^?"tex_coord1i"^?"tex_coord1iv"^?"tex_coord1s"^?"tex_coord1sv"^?"tex_coord2d"^?"tex_coord2dv"^?"tex_coord2f"^?"tex_coord2fv"^?"tex_coord2i"^?"tex_coord2iv"^?"tex_coord2s"^?"tex_coord2sv"^?"tex_coord3d"^?"tex_coord3dv"^?"tex_coord3f"^?"tex_coord3fv"^?"tex_coord3i"^?"tex_coord3iv"^?"tex_coord3s"^?"tex_coord3sv"^?"tex_coord4d"^?"tex_coord4dv"^?"tex_coord4f"^?"tex_coord4fv"^?"tex_coord4i"^?"tex_coord4iv"^?"tex_coord4s"^?"tex_coord4sv"^?"tex_coord_pointer"^?"tex_envf"^?"tex_envfv"^?"tex_envi"^?"tex_enviv"^?"tex_gend"^?"tex_gendv"^?"tex_genf"^?"tex_genfv"^?"tex_geni"^?"tex_geniv"^?"tex_image1D"^?"tex_image2D"^?"tex_parameterf"^?"tex_parameterfv"^?"tex_parameteri"^?"tex_parameteriv"^?"tex_sub_image1D"^?"tex_sub_image2D"^?"translated"^?"translatef"^?"vertex2d"^?"vertex2dv"^?"vertex2f"^?"vertex2fv"^?"vertex2i"^?"vertex2iv"^?"vertex2s"^?"vertex2sv"^?"vertex3d"^?"vertex3dv"^?"vertex3f"^?"vertex3fv"^?"vertex3i"^?"vertex3iv"^?"vertex3s"^?"vertex3sv"^?"vertex4d"^?"vertex4dv"^?"vertex4f"^?"vertex4fv"^?"vertex4i"^?"vertex4iv"^?"vertex4s"^?"vertex4sv"^?"vertex_pointer"^?"viewport"^?"blend_func_separate"^?"blend_color"^?"blend_equation"^?"lock_arrays_EXT"^?"unlock_arrays_EXT"^?"client_active_texture"^?"active_texture"^?"multi_tex_coord1d"^?"multi_tex_coord1dv"^?"multi_tex_coord1f"^?"multi_tex_coord1fv"^?"multi_tex_coord1i"^?"multi_tex_coord1iv"^?"multi_tex_coord1s"^?"multi_tex_coord1sv"^?"multi_tex_coord2d"^?"multi_tex_coord2dv"^?"multi_tex_coord2f"^?"multi_tex_coord2fv"^?"multi_tex_coord2i"^?"multi_tex_coord2iv"^?"multi_tex_coord2s"^?"multi_tex_coord2sv"^?"multi_tex_coord3d"^?"multi_tex_coord3dv"^?"multi_tex_coord3f"^?"multi_tex_coord3fv"^?"multi_tex_coord3i"^?"multi_tex_coord3iv"^?"multi_tex_coord3s"^?"multi_tex_coord3sv"^?"multi_tex_coord4d"^?"multi_tex_coord4dv"^?"multi_tex_coord4f"^?"multi_tex_coord4fv"^?"multi_tex_coord4i"^?"multi_tex_coord4iv"^?"multi_tex_coord4s"^?"multi_tex_coord4sv"^?"load_transpose_matrixd"^?"load_transpose_matrixf"^?"mult_transpose_matrixd"^?"mult_transpose_matrixf"^?"compressed_tex_image3D"^?"compressed_tex_image2D"^?"compressed_tex_image1D"^?"compressed_tex_sub_image3D"^?"compressed_tex_sub_image2D"^?"compressed_tex_sub_image1D"^?"get_compressed_tex_image"^?"secondary_color3b"^?"secondary_color3bv"^?"secondary_color3d"^?"secondary_color3dv"^?"secondary_color3f"^?"secondary_color3fv"^?"secondary_color3i"^?"secondary_color3iv"^?"secondary_color3s"^?"secondary_color3sv"^?"secondary_color3ub"^?"secondary_color3ubv"^?"secondary_color3ui"^?"secondary_color3uiv"^?"secondary_color3us"^?"secondary_color3usv"^?"secondary_color_pointer"^?"vertex_array_range_EXT"^?"flush_vertex_array_range_EXT"^?"draw_range_elements"^?"color_table"^?"color_table_parameterfv"^?"color_table_parameteriv"^?"copy_color_table"^?"get_color_table"^?"get_color_table_parameterfv"^?"get_color_table_parameteriv"^?"color_sub_table"^?"copy_color_sub_table"^?"convolution_filter1D"^?"convolution_filter2D"^?"convolution_parameterf"^?"convolution_parameterfv"^?"convolution_parameteri"^?"convolution_parameteriv"^?"copy_convolution_filter1D"^?"copy_convolution_filter2D"^?"get_convolution_filter"^?"get_convolution_parameterfv"^?"get_convolution_parameteriv"^?"get_separable_filter"^?"separable_filter2D"^?"get_histogram"^?"get_histogram_parameterfv"^?"get_histogram_parameteriv"^?"get_minmax"^?"get_minmax_parameterfv"^?"get_minmax_parameteriv"^?"histogram"^?"minmax"^?"reset_histogram"^?"reset_minmax"^?"tex_image3D"^?"tex_sub_image3D"^?"copy_tex_sub_image3D"^?"get_uniform_indices"^?"get_active_uniformsiv"^?"get_active_uniform_name"^?"get_uniform_block_index"^?"get_active_uniform_blockiv"^?"get_active_uniform_block_name"^?"uniform_block_binding"^?"get_combiner_input_parameterfv_NV"^?"get_combiner_input_parameteriv_NV"^?"get_combiner_output_parameterfv_NV"^?"get_combiner_output_parameteriv_NV"^?"get_final_combiner_input_parameterfv_NV"^?"get_final_combiner_input_parameteriv_NV"^?"combiner_stage_parameterfv_NV"^?"get_combiner_stage_parameterfv_NV"^?"texture_range_APPLE"^?"get_tex_parameter_pointerv_APPLE"^?"blend_equation_separate_EXT"^?"sample_coverage"^?"sample_pass"^?"pn_trianglesi_ATI"^?"pn_trianglesf_ATI"^?"gen_fences_APPLE"^?"delete_fences_APPLE"^?"set_fence_APPLE"^?"is_fence_APPLE"^?"test_fence_APPLE"^?"finish_fence_APPLE"^?"test_object_APPLE"^?"finish_object_APPLE"^?"bind_program_ARB"^?"delete_programs_ARB"^?"gen_programs_ARB"^?"is_program_ARB"^?"vertex_attrib1s_ARB"^?"vertex_attrib1f_ARB"^?"vertex_attrib1d_ARB"^?"vertex_attrib2s_ARB"^?"vertex_attrib2f_ARB"^?"vertex_attrib2d_ARB"^?"vertex_attrib3s_ARB"^?"vertex_attrib3f_ARB"^?"vertex_attrib3d_ARB"^?"vertex_attrib4s_ARB"^?"vertex_attrib4f_ARB"^?"vertex_attrib4d_ARB"^?"vertex_attrib4Nub_ARB"^?"vertex_attrib1sv_ARB"^?"vertex_attrib1fv_ARB"^?"vertex_attrib1dv_ARB"^?"vertex_attrib2sv_ARB"^?"vertex_attrib2fv_ARB"^?"vertex_attrib2dv_ARB"^?"vertex_attrib3sv_ARB"^?"vertex_attrib3fv_ARB"^?"vertex_attrib3dv_ARB"^?"vertex_attrib4bv_ARB"^?"vertex_attrib4sv_ARB"^?"vertex_attrib4iv_ARB"^?"vertex_attrib4ubv_ARB"^?"vertex_attrib4usv_ARB"^?"vertex_attrib4uiv_ARB"^?"vertex_attrib4fv_ARB"^?"vertex_attrib4dv_ARB"^?"vertex_attrib4Nbv_ARB"^?"vertex_attrib4Nsv_ARB"^?"vertex_attrib4Niv_ARB"^?"vertex_attrib4Nubv_ARB"^?"vertex_attrib4Nusv_ARB"^?"vertex_attrib4Nuiv_ARB"^?"vertex_attrib_pointer_ARB"^?"enable_vertex_attrib_array_ARB"^?"disable_vertex_attrib_array_ARB"^?"get_vertex_attribdv_ARB"^?"get_vertex_attribfv_ARB"^?"get_vertex_attribiv_ARB"^?"get_vertex_attrib_pointerv_ARB"^?"program_env_parameter4d_ARB"^?"program_env_parameter4dv_ARB"^?"program_env_parameter4f_ARB"^?"program_env_parameter4fv_ARB"^?"program_local_parameter4d_ARB"^?"program_local_parameter4dv_ARB"^?"program_local_parameter4f_ARB"^?"program_local_parameter4fv_ARB"^?"get_program_env_parameterdv_ARB"^?"get_program_env_parameterfv_ARB"^?"get_program_local_parameterdv_ARB"^?"get_program_local_parameterfv_ARB"^?"program_string_ARB"^?"get_program_string_ARB"^?"get_programiv_ARB"^?"enable_vertex_attrib_ARB"^?"disable_vertex_attrib_ARB"^?"is_vertex_attrib_enabled_ARB"^?"map_vertex_attrib1d_ARB"^?"map_vertex_attrib1f_ARB"^?"map_vertex_attrib2d_ARB"^?"map_vertex_attrib2f_ARB"^?"point_parameterf"^?"point_parameterfv"^?"point_parameteri"^?"point_parameteriv"^?"fog_coordf"^?"fog_coordfv"^?"fog_coordd"^?"fog_coorddv"^?"fog_coord_pointer"^?"vertex_array_parameteri_EXT"^?"bind_vertex_array_EXT"^?"delete_vertex_arrays_EXT"^?"gen_vertex_arrays_EXT"^?"is_vertex_array_EXT"^?"element_pointer_APPLE"^?"draw_element_array_APPLE"^?"draw_range_element_array_APPLE"^?"weightbv_ARB"^?"weightsv_ARB"^?"weightiv_ARB"^?"weightfv_ARB"^?"weightdv_ARB"^?"weightubv_ARB"^?"weightusv_ARB"^?"weightuiv_ARB"^?"weight_pointer_ARB"^?"vertex_blend_ARB"^?"multi_draw_arrays"^?"multi_draw_elements"^?"window_pos2d"^?"window_pos2dv"^?"window_pos2f"^?"window_pos2fv"^?"window_pos2i"^?"window_pos2iv"^?"window_pos2s"^?"window_pos2sv"^?"window_pos3d"^?"window_pos3dv"^?"window_pos3f"^?"window_pos3fv"^?"window_pos3i"^?"window_pos3iv"^?"window_pos3s"^?"window_pos3sv"^?"active_stencil_face_EXT"^?"stencil_op_separate_ATI"^?"stencil_func_separate_ATI"^?"flush_render_APPLE"^?"finish_render_APPLE"^?"swap_APPLE"^?"delete_object_ARB"^?"get_handle_ARB"^?"detach_object_ARB"^?"create_shader_object_ARB"^?"shader_source_ARB"^?"compile_shader_ARB"^?"create_program_object_ARB"^?"attach_object_ARB"^?"link_program_ARB"^?"use_program_object_ARB"^?"validate_program_ARB"^?"uniform1f_ARB"^?"uniform2f_ARB"^?"uniform3f_ARB"^?"uniform4f_ARB"^?"uniform1i_ARB"^?"uniform2i_ARB"^?"uniform3i_ARB"^?"uniform4i_ARB"^?"uniform1fv_ARB"^?"uniform2fv_ARB"^?"uniform3fv_ARB"^?"uniform4fv_ARB"^?"uniform1iv_ARB"^?"uniform2iv_ARB"^?"uniform3iv_ARB"^?"uniform4iv_ARB"^?"uniform_matrix2fv_ARB"^?"uniform_matrix3fv_ARB"^?"uniform_matrix4fv_ARB"^?"get_object_parameterfv_ARB"^?"get_object_parameteriv_ARB"^?"get_info_log_ARB"^?"get_attached_objects_ARB"^?"get_uniform_location_ARB"^?"get_active_uniform_ARB"^?"get_uniformfv_ARB"^?"get_uniformiv_ARB"^?"get_shader_source_ARB"^?"bind_attrib_location_ARB"^?"get_active_attrib_ARB"^?"get_attrib_location_ARB"^?"clamp_color_ARB"^?"gen_queries"^?"delete_queries"^?"is_query"^?"begin_query"^?"end_query"^?"get_queryiv"^?"get_query_objectiv"^?"get_query_objectuiv"^?"bind_buffer"^?"delete_buffers"^?"gen_buffers"^?"is_buffer"^?"buffer_data"^?"buffer_sub_data"^?"get_buffer_sub_data"^?"map_buffer"^?"unmap_buffer"^?"get_buffer_parameteriv"^?"get_buffer_pointerv"^?"depth_bounds_EXT"^?"draw_buffers_ARB"^?"is_shader"^?"is_program"^?"get_shaderiv"^?"get_programiv"^?"get_shader_info_log"^?"get_program_info_log"^?"stencil_func_separate"^?"stencil_mask_separate"^?"multi_draw_element_array_APPLE"^?"multi_draw_range_element_array_APPLE"^?"is_renderbuffer_EXT"^?"bind_renderbuffer_EXT"^?"delete_renderbuffers_EXT"^?"gen_renderbuffers_EXT"^?"renderbuffer_storage_EXT"^?"get_renderbuffer_parameteriv_EXT"^?"is_framebuffer_EXT"^?"bind_framebuffer_EXT"^?"delete_framebuffers_EXT"^?"gen_framebuffers_EXT"^?"check_framebuffer_status_EXT"^?"framebuffer_texture1D_EXT"^?"framebuffer_texture2D_EXT"^?"framebuffer_texture3D_EXT"^?"framebuffer_renderbuffer_EXT"^?"get_framebuffer_attachment_parameteriv_EXT"^?"generate_mipmap_EXT"^?"buffer_parameteri_APPLE"^?"flush_mapped_buffer_range_APPLE"^?"program_env_parameters4fv_EXT"^?"program_local_parameters4fv_EXT"^?"object_purgeable_APPLE"^?"object_unpurgeable_APPLE"^?"get_object_parameteriv_APPLE"^?"program_parameteri_EXT"^?"framebuffer_texture_EXT"^?"framebuffer_texture_layer_EXT"^?"framebuffer_texture_face_EXT"^?"bind_buffer_range_EXT"^?"bind_buffer_offset_EXT"^?"bind_buffer_base_EXT"^?"begin_transform_feedback_EXT"^?"end_transform_feedback_EXT"^?"transform_feedback_varyings_EXT"^?"get_transform_feedback_varying_EXT"^?"get_integer_indexedv_EXT"^?"get_boolean_indexedv_EXT"^?"uniform_buffer_EXT"^?"get_uniform_buffer_size_EXT"^?"get_uniform_buffer_offset_EXT"^?"clear_colorIi_EXT"^?"clear_colorIui_EXT"^?"tex_parameterIiv_EXT"^?"tex_parameterIuiv_EXT"^?"get_tex_parameterIiv_EXT"^?"get_tex_parameterIuiv_EXT"^?"vertex_attribI1i_EXT"^?"vertex_attribI2i_EXT"^?"vertex_attribI3i_EXT"^?"vertex_attribI4i_EXT"^?"vertex_attribI1ui_EXT"^?"vertex_attribI2ui_EXT"^?"vertex_attribI3ui_EXT"^?"vertex_attribI4ui_EXT"^?"vertex_attribI1iv_EXT"^?"vertex_attribI2iv_EXT"^?"vertex_attribI3iv_EXT"^?"vertex_attribI4iv_EXT"^?"vertex_attribI1uiv_EXT"^?"vertex_attribI2uiv_EXT"^?"vertex_attribI3uiv_EXT"^?"vertex_attribI4uiv_EXT"^?"vertex_attribI4bv_EXT"^?"vertex_attribI4sv_EXT"^?"vertex_attribI4ubv_EXT"^?"vertex_attribI4usv_EXT"^?"vertex_attribI_pointer_EXT"^?"get_vertex_attribIiv_EXT"^?"get_vertex_attribIuiv_EXT"^?"uniform1ui_EXT"^?"uniform2ui_EXT"^?"uniform3ui_EXT"^?"uniform4ui_EXT"^?"uniform1uiv_EXT"^?"uniform2uiv_EXT"^?"uniform3uiv_EXT"^?"uniform4uiv_EXT"^?"get_uniformuiv_EXT"^?"bind_frag_data_location_EXT"^?"get_frag_data_location_EXT"^?"color_mask_indexed_EXT"^?"enable_indexed_EXT"^?"disable_indexed_EXT"^?"is_enabled_indexed_EXT"^?"uniform_matrix2x3fv"^?"uniform_matrix3x2fv"^?"uniform_matrix2x4fv"^?"uniform_matrix4x2fv"^?"uniform_matrix3x4fv"^?"uniform_matrix4x3fv"^?"blit_framebuffer_EXT"^?"renderbuffer_storage_multisample_EXT"^?"begin_conditional_render_NV"^?"end_conditional_render_NV"^?"get_attached_shaders"^?"provoking_vertex_EXT"^?"vertex_attrib_divisor"^?"draw_arrays_instanced"^?"draw_elements_instanced"^?"draw_elements_base_vertex"^?"draw_range_elements_base_vertex"^?"draw_elements_instanced_base_vertex"^?"multi_draw_elements_base_vertex"^?"bind_vertex_array_ARB"^?"delete_vertex_arrays_ARB"^?"gen_vertex_arrays_ARB"^?"is_vertex_array_ARB"^?"vertex_point_sizef_APPLE"^?"tex_image2D_multisample"^?"tex_image3D_multisample"^?"get_multisamplefv"^?"sample_maski"^?"alpha_funcx"^?"clear_colorx"^?"clear_depthf"^?"clear_depthx"^?"clip_planef"^?"clip_planex"^?"color4x"^?"depth_rangef"^?"depth_rangex"^?"fogx"^?"fogxv"^?"frustumf"^?"frustumx"^?"get_clip_planef"^?"get_clip_planex"^?"get_fixedv"^?"get_lightxv"^?"get_materialxv"^?"get_tex_envxv"^?"get_tex_parameterxv"^?"light_modelx"^?"light_modelxv"^?"lightx"^?"lightxv"^?"line_widthx"^?"load_matrixx"^?"materialx"^?"materialxv"^?"mult_matrixx"^?"normal3x"^?"orthof"^?"orthox"^?"point_sizex"^?"polygon_offsetx"^?"rotatex"^?"scalex"^?"tex_envx"^?"tex_envxv"^?"tex_parameterx"^?"tex_parameterxv"^?"translatex"^?"multi_tex_coord4x"^?"sample_coveragex"^?"point_parameterx"^?"point_parameterxv"^?"point_size_pointer"^?"current_palette_matrix_OES"^?"load_palette_from_modelview_matrix_OES"^?"matrix_index_pointer_OES"^?"weight_pointer_OES"^?"drawtexs_OES"^?"drawtexi_OES"^?"drawtexx_OES"^?"drawtexsv_OES"^?"drawtexiv_OES"^?"drawtexxv_OES"^?"drawtexf_OES"^?"drawtexfv_OES"^?"shader_binary_OES"^?"get_shader_precision_format_OES"^?"release_shader_compiler_OES"^?"discard_framebuffer_EXT"^?"framebuffer_parameteri_APPLE"^?"resolve_multisample_framebuffer_APPLE"^?}} */
    struct _EAGLContextPrivate { id x1; /* Warning: Unrecognized filer type: '"' using 'void*' */ void*x2; void*x3; void*x4; void*x5; unsigned long x6; unsigned char x7; out in void*x8; void*x9; void*x10; void*x11; void*x12; id x13; void*x14; void*x15; void*x16; void*x17; unsigned long x18; unsigned short x19; void*x20; void*x21; const void*x22; void*x23; const out void*x24; void*x25; void*x26; NSUInteger x27; struct __GLIContextRec {} *x28; struct __GLIFunctionDispatchRec { 
            int (*accum)(); 
            int (*alpha_func)(); 
            int (*are_textures_resident)(); 
            int (*array_element)(); 
            int (*begin)(); 
            int (*bind_texture)(); 
            int (*bitmap)(); 
            int (*blend_func)(); 
            int (*call_list)(); 
            int (*call_lists)(); 
            int (*clear)(); 
            int (*clear_accum)(); 
            int (*clear_color)(); 
            int (*clear_depth)(); 
            int (*clear_index)(); 
            int (*clear_stencil)(); 
            int (*clip_plane)(); 
            int (*color3b)(); 
            int (*color3bv)(); 
            int (*color3d)(); 
            int (*color3dv)(); 
            int (*color3f)(); 
            int (*color3fv)(); 
            int (*color3i)(); 
            int (*color3iv)(); 
            int (*color3s)(); 
            int (*color3sv)(); 
            int (*color3ub)(); 
            int (*color3ubv)(); 
            int (*color3ui)(); 
            int (*color3uiv)(); 
            int (*color3us)(); 
            int (*color3usv)(); 
            int (*color4b)(); 
            int (*color4bv)(); 
            int (*color4d)(); 
            int (*color4dv)(); 
            int (*color4f)(); 
            int (*color4fv)(); 
            int (*color4i)(); 
            int (*color4iv)(); 
            int (*color4s)(); 
            int (*color4sv)(); 
            int (*color4ub)(); 
            int (*color4ubv)(); 
            int (*color4ui)(); 
            int (*color4uiv)(); 
            int (*color4us)(); 
            int (*color4usv)(); 
            int (*color_mask)(); 
            int (*color_material)(); 
            int (*color_pointer)(); 
            int (*copy_pixels)(); 
            int (*copy_tex_image1D)(); 
            int (*copy_tex_image2D)(); 
            int (*copy_tex_sub_image1D)(); 
            int (*copy_tex_sub_image2D)(); 
            int (*cull_face)(); 
            int (*delete_lists)(); 
            int (*delete_textures)(); 
            int (*depth_func)(); 
            int (*depth_mask)(); 
            int (*depth_range)(); 
            int (*disable)(); 
            int (*disable_client_state)(); 
            int (*draw_arrays)(); 
            int (*draw_buffer)(); 
            int (*draw_elements)(); 
            int (*draw_pixels)(); 
            int (*edge_flag)(); 
            int (*edge_flag_pointer)(); 
            int (*edge_flagv)(); 
            int (*enable)(); 
            int (*enable_client_state)(); 
            int (*end)(); 
            int (*end_list)(); 
            int (*eval_coord1d)(); 
            int (*eval_coord1dv)(); 
            int (*eval_coord1f)(); 
            int (*eval_coord1fv)(); 
            int (*eval_coord2d)(); 
            int (*eval_coord2dv)(); 
            int (*eval_coord2f)(); 
            int (*eval_coord2fv)(); 
            int (*eval_mesh1)(); 
            int (*eval_mesh2)(); 
            int (*eval_point1)(); 
            int (*eval_point2)(); 
            int (*feedback_buffer)(); 
            int (*finish)(); 
            int (*flush)(); 
            int (*fogf)(); 
            int (*fogfv)(); 
            int (*fogi)(); 
            int (*fogiv)(); 
            int (*front_face)(); 
            int (*frustum)(); 
            int (*gen_lists)(); 
            int (*gen_textures)(); 
            int (*get_booleanv)(); 
            int (*get_clip_plane)(); 
            int (*get_doublev)(); 
            int (*get_error)(); 
            int (*get_floatv)(); 
            int (*get_integerv)(); 
            int (*get_lightfv)(); 
            int (*get_lightiv)(); 
            int (*get_mapdv)(); 
            int (*get_mapfv)(); 
            int (*get_mapiv)(); 
            int (*get_materialfv)(); 
            int (*get_materialiv)(); 
            int (*get_pixel_mapfv)(); 
            int (*get_pixel_mapuiv)(); 
            int (*get_pixel_mapusv)(); 
            int (*get_pointerv)(); 
            int (*get_polygon_stipple)(); 
            int (*get_string)(); 
            int (*get_tex_envfv)(); 
            int (*get_tex_enviv)(); 
            int (*get_tex_gendv)(); 
            int (*get_tex_genfv)(); 
            int (*get_tex_geniv)(); 
            int (*get_tex_image)(); 
            int (*get_tex_level_parameterfv)(); 
            int (*get_tex_level_parameteriv)(); 
            int (*get_tex_parameterfv)(); 
            int (*get_tex_parameteriv)(); 
            int (*hint)(); 
            int (*index_mask)(); 
            int (*index_pointer)(); 
            int (*indexd)(); 
            int (*indexdv)(); 
            int (*indexf)(); 
            int (*indexfv)(); 
            int (*indexi)(); 
            int (*indexiv)(); 
            int (*indexs)(); 
            int (*indexsv)(); 
            int (*indexub)(); 
            int (*indexubv)(); 
            int (*init_names)(); 
            int (*interleaved_arrays)(); 
            int (*is_enabled)(); 
            int (*is_list)(); 
            int (*is_texture)(); 
            int (*light_modelf)(); 
            int (*light_modelfv)(); 
            int (*light_modeli)(); 
            int (*light_modeliv)(); 
            int (*lightf)(); 
            int (*lightfv)(); 
            int (*lighti)(); 
            int (*lightiv)(); 
            int (*line_stipple)(); 
            int (*line_width)(); 
            int (*list_base)(); 
            int (*load_identity)(); 
            int (*load_matrixd)(); 
            int (*load_matrixf)(); 
            int (*load_name)(); 
            int (*logic_op)(); 
            int (*map1d)(); 
            int (*map1f)(); 
            int (*map2d)(); 
            int (*map2f)(); 
            int (*map_grid1d)(); 
            int (*map_grid1f)(); 
            int (*map_grid2d)(); 
            int (*map_grid2f)(); 
            int (*materialf)(); 
            int (*materialfv)(); 
            int (*materiali)(); 
            int (*materialiv)(); 
            int (*matrix_mode)(); 
            int (*mult_matrixd)(); 
            int (*mult_matrixf)(); 
            int (*new_list)(); 
            int (*normal3b)(); 
            int (*normal3bv)(); 
            int (*normal3d)(); 
            int (*normal3dv)(); 
            int (*normal3f)(); 
            int (*normal3fv)(); 
            int (*normal3i)(); 
            int (*normal3iv)(); 
            int (*normal3s)(); 
            int (*normal3sv)(); 
            int (*normal_pointer)(); 
            int (*ortho)(); 
            int (*pass_through)(); 
            int (*pixel_mapfv)(); 
            int (*pixel_mapuiv)(); 
            int (*pixel_mapusv)(); 
            int (*pixel_storef)(); 
            int (*pixel_storei)(); 
            int (*pixel_transferf)(); 
            int (*pixel_transferi)(); 
            int (*pixel_zoom)(); 
            int (*point_size)(); 
            int (*polygon_mode)(); 
            int (*polygon_offset)(); 
            int (*polygon_stipple)(); 
            int (*pop_attrib)(); 
            int (*pop_client_attrib)(); 
            int (*pop_matrix)(); 
            int (*pop_name)(); 
            int (*prioritize_textures)(); 
            int (*push_attrib)(); 
            int (*push_client_attrib)(); 
            int (*push_matrix)(); 
            int (*push_name)(); 
            int (*raster_pos2d)(); 
            int (*raster_pos2dv)(); 
            int (*raster_pos2f)(); 
            int (*raster_pos2fv)(); 
            int (*raster_pos2i)(); 
            int (*raster_pos2iv)(); 
            int (*raster_pos2s)(); 
            int (*raster_pos2sv)(); 
            int (*raster_pos3d)(); 
            int (*raster_pos3dv)(); 
            int (*raster_pos3f)(); 
            int (*raster_pos3fv)(); 
            int (*raster_pos3i)(); 
            int (*raster_pos3iv)(); 
            int (*raster_pos3s)(); 
            int (*raster_pos3sv)(); 
            int (*raster_pos4d)(); 
            int (*raster_pos4dv)(); 
            int (*raster_pos4f)(); 
            int (*raster_pos4fv)(); 
            int (*raster_pos4i)(); 
            int (*raster_pos4iv)(); 
            int (*raster_pos4s)(); 
            int (*raster_pos4sv)(); 
            int (*read_buffer)(); 
            int (*read_pixels)(); 
            int (*rectd)(); 
            int (*rectdv)(); 
            int (*rectf)(); 
            int (*rectfv)(); 
            int (*recti)(); 
            int (*rectiv)(); 
            int (*rects)(); 
            int (*rectsv)(); 
            int (*render_mode)(); 
            int (*rotated)(); 
            int (*rotatef)(); 
            int (*scaled)(); 
            int (*scalef)(); 
            int (*scissor)(); 
            int (*select_buffer)(); 
            int (*shade_model)(); 
            int (*stencil_func)(); 
            int (*stencil_mask)(); 
            int (*stencil_op)(); 
            int (*tex_coord1d)(); 
            int (*tex_coord1dv)(); 
            int (*tex_coord1f)(); 
            int (*tex_coord1fv)(); 
            int (*tex_coord1i)(); 
            int (*tex_coord1iv)(); 
            int (*tex_coord1s)(); 
            int (*tex_coord1sv)(); 
            int (*tex_coord2d)(); 
            int (*tex_coord2dv)(); 
            int (*tex_coord2f)(); 
            int (*tex_coord2fv)(); 
            int (*tex_coord2i)(); 
            int (*tex_coord2iv)(); 
            int (*tex_coord2s)(); 
            int (*tex_coord2sv)(); 
            int (*tex_coord3d)(); 
            int (*tex_coord3dv)(); 
            int (*tex_coord3f)(); 
            int (*tex_coord3fv)(); 
            int (*tex_coord3i)(); 
            int (*tex_coord3iv)(); 
            int (*tex_coord3s)(); 
            int (*tex_coord3sv)(); 
            int (*tex_coord4d)(); 
            int (*tex_coord4dv)(); 
            int (*tex_coord4f)(); 
            int (*tex_coord4fv)(); 
            int (*tex_coord4i)(); 
            int (*tex_coord4iv)(); 
            int (*tex_coord4s)(); 
            int (*tex_coord4sv)(); 
            int (*tex_coord_pointer)(); 
            int (*tex_envf)(); 
            int (*tex_envfv)(); 
            int (*tex_envi)(); 
            int (*tex_enviv)(); 
            int (*tex_gend)(); 
            int (*tex_gendv)(); 
            int (*tex_genf)(); 
            int (*tex_genfv)(); 
            int (*tex_geni)(); 
            int (*tex_geniv)(); 
            int (*tex_image1D)(); 
            int (*tex_image2D)(); 
            int (*tex_parameterf)(); 
            int (*tex_parameterfv)(); 
            int (*tex_parameteri)(); 
            int (*tex_parameteriv)(); 
            int (*tex_sub_image1D)(); 
            int (*tex_sub_image2D)(); 
            int (*translated)(); 
            int (*translatef)(); 
            int (*vertex2d)(); 
            int (*vertex2dv)(); 
            int (*vertex2f)(); 
            int (*vertex2fv)(); 
            int (*vertex2i)(); 
            int (*vertex2iv)(); 
            int (*vertex2s)(); 
            int (*vertex2sv)(); 
            int (*vertex3d)(); 
            int (*vertex3dv)(); 
            int (*vertex3f)(); 
            int (*vertex3fv)(); 
            int (*vertex3i)(); 
            int (*vertex3iv)(); 
            int (*vertex3s)(); 
            int (*vertex3sv)(); 
            int (*vertex4d)(); 
            int (*vertex4dv)(); 
            int (*vertex4f)(); 
            int (*vertex4fv)(); 
            int (*vertex4i)(); 
            int (*vertex4iv)(); 
            int (*vertex4s)(); 
            int (*vertex4sv)(); 
            int (*vertex_pointer)(); 
            int (*viewport)(); 
            int (*blend_func_separate)(); 
            int (*blend_color)(); 
            int (*blend_equation)(); 
            int (*lock_arrays_EXT)(); 
            int (*unlock_arrays_EXT)(); 
            int (*client_active_texture)(); 
            int (*active_texture)(); 
            int (*multi_tex_coord1d)(); 
            int (*multi_tex_coord1dv)(); 
            int (*multi_tex_coord1f)(); 
            int (*multi_tex_coord1fv)(); 
            int (*multi_tex_coord1i)(); 
            int (*multi_tex_coord1iv)(); 
            int (*multi_tex_coord1s)(); 
            int (*multi_tex_coord1sv)(); 
            int (*multi_tex_coord2d)(); 
            int (*multi_tex_coord2dv)(); 
            int (*multi_tex_coord2f)(); 
            int (*multi_tex_coord2fv)(); 
            int (*multi_tex_coord2i)(); 
            int (*multi_tex_coord2iv)(); 
            int (*multi_tex_coord2s)(); 
            int (*multi_tex_coord2sv)(); 
            int (*multi_tex_coord3d)(); 
            int (*multi_tex_coord3dv)(); 
            int (*multi_tex_coord3f)(); 
            int (*multi_tex_coord3fv)(); 
            int (*multi_tex_coord3i)(); 
            int (*multi_tex_coord3iv)(); 
            int (*multi_tex_coord3s)(); 
            int (*multi_tex_coord3sv)(); 
            int (*multi_tex_coord4d)(); 
            int (*multi_tex_coord4dv)(); 
            int (*multi_tex_coord4f)(); 
            int (*multi_tex_coord4fv)(); 
            int (*multi_tex_coord4i)(); 
            int (*multi_tex_coord4iv)(); 
            int (*multi_tex_coord4s)(); 
            int (*multi_tex_coord4sv)(); 
            int (*load_transpose_matrixd)(); 
            int (*load_transpose_matrixf)(); 
            int (*mult_transpose_matrixd)(); 
            int (*mult_transpose_matrixf)(); 
            int (*compressed_tex_image3D)(); 
            int (*compressed_tex_image2D)(); 
            int (*compressed_tex_image1D)(); 
            int (*compressed_tex_sub_image3D)(); 
            int (*compressed_tex_sub_image2D)(); 
            int (*compressed_tex_sub_image1D)(); 
            int (*get_compressed_tex_image)(); 
            int (*secondary_color3b)(); 
            int (*secondary_color3bv)(); 
            int (*secondary_color3d)(); 
            int (*secondary_color3dv)(); 
            int (*secondary_color3f)(); 
            int (*secondary_color3fv)(); 
            int (*secondary_color3i)(); 
            int (*secondary_color3iv)(); 
            int (*secondary_color3s)(); 
            int (*secondary_color3sv)(); 
            int (*secondary_color3ub)(); 
            int (*secondary_color3ubv)(); 
            int (*secondary_color3ui)(); 
            int (*secondary_color3uiv)(); 
            int (*secondary_color3us)(); 
            int (*secondary_color3usv)(); 
            int (*secondary_color_pointer)(); 
            int (*vertex_array_range_EXT)(); 
            int (*flush_vertex_array_range_EXT)(); 
            int (*draw_range_elements)(); 
            int (*color_table)(); 
            int (*color_table_parameterfv)(); 
            int (*color_table_parameteriv)(); 
            int (*copy_color_table)(); 
            int (*get_color_table)(); 
            int (*get_color_table_parameterfv)(); 
            int (*get_color_table_parameteriv)(); 
            int (*color_sub_table)(); 
            int (*copy_color_sub_table)(); 
            int (*convolution_filter1D)(); 
            int (*convolution_filter2D)(); 
            int (*convolution_parameterf)(); 
            int (*convolution_parameterfv)(); 
            int (*convolution_parameteri)(); 
            int (*convolution_parameteriv)(); 
            int (*copy_convolution_filter1D)(); 
            int (*copy_convolution_filter2D)(); 
            int (*get_convolution_filter)(); 
            int (*get_convolution_parameterfv)(); 
            int (*get_convolution_parameteriv)(); 
            int (*get_separable_filter)(); 
            int (*separable_filter2D)(); 
            int (*get_histogram)(); 
            int (*get_histogram_parameterfv)(); 
            int (*get_histogram_parameteriv)(); 
            int (*get_minmax)(); 
            int (*get_minmax_parameterfv)(); 
            int (*get_minmax_parameteriv)(); 
            int (*histogram)(); 
            int (*minmax)(); 
            int (*reset_histogram)(); 
            int (*reset_minmax)(); 
            int (*tex_image3D)(); 
            int (*tex_sub_image3D)(); 
            int (*copy_tex_sub_image3D)(); 
            int (*get_uniform_indices)(); 
            int (*get_active_uniformsiv)(); 
            int (*get_active_uniform_name)(); 
            int (*get_uniform_block_index)(); 
            int (*get_active_uniform_blockiv)(); 
            int (*get_active_uniform_block_name)(); 
            int (*uniform_block_binding)(); 
            int (*get_combiner_input_parameterfv_NV)(); 
            int (*get_combiner_input_parameteriv_NV)(); 
            int (*get_combiner_output_parameterfv_NV)(); 
            int (*get_combiner_output_parameteriv_NV)(); 
            int (*get_final_combiner_input_parameterfv_NV)(); 
            int (*get_final_combiner_input_parameteriv_NV)(); 
            int (*combiner_stage_parameterfv_NV)(); 
            int (*get_combiner_stage_parameterfv_NV)(); 
            int (*texture_range_APPLE)(); 
            int (*get_tex_parameter_pointerv_APPLE)(); 
            int (*blend_equation_separate_EXT)(); 
            int (*sample_coverage)(); 
            int (*sample_pass)(); 
            int (*pn_trianglesi_ATI)(); 
            int (*pn_trianglesf_ATI)(); 
            int (*gen_fences_APPLE)(); 
            int (*delete_fences_APPLE)(); 
            int (*set_fence_APPLE)(); 
            int (*is_fence_APPLE)(); 
            int (*test_fence_APPLE)(); 
            int (*finish_fence_APPLE)(); 
            int (*test_object_APPLE)(); 
            int (*finish_object_APPLE)(); 
            int (*bind_program_ARB)(); 
            int (*delete_programs_ARB)(); 
            int (*gen_programs_ARB)(); 
            int (*is_program_ARB)(); 
            int (*vertex_attrib1s_ARB)(); 
            int (*vertex_attrib1f_ARB)(); 
            int (*vertex_attrib1d_ARB)(); 
            int (*vertex_attrib2s_ARB)(); 
            int (*vertex_attrib2f_ARB)(); 
            int (*vertex_attrib2d_ARB)(); 
            int (*vertex_attrib3s_ARB)(); 
            int (*vertex_attrib3f_ARB)(); 
            int (*vertex_attrib3d_ARB)(); 
            int (*vertex_attrib4s_ARB)(); 
            int (*vertex_attrib4f_ARB)(); 
            int (*vertex_attrib4d_ARB)(); 
            int (*vertex_attrib4Nub_ARB)(); 
            int (*vertex_attrib1sv_ARB)(); 
            int (*vertex_attrib1fv_ARB)(); 
            int (*vertex_attrib1dv_ARB)(); 
            int (*vertex_attrib2sv_ARB)(); 
            int (*vertex_attrib2fv_ARB)(); 
            int (*vertex_attrib2dv_ARB)(); 
            int (*vertex_attrib3sv_ARB)(); 
            int (*vertex_attrib3fv_ARB)(); 
            int (*vertex_attrib3dv_ARB)(); 
            int (*vertex_attrib4bv_ARB)(); 
            int (*vertex_attrib4sv_ARB)(); 
            int (*vertex_attrib4iv_ARB)(); 
            int (*vertex_attrib4ubv_ARB)(); 
            int (*vertex_attrib4usv_ARB)(); 
            int (*vertex_attrib4uiv_ARB)(); 
            int (*vertex_attrib4fv_ARB)(); 
            int (*vertex_attrib4dv_ARB)(); 
            int (*vertex_attrib4Nbv_ARB)(); 
            int (*vertex_attrib4Nsv_ARB)(); 
            int (*vertex_attrib4Niv_ARB)(); 
            int (*vertex_attrib4Nubv_ARB)(); 
            int (*vertex_attrib4Nusv_ARB)(); 
            int (*vertex_attrib4Nuiv_ARB)(); 
            int (*vertex_attrib_pointer_ARB)(); 
            int (*enable_vertex_attrib_array_ARB)(); 
            int (*disable_vertex_attrib_array_ARB)(); 
            int (*get_vertex_attribdv_ARB)(); 
            int (*get_vertex_attribfv_ARB)(); 
            int (*get_vertex_attribiv_ARB)(); 
            int (*get_vertex_attrib_pointerv_ARB)(); 
            int (*program_env_parameter4d_ARB)(); 
            int (*program_env_parameter4dv_ARB)(); 
            int (*program_env_parameter4f_ARB)(); 
            int (*program_env_parameter4fv_ARB)(); 
            int (*program_local_parameter4d_ARB)(); 
            int (*program_local_parameter4dv_ARB)(); 
            int (*program_local_parameter4f_ARB)(); 
            int (*program_local_parameter4fv_ARB)(); 
            int (*get_program_env_parameterdv_ARB)(); 
            int (*get_program_env_parameterfv_ARB)(); 
            int (*get_program_local_parameterdv_ARB)(); 
            int (*get_program_local_parameterfv_ARB)(); 
            int (*program_string_ARB)(); 
            int (*get_program_string_ARB)(); 
            int (*get_programiv_ARB)(); 
            int (*enable_vertex_attrib_ARB)(); 
            int (*disable_vertex_attrib_ARB)(); 
            int (*is_vertex_attrib_enabled_ARB)(); 
            int (*map_vertex_attrib1d_ARB)(); 
            int (*map_vertex_attrib1f_ARB)(); 
            int (*map_vertex_attrib2d_ARB)(); 
            int (*map_vertex_attrib2f_ARB)(); 
            int (*point_parameterf)(); 
            int (*point_parameterfv)(); 
            int (*point_parameteri)(); 
            int (*point_parameteriv)(); 
            int (*fog_coordf)(); 
            int (*fog_coordfv)(); 
            int (*fog_coordd)(); 
            int (*fog_coorddv)(); 
            int (*fog_coord_pointer)(); 
            int (*vertex_array_parameteri_EXT)(); 
            int (*bind_vertex_array_EXT)(); 
            int (*delete_vertex_arrays_EXT)(); 
            int (*gen_vertex_arrays_EXT)(); 
            int (*is_vertex_array_EXT)(); 
            int (*element_pointer_APPLE)(); 
            int (*draw_element_array_APPLE)(); 
            int (*draw_range_element_array_APPLE)(); 
            int (*weightbv_ARB)(); 
            int (*weightsv_ARB)(); 
            int (*weightiv_ARB)(); 
            int (*weightfv_ARB)(); 
            int (*weightdv_ARB)(); 
            int (*weightubv_ARB)(); 
            int (*weightusv_ARB)(); 
            int (*weightuiv_ARB)(); 
            int (*weight_pointer_ARB)(); 
            int (*vertex_blend_ARB)(); 
            int (*multi_draw_arrays)(); 
            int (*multi_draw_elements)(); 
            int (*window_pos2d)(); 
            int (*window_pos2dv)(); 
            int (*window_pos2f)(); 
            int (*window_pos2fv)(); 
            int (*window_pos2i)(); 
            int (*window_pos2iv)(); 
            int (*window_pos2s)(); 
            int (*window_pos2sv)(); 
            int (*window_pos3d)(); 
            int (*window_pos3dv)(); 
            int (*window_pos3f)(); 
            int (*window_pos3fv)(); 
            int (*window_pos3i)(); 
            int (*window_pos3iv)(); 
            int (*window_pos3s)(); 
            int (*window_pos3sv)(); 
            int (*active_stencil_face_EXT)(); 
            int (*stencil_op_separate_ATI)(); 
            int (*stencil_func_separate_ATI)(); 
            int (*flush_render_APPLE)(); 
            int (*finish_render_APPLE)(); 
            int (*swap_APPLE)(); 
            int (*delete_object_ARB)(); 
            int (*get_handle_ARB)(); 
            int (*detach_object_ARB)(); 
            int (*create_shader_object_ARB)(); 
            int (*shader_source_ARB)(); 
            int (*compile_shader_ARB)(); 
            int (*create_program_object_ARB)(); 
            int (*attach_object_ARB)(); 
            int (*link_program_ARB)(); 
            int (*use_program_object_ARB)(); 
            int (*validate_program_ARB)(); 
            int (*uniform1f_ARB)(); 
            int (*uniform2f_ARB)(); 
            int (*uniform3f_ARB)(); 
            int (*uniform4f_ARB)(); 
            int (*uniform1i_ARB)(); 
            int (*uniform2i_ARB)(); 
            int (*uniform3i_ARB)(); 
            int (*uniform4i_ARB)(); 
            int (*uniform1fv_ARB)(); 
            int (*uniform2fv_ARB)(); 
            int (*uniform3fv_ARB)(); 
            int (*uniform4fv_ARB)(); 
            int (*uniform1iv_ARB)(); 
            int (*uniform2iv_ARB)(); 
            int (*uniform3iv_ARB)(); 
            int (*uniform4iv_ARB)(); 
            int (*uniform_matrix2fv_ARB)(); 
            int (*uniform_matrix3fv_ARB)(); 
            int (*uniform_matrix4fv_ARB)(); 
            int (*get_object_parameterfv_ARB)(); 
            int (*get_object_parameteriv_ARB)(); 
            int (*get_info_log_ARB)(); 
            int (*get_attached_objects_ARB)(); 
            int (*get_uniform_location_ARB)(); 
            int (*get_active_uniform_ARB)(); 
            int (*get_uniformfv_ARB)(); 
            int (*get_uniformiv_ARB)(); 
            int (*get_shader_source_ARB)(); 
            int (*bind_attrib_location_ARB)(); 
            int (*get_active_attrib_ARB)(); 
            int (*get_attrib_location_ARB)(); 
            int (*clamp_color_ARB)(); 
            int (*gen_queries)(); 
            int (*delete_queries)(); 
            int (*is_query)(); 
            int (*begin_query)(); 
            int (*end_query)(); 
            int (*get_queryiv)(); 
            int (*get_query_objectiv)(); 
            int (*get_query_objectuiv)(); 
            int (*bind_buffer)(); 
            int (*delete_buffers)(); 
            int (*gen_buffers)(); 
            int (*is_buffer)(); 
            int (*buffer_data)(); 
            int (*buffer_sub_data)(); 
            int (*get_buffer_sub_data)(); 
            int (*map_buffer)(); 
            int (*unmap_buffer)(); 
            int (*get_buffer_parameteriv)(); 
            int (*get_buffer_pointerv)(); 
            int (*depth_bounds_EXT)(); 
            int (*draw_buffers_ARB)(); 
            int (*is_shader)(); 
            int (*is_program)(); 
            int (*get_shaderiv)(); 
            int (*get_programiv)(); 
            int (*get_shader_info_log)(); 
            int (*get_program_info_log)(); 
            int (*stencil_func_separate)(); 
            int (*stencil_mask_separate)(); 
            int (*multi_draw_element_array_APPLE)(); 
            int (*multi_draw_range_element_array_APPLE)(); 
            int (*is_renderbuffer_EXT)(); 
            int (*bind_renderbuffer_EXT)(); 
            int (*delete_renderbuffers_EXT)(); 
            int (*gen_renderbuffers_EXT)(); 
            int (*renderbuffer_storage_EXT)(); 
            int (*get_renderbuffer_parameteriv_EXT)(); 
            int (*is_framebuffer_EXT)(); 
            int (*bind_framebuffer_EXT)(); 
            int (*delete_framebuffers_EXT)(); 
            int (*gen_framebuffers_EXT)(); 
            int (*check_framebuffer_status_EXT)(); 
            int (*framebuffer_texture1D_EXT)(); 
            int (*framebuffer_texture2D_EXT)(); 
            int (*framebuffer_texture3D_EXT)(); 
            int (*framebuffer_renderbuffer_EXT)(); 
            int (*get_framebuffer_attachment_parameteriv_EXT)(); 
            int (*generate_mipmap_EXT)(); 
            int (*buffer_parameteri_APPLE)(); 
            int (*flush_mapped_buffer_range_APPLE)(); 
            int (*program_env_parameters4fv_EXT)(); 
            int (*program_local_parameters4fv_EXT)(); 
            int (*object_purgeable_APPLE)(); 
            int (*object_unpurgeable_APPLE)(); 
            int (*get_object_parameteriv_APPLE)(); 
            int (*program_parameteri_EXT)(); 
            int (*framebuffer_texture_EXT)(); 
            int (*framebuffer_texture_layer_EXT)(); 
            int (*framebuffer_texture_face_EXT)(); 
            int (*bind_buffer_range_EXT)(); 
            int (*bind_buffer_offset_EXT)(); 
            int (*bind_buffer_base_EXT)(); 
            int (*begin_transform_feedback_EXT)(); 
            int (*end_transform_feedback_EXT)(); 
            int (*transform_feedback_varyings_EXT)(); 
            int (*get_transform_feedback_varying_EXT)(); 
            int (*get_integer_indexedv_EXT)(); 
            int (*get_boolean_indexedv_EXT)(); 
            int (*uniform_buffer_EXT)(); 
            int (*get_uniform_buffer_size_EXT)(); 
            int (*get_uniform_buffer_offset_EXT)(); 
            int (*clear_colorIi_EXT)(); 
            int (*clear_colorIui_EXT)(); 
            int (*tex_parameterIiv_EXT)(); 
            int (*tex_parameterIuiv_EXT)(); 
            int (*get_tex_parameterIiv_EXT)(); 
            int (*get_tex_parameterIuiv_EXT)(); 
            int (*vertex_attribI1i_EXT)(); 
            int (*vertex_attribI2i_EXT)(); 
            int (*vertex_attribI3i_EXT)(); 
            int (*vertex_attribI4i_EXT)(); 
            int (*vertex_attribI1ui_EXT)(); 
            int (*vertex_attribI2ui_EXT)(); 
            int (*vertex_attribI3ui_EXT)(); 
            int (*vertex_attribI4ui_EXT)(); 
            int (*vertex_attribI1iv_EXT)(); 
            int (*vertex_attribI2iv_EXT)(); 
            int (*vertex_attribI3iv_EXT)(); 
            int (*vertex_attribI4iv_EXT)(); 
            int (*vertex_attribI1uiv_EXT)(); 
            int (*vertex_attribI2uiv_EXT)(); 
            int (*vertex_attribI3uiv_EXT)(); 
            int (*vertex_attribI4uiv_EXT)(); 
            int (*vertex_attribI4bv_EXT)(); 
            int (*vertex_attribI4sv_EXT)(); 
            int (*vertex_attribI4ubv_EXT)(); 
            int (*vertex_attribI4usv_EXT)(); 
            int (*vertex_attribI_pointer_EXT)(); 
            int (*get_vertex_attribIiv_EXT)(); 
            int (*get_vertex_attribIuiv_EXT)(); 
            int (*uniform1ui_EXT)(); 
            int (*uniform2ui_EXT)(); 
            int (*uniform3ui_EXT)(); 
            int (*uniform4ui_EXT)(); 
            int (*uniform1uiv_EXT)(); 
            int (*uniform2uiv_EXT)(); 
            int (*uniform3uiv_EXT)(); 
            int (*uniform4uiv_EXT)(); 
            int (*get_uniformuiv_EXT)(); 
            int (*bind_frag_data_location_EXT)(); 
            int (*get_frag_data_location_EXT)(); 
            int (*color_mask_indexed_EXT)(); 
            int (*enable_indexed_EXT)(); 
            int (*disable_indexed_EXT)(); 
            int (*is_enabled_indexed_EXT)(); 
            int (*uniform_matrix2x3fv)(); 
            int (*uniform_matrix3x2fv)(); 
            int (*uniform_matrix2x4fv)(); 
            int (*uniform_matrix4x2fv)(); 
            int (*uniform_matrix3x4fv)(); 
            int (*uniform_matrix4x3fv)(); 
            int (*blit_framebuffer_EXT)(); 
            int (*renderbuffer_storage_multisample_EXT)(); 
            int (*begin_conditional_render_NV)(); 
            int (*end_conditional_render_NV)(); 
            int (*get_attached_shaders)(); 
            int (*provoking_vertex_EXT)(); 
            int (*vertex_attrib_divisor)(); 
            int (*draw_arrays_instanced)(); 
            int (*draw_elements_instanced)(); 
            int (*draw_elements_base_vertex)(); 
            int (*draw_range_elements_base_vertex)(); 
            int (*draw_elements_instanced_base_vertex)(); 
            int (*multi_draw_elements_base_vertex)(); 
            int (*bind_vertex_array_ARB)(); 
            int (*delete_vertex_arrays_ARB)(); 
            int (*gen_vertex_arrays_ARB)(); 
            int (*is_vertex_array_ARB)(); 
            int (*vertex_point_sizef_APPLE)(); 
            int (*tex_image2D_multisample)(); 
            int (*tex_image3D_multisample)(); 
            int (*get_multisamplefv)(); 
            int (*sample_maski)(); 
            int (*alpha_funcx)(); 
            int (*clear_colorx)(); 
            int (*clear_depthf)(); 
            int (*clear_depthx)(); 
            int (*clip_planef)(); 
            int (*clip_planex)(); 
            int (*color4x)(); 
            int (*depth_rangef)(); 
            int (*depth_rangex)(); 
            int (*fogx)(); 
            int (*fogxv)(); 
            int (*frustumf)(); 
            int (*frustumx)(); 
            int (*get_clip_planef)(); 
            int (*get_clip_planex)(); 
            int (*get_fixedv)(); 
            int (*get_lightxv)(); 
            int (*get_materialxv)(); 
            int (*get_tex_envxv)(); 
            int (*get_tex_parameterxv)(); 
            int (*light_modelx)(); 
            int (*light_modelxv)(); 
            int (*lightx)(); 
            int (*lightxv)(); 
            int (*line_widthx)(); 
            int (*load_matrixx)(); 
            int (*materialx)(); 
            int (*materialxv)(); 
            int (*mult_matrixx)(); 
            int (*normal3x)(); 
            int (*orthof)(); 
            int (*orthox)(); 
            int (*point_sizex)(); 
            int (*polygon_offsetx)(); 
            int (*rotatex)(); 
            int (*scalex)(); 
            int (*tex_envx)(); 
            int (*tex_envxv)(); 
            int (*tex_parameterx)(); 
            int (*tex_parameterxv)(); 
            int (*translatex)(); 
            int (*multi_tex_coord4x)(); 
            int (*sample_coveragex)(); 
            int (*point_parameterx)(); 
            int (*point_parameterxv)(); 
            int (*point_size_pointer)(); 
            int (*current_palette_matrix_OES)(); 
            int (*load_palette_from_modelview_matrix_OES)(); 
            int (*matrix_index_pointer_OES)(); 
            int (*weight_pointer_OES)(); 
            int (*drawtexs_OES)(); 
            int (*drawtexi_OES)(); 
            int (*drawtexx_OES)(); 
            int (*drawtexsv_OES)(); 
            int (*drawtexiv_OES)(); 
            int (*drawtexxv_OES)(); 
            int (*drawtexf_OES)(); 
            int (*drawtexfv_OES)(); 
            int (*shader_binary_OES)(); 
            int (*get_shader_precision_format_OES)(); 
            int (*release_shader_compiler_OES)(); 
            int (*discard_framebuffer_EXT)(); 
            int (*framebuffer_parameteri_APPLE)(); 
            int (*resolve_multisample_framebuffer_APPLE)(); 
        } x29; struct __GLIFunctionDispatchRec { 
            int (*accum)(); 
            int (*alpha_func)(); 
            int (*are_textures_resident)(); 
            int (*array_element)(); 
            int (*begin)(); 
            int (*bind_texture)(); 
            int (*bitmap)(); 
            int (*blend_func)(); 
            int (*call_list)(); 
            int (*call_lists)(); 
            int (*clear)(); 
            int (*clear_accum)(); 
            int (*clear_color)(); 
            int (*clear_depth)(); 
            int (*clear_index)(); 
            int (*clear_stencil)(); 
            int (*clip_plane)(); 
            int (*color3b)(); 
            int (*color3bv)(); 
            int (*color3d)(); 
            int (*color3dv)(); 
            int (*color3f)(); 
            int (*color3fv)(); 
            int (*color3i)(); 
            int (*color3iv)(); 
            int (*color3s)(); 
            int (*color3sv)(); 
            int (*color3ub)(); 
            int (*color3ubv)(); 
            int (*color3ui)(); 
            int (*color3uiv)(); 
            int (*color3us)(); 
            int (*color3usv)(); 
            int (*color4b)(); 
            int (*color4bv)(); 
            int (*color4d)(); 
            int (*color4dv)(); 
            int (*color4f)(); 
            int (*color4fv)(); 
            int (*color4i)(); 
            int (*color4iv)(); 
            int (*color4s)(); 
            int (*color4sv)(); 
            int (*color4ub)(); 
            int (*color4ubv)(); 
            int (*color4ui)(); 
            int (*color4uiv)(); 
            int (*color4us)(); 
            int (*color4usv)(); 
            int (*color_mask)(); 
            int (*color_material)(); 
            int (*color_pointer)(); 
            int (*copy_pixels)(); 
            int (*copy_tex_image1D)(); 
            int (*copy_tex_image2D)(); 
            int (*copy_tex_sub_image1D)(); 
            int (*copy_tex_sub_image2D)(); 
            int (*cull_face)(); 
            int (*delete_lists)(); 
            int (*delete_textures)(); 
            int (*depth_func)(); 
            int (*depth_mask)(); 
            int (*depth_range)(); 
            int (*disable)(); 
            int (*disable_client_state)(); 
            int (*draw_arrays)(); 
            int (*draw_buffer)(); 
            int (*draw_elements)(); 
            int (*draw_pixels)(); 
            int (*edge_flag)(); 
            int (*edge_flag_pointer)(); 
            int (*edge_flagv)(); 
            int (*enable)(); 
            int (*enable_client_state)(); 
            int (*end)(); 
            int (*end_list)(); 
            int (*eval_coord1d)(); 
            int (*eval_coord1dv)(); 
            int (*eval_coord1f)(); 
            int (*eval_coord1fv)(); 
            int (*eval_coord2d)(); 
            int (*eval_coord2dv)(); 
            int (*eval_coord2f)(); 
            int (*eval_coord2fv)(); 
            int (*eval_mesh1)(); 
            int (*eval_mesh2)(); 
            int (*eval_point1)(); 
            int (*eval_point2)(); 
            int (*feedback_buffer)(); 
            int (*finish)(); 
            int (*flush)(); 
            int (*fogf)(); 
            int (*fogfv)(); 
            int (*fogi)(); 
            int (*fogiv)(); 
            int (*front_face)(); 
            int (*frustum)(); 
            int (*gen_lists)(); 
            int (*gen_textures)(); 
            int (*get_booleanv)(); 
            int (*get_clip_plane)(); 
            int (*get_doublev)(); 
            int (*get_error)(); 
            int (*get_floatv)(); 
            int (*get_integerv)(); 
            int (*get_lightfv)(); 
            int (*get_lightiv)(); 
            int (*get_mapdv)(); 
            int (*get_mapfv)(); 
            int (*get_mapiv)(); 
            int (*get_materialfv)(); 
            int (*get_materialiv)(); 
            int (*get_pixel_mapfv)(); 
            int (*get_pixel_mapuiv)(); 
            int (*get_pixel_mapusv)(); 
            int (*get_pointerv)(); 
            int (*get_polygon_stipple)(); 
            int (*get_string)(); 
            int (*get_tex_envfv)(); 
            int (*get_tex_enviv)(); 
            int (*get_tex_gendv)(); 
            int (*get_tex_genfv)(); 
            int (*get_tex_geniv)(); 
            int (*get_tex_image)(); 
            int (*get_tex_level_parameterfv)(); 
            int (*get_tex_level_parameteriv)(); 
            int (*get_tex_parameterfv)(); 
            int (*get_tex_parameteriv)(); 
            int (*hint)(); 
            int (*index_mask)(); 
            int (*index_pointer)(); 
            int (*indexd)(); 
            int (*indexdv)(); 
            int (*indexf)(); 
            int (*indexfv)(); 
            int (*indexi)(); 
            int (*indexiv)(); 
            int (*indexs)(); 
            int (*indexsv)(); 
            int (*indexub)(); 
            int (*indexubv)(); 
            int (*init_names)(); 
            int (*interleaved_arrays)(); 
            int (*is_enabled)(); 
            int (*is_list)(); 
            int (*is_texture)(); 
            int (*light_modelf)(); 
            int (*light_modelfv)(); 
            int (*light_modeli)(); 
            int (*light_modeliv)(); 
            int (*lightf)(); 
            int (*lightfv)(); 
            int (*lighti)(); 
            int (*lightiv)(); 
            int (*line_stipple)(); 
            int (*line_width)(); 
            int (*list_base)(); 
            int (*load_identity)(); 
            int (*load_matrixd)(); 
            int (*load_matrixf)(); 
            int (*load_name)(); 
            int (*logic_op)(); 
            int (*map1d)(); 
            int (*map1f)(); 
            int (*map2d)(); 
            int (*map2f)(); 
            int (*map_grid1d)(); 
            int (*map_grid1f)(); 
            int (*map_grid2d)(); 
            int (*map_grid2f)(); 
            int (*materialf)(); 
            int (*materialfv)(); 
            int (*materiali)(); 
            int (*materialiv)(); 
            int (*matrix_mode)(); 
            int (*mult_matrixd)(); 
            int (*mult_matrixf)(); 
            int (*new_list)(); 
            int (*normal3b)(); 
            int (*normal3bv)(); 
            int (*normal3d)(); 
            int (*normal3dv)(); 
            int (*normal3f)(); 
            int (*normal3fv)(); 
            int (*normal3i)(); 
            int (*normal3iv)(); 
            int (*normal3s)(); 
            int (*normal3sv)(); 
            int (*normal_pointer)(); 
            int (*ortho)(); 
            int (*pass_through)(); 
            int (*pixel_mapfv)(); 
            int (*pixel_mapuiv)(); 
            int (*pixel_mapusv)(); 
            int (*pixel_storef)(); 
            int (*pixel_storei)(); 
            int (*pixel_transferf)(); 
            int (*pixel_transferi)(); 
            int (*pixel_zoom)(); 
            int (*point_size)(); 
            int (*polygon_mode)(); 
            int (*polygon_offset)(); 
            int (*polygon_stipple)(); 
            int (*pop_attrib)(); 
            int (*pop_client_attrib)(); 
            int (*pop_matrix)(); 
            int (*pop_name)(); 
            int (*prioritize_textures)(); 
            int (*push_attrib)(); 
            int (*push_client_attrib)(); 
            int (*push_matrix)(); 
            int (*push_name)(); 
            int (*raster_pos2d)(); 
            int (*raster_pos2dv)(); 
            int (*raster_pos2f)(); 
            int (*raster_pos2fv)(); 
            int (*raster_pos2i)(); 
            int (*raster_pos2iv)(); 
            int (*raster_pos2s)(); 
            int (*raster_pos2sv)(); 
            int (*raster_pos3d)(); 
            int (*raster_pos3dv)(); 
            int (*raster_pos3f)(); 
            int (*raster_pos3fv)(); 
            int (*raster_pos3i)(); 
            int (*raster_pos3iv)(); 
            int (*raster_pos3s)(); 
            int (*raster_pos3sv)(); 
            int (*raster_pos4d)(); 
            int (*raster_pos4dv)(); 
            int (*raster_pos4f)(); 
            int (*raster_pos4fv)(); 
            int (*raster_pos4i)(); 
            int (*raster_pos4iv)(); 
            int (*raster_pos4s)(); 
            int (*raster_pos4sv)(); 
            int (*read_buffer)(); 
            int (*read_pixels)(); 
            int (*rectd)(); 
            int (*rectdv)(); 
            int (*rectf)(); 
            int (*rectfv)(); 
            int (*recti)(); 
            int (*rectiv)(); 
            int (*rects)(); 
            int (*rectsv)(); 
            int (*render_mode)(); 
            int (*rotated)(); 
            int (*rotatef)(); 
            int (*scaled)(); 
            int (*scalef)(); 
            int (*scissor)(); 
            int (*select_buffer)(); 
            int (*shade_model)(); 
            int (*stencil_func)(); 
            int (*stencil_mask)(); 
            int (*stencil_op)(); 
            int (*tex_coord1d)(); 
            int (*tex_coord1dv)(); 
            int (*tex_coord1f)(); 
            int (*tex_coord1fv)(); 
            int (*tex_coord1i)(); 
            int (*tex_coord1iv)(); 
            int (*tex_coord1s)(); 
            int (*tex_coord1sv)(); 
            int (*tex_coord2d)(); 
            int (*tex_coord2dv)(); 
            int (*tex_coord2f)(); 
            int (*tex_coord2fv)(); 
            int (*tex_coord2i)(); 
            int (*tex_coord2iv)(); 
            int (*tex_coord2s)(); 
            int (*tex_coord2sv)(); 
            int (*tex_coord3d)(); 
            int (*tex_coord3dv)(); 
            int (*tex_coord3f)(); 
            int (*tex_coord3fv)(); 
            int (*tex_coord3i)(); 
            int (*tex_coord3iv)(); 
            int (*tex_coord3s)(); 
            int (*tex_coord3sv)(); 
            int (*tex_coord4d)(); 
            int (*tex_coord4dv)(); 
            int (*tex_coord4f)(); 
            int (*tex_coord4fv)(); 
            int (*tex_coord4i)(); 
            int (*tex_coord4iv)(); 
            int (*tex_coord4s)(); 
            int (*tex_coord4sv)(); 
            int (*tex_coord_pointer)(); 
            int (*tex_envf)(); 
            int (*tex_envfv)(); 
            int (*tex_envi)(); 
            int (*tex_enviv)(); 
            int (*tex_gend)(); 
            int (*tex_gendv)(); 
            int (*tex_genf)(); 
            int (*tex_genfv)(); 
            int (*tex_geni)(); 
            int (*tex_geniv)(); 
            int (*tex_image1D)(); 
            int (*tex_image2D)(); 
            int (*tex_parameterf)(); 
            int (*tex_parameterfv)(); 
            int (*tex_parameteri)(); 
            int (*tex_parameteriv)(); 
            int (*tex_sub_image1D)(); 
            int (*tex_sub_image2D)(); 
            int (*translated)(); 
            int (*translatef)(); 
            int (*vertex2d)(); 
            int (*vertex2dv)(); 
            int (*vertex2f)(); 
            int (*vertex2fv)(); 
            int (*vertex2i)(); 
            int (*vertex2iv)(); 
            int (*vertex2s)(); 
            int (*vertex2sv)(); 
            int (*vertex3d)(); 
            int (*vertex3dv)(); 
            int (*vertex3f)(); 
            int (*vertex3fv)(); 
            int (*vertex3i)(); 
            int (*vertex3iv)(); 
            int (*vertex3s)(); 
            int (*vertex3sv)(); 
            int (*vertex4d)(); 
            int (*vertex4dv)(); 
            int (*vertex4f)(); 
            int (*vertex4fv)(); 
            int (*vertex4i)(); 
            int (*vertex4iv)(); 
            int (*vertex4s)(); 
            int (*vertex4sv)(); 
            int (*vertex_pointer)(); 
            int (*viewport)(); 
            int (*blend_func_separate)(); 
            int (*blend_color)(); 
            int (*blend_equation)(); 
            int (*lock_arrays_EXT)(); 
            int (*unlock_arrays_EXT)(); 
            int (*client_active_texture)(); 
            int (*active_texture)(); 
            int (*multi_tex_coord1d)(); 
            int (*multi_tex_coord1dv)(); 
            int (*multi_tex_coord1f)(); 
            int (*multi_tex_coord1fv)(); 
            int (*multi_tex_coord1i)(); 
            int (*multi_tex_coord1iv)(); 
            int (*multi_tex_coord1s)(); 
            int (*multi_tex_coord1sv)(); 
            int (*multi_tex_coord2d)(); 
            int (*multi_tex_coord2dv)(); 
            int (*multi_tex_coord2f)(); 
            int (*multi_tex_coord2fv)(); 
            int (*multi_tex_coord2i)(); 
            int (*multi_tex_coord2iv)(); 
            int (*multi_tex_coord2s)(); 
            int (*multi_tex_coord2sv)(); 
            int (*multi_tex_coord3d)(); 
            int (*multi_tex_coord3dv)(); 
            int (*multi_tex_coord3f)(); 
            int (*multi_tex_coord3fv)(); 
            int (*multi_tex_coord3i)(); 
            int (*multi_tex_coord3iv)(); 
            int (*multi_tex_coord3s)(); 
            int (*multi_tex_coord3sv)(); 
            int (*multi_tex_coord4d)(); 
            int (*multi_tex_coord4dv)(); 
            int (*multi_tex_coord4f)(); 
            int (*multi_tex_coord4fv)(); 
            int (*multi_tex_coord4i)(); 
            int (*multi_tex_coord4iv)(); 
            int (*multi_tex_coord4s)(); 
            int (*multi_tex_coord4sv)(); 
            int (*load_transpose_matrixd)(); 
            int (*load_transpose_matrixf)(); 
            int (*mult_transpose_matrixd)(); 
            int (*mult_transpose_matrixf)(); 
            int (*compressed_tex_image3D)(); 
            int (*compressed_tex_image2D)(); 
            int (*compressed_tex_image1D)(); 
            int (*compressed_tex_sub_image3D)(); 
            int (*compressed_tex_sub_image2D)(); 
            int (*compressed_tex_sub_image1D)(); 
            int (*get_compressed_tex_image)(); 
            int (*secondary_color3b)(); 
            int (*secondary_color3bv)(); 
            int (*secondary_color3d)(); 
            int (*secondary_color3dv)(); 
            int (*secondary_color3f)(); 
            int (*secondary_color3fv)(); 
            int (*secondary_color3i)(); 
            int (*secondary_color3iv)(); 
            int (*secondary_color3s)(); 
            int (*secondary_color3sv)(); 
            int (*secondary_color3ub)(); 
            int (*secondary_color3ubv)(); 
            int (*secondary_color3ui)(); 
            int (*secondary_color3uiv)(); 
            int (*secondary_color3us)(); 
            int (*secondary_color3usv)(); 
            int (*secondary_color_pointer)(); 
            int (*vertex_array_range_EXT)(); 
            int (*flush_vertex_array_range_EXT)(); 
            int (*draw_range_elements)(); 
            int (*color_table)(); 
            int (*color_table_parameterfv)(); 
            int (*color_table_parameteriv)(); 
            int (*copy_color_table)(); 
            int (*get_color_table)(); 
            int (*get_color_table_parameterfv)(); 
            int (*get_color_table_parameteriv)(); 
            int (*color_sub_table)(); 
            int (*copy_color_sub_table)(); 
            int (*convolution_filter1D)(); 
            int (*convolution_filter2D)(); 
            int (*convolution_parameterf)(); 
            int (*convolution_parameterfv)(); 
            int (*convolution_parameteri)(); 
            int (*convolution_parameteriv)(); 
            int (*copy_convolution_filter1D)(); 
            int (*copy_convolution_filter2D)(); 
            int (*get_convolution_filter)(); 
            int (*get_convolution_parameterfv)(); 
            int (*get_convolution_parameteriv)(); 
            int (*get_separable_filter)(); 
            int (*separable_filter2D)(); 
            int (*get_histogram)(); 
            int (*get_histogram_parameterfv)(); 
            int (*get_histogram_parameteriv)(); 
            int (*get_minmax)(); 
            int (*get_minmax_parameterfv)(); 
            int (*get_minmax_parameteriv)(); 
            int (*histogram)(); 
            int (*minmax)(); 
            int (*reset_histogram)(); 
            int (*reset_minmax)(); 
            int (*tex_image3D)(); 
            int (*tex_sub_image3D)(); 
            int (*copy_tex_sub_image3D)(); 
            int (*get_uniform_indices)(); 
            int (*get_active_uniformsiv)(); 
            int (*get_active_uniform_name)(); 
            int (*get_uniform_block_index)(); 
            int (*get_active_uniform_blockiv)(); 
            int (*get_active_uniform_block_name)(); 
            int (*uniform_block_binding)(); 
            int (*get_combiner_input_parameterfv_NV)(); 
            int (*get_combiner_input_parameteriv_NV)(); 
            int (*get_combiner_output_parameterfv_NV)(); 
            int (*get_combiner_output_parameteriv_NV)(); 
            int (*get_final_combiner_input_parameterfv_NV)(); 
            int (*get_final_combiner_input_parameteriv_NV)(); 
            int (*combiner_stage_parameterfv_NV)(); 
            int (*get_combiner_stage_parameterfv_NV)(); 
            int (*texture_range_APPLE)(); 
            int (*get_tex_parameter_pointerv_APPLE)(); 
            int (*blend_equation_separate_EXT)(); 
            int (*sample_coverage)(); 
            int (*sample_pass)(); 
            int (*pn_trianglesi_ATI)(); 
            int (*pn_trianglesf_ATI)(); 
            int (*gen_fences_APPLE)(); 
            int (*delete_fences_APPLE)(); 
            int (*set_fence_APPLE)(); 
            int (*is_fence_APPLE)(); 
            int (*test_fence_APPLE)(); 
            int (*finish_fence_APPLE)(); 
            int (*test_object_APPLE)(); 
            int (*finish_object_APPLE)(); 
            int (*bind_program_ARB)(); 
            int (*delete_programs_ARB)(); 
            int (*gen_programs_ARB)(); 
            int (*is_program_ARB)(); 
            int (*vertex_attrib1s_ARB)(); 
            int (*vertex_attrib1f_ARB)(); 
            int (*vertex_attrib1d_ARB)(); 
            int (*vertex_attrib2s_ARB)(); 
            int (*vertex_attrib2f_ARB)(); 
            int (*vertex_attrib2d_ARB)(); 
            int (*vertex_attrib3s_ARB)(); 
            int (*vertex_attrib3f_ARB)(); 
            int (*vertex_attrib3d_ARB)(); 
            int (*vertex_attrib4s_ARB)(); 
            int (*vertex_attrib4f_ARB)(); 
            int (*vertex_attrib4d_ARB)(); 
            int (*vertex_attrib4Nub_ARB)(); 
            int (*vertex_attrib1sv_ARB)(); 
            int (*vertex_attrib1fv_ARB)(); 
            int (*vertex_attrib1dv_ARB)(); 
            int (*vertex_attrib2sv_ARB)(); 
            int (*vertex_attrib2fv_ARB)(); 
            int (*vertex_attrib2dv_ARB)(); 
            int (*vertex_attrib3sv_ARB)(); 
            int (*vertex_attrib3fv_ARB)(); 
            int (*vertex_attrib3dv_ARB)(); 
            int (*vertex_attrib4bv_ARB)(); 
            int (*vertex_attrib4sv_ARB)(); 
            int (*vertex_attrib4iv_ARB)(); 
            int (*vertex_attrib4ubv_ARB)(); 
            int (*vertex_attrib4usv_ARB)(); 
            int (*vertex_attrib4uiv_ARB)(); 
            int (*vertex_attrib4fv_ARB)(); 
            int (*vertex_attrib4dv_ARB)(); 
            int (*vertex_attrib4Nbv_ARB)(); 
            int (*vertex_attrib4Nsv_ARB)(); 
            int (*vertex_attrib4Niv_ARB)(); 
            int (*vertex_attrib4Nubv_ARB)(); 
            int (*vertex_attrib4Nusv_ARB)(); 
            int (*vertex_attrib4Nuiv_ARB)(); 
            int (*vertex_attrib_pointer_ARB)(); 
            int (*enable_vertex_attrib_array_ARB)(); 
            int (*disable_vertex_attrib_array_ARB)(); 
            int (*get_vertex_attribdv_ARB)(); 
            int (*get_vertex_attribfv_ARB)(); 
            int (*get_vertex_attribiv_ARB)(); 
            int (*get_vertex_attrib_pointerv_ARB)(); 
            int (*program_env_parameter4d_ARB)(); 
            int (*program_env_parameter4dv_ARB)(); 
            int (*program_env_parameter4f_ARB)(); 
            int (*program_env_parameter4fv_ARB)(); 
            int (*program_local_parameter4d_ARB)(); 
            int (*program_local_parameter4dv_ARB)(); 
            int (*program_local_parameter4f_ARB)(); 
            int (*program_local_parameter4fv_ARB)(); 
            int (*get_program_env_parameterdv_ARB)(); 
            int (*get_program_env_parameterfv_ARB)(); 
            int (*get_program_local_parameterdv_ARB)(); 
            int (*get_program_local_parameterfv_ARB)(); 
            int (*program_string_ARB)(); 
            int (*get_program_string_ARB)(); 
            int (*get_programiv_ARB)(); 
            int (*enable_vertex_attrib_ARB)(); 
            int (*disable_vertex_attrib_ARB)(); 
            int (*is_vertex_attrib_enabled_ARB)(); 
            int (*map_vertex_attrib1d_ARB)(); 
            int (*map_vertex_attrib1f_ARB)(); 
            int (*map_vertex_attrib2d_ARB)(); 
            int (*map_vertex_attrib2f_ARB)(); 
            int (*point_parameterf)(); 
            int (*point_parameterfv)(); 
            int (*point_parameteri)(); 
            int (*point_parameteriv)(); 
            int (*fog_coordf)(); 
            int (*fog_coordfv)(); 
            int (*fog_coordd)(); 
            int (*fog_coorddv)(); 
            int (*fog_coord_pointer)(); 
            int (*vertex_array_parameteri_EXT)(); 
            int (*bind_vertex_array_EXT)(); 
            int (*delete_vertex_arrays_EXT)(); 
            int (*gen_vertex_arrays_EXT)(); 
            int (*is_vertex_array_EXT)(); 
            int (*element_pointer_APPLE)(); 
            int (*draw_element_array_APPLE)(); 
            int (*draw_range_element_array_APPLE)(); 
            int (*weightbv_ARB)(); 
            int (*weightsv_ARB)(); 
            int (*weightiv_ARB)(); 
            int (*weightfv_ARB)(); 
            int (*weightdv_ARB)(); 
            int (*weightubv_ARB)(); 
            int (*weightusv_ARB)(); 
            int (*weightuiv_ARB)(); 
            int (*weight_pointer_ARB)(); 
            int (*vertex_blend_ARB)(); 
            int (*multi_draw_arrays)(); 
            int (*multi_draw_elements)(); 
            int (*window_pos2d)(); 
            int (*window_pos2dv)(); 
            int (*window_pos2f)(); 
            int (*window_pos2fv)(); 
            int (*window_pos2i)(); 
            int (*window_pos2iv)(); 
            int (*window_pos2s)(); 
            int (*window_pos2sv)(); 
            int (*window_pos3d)(); 
            int (*window_pos3dv)(); 
            int (*window_pos3f)(); 
            int (*window_pos3fv)(); 
            int (*window_pos3i)(); 
            int (*window_pos3iv)(); 
            int (*window_pos3s)(); 
            int (*window_pos3sv)(); 
            int (*active_stencil_face_EXT)(); 
            int (*stencil_op_separate_ATI)(); 
            int (*stencil_func_separate_ATI)(); 
            int (*flush_render_APPLE)(); 
            int (*finish_render_APPLE)(); 
            int (*swap_APPLE)(); 
            int (*delete_object_ARB)(); 
            int (*get_handle_ARB)(); 
            int (*detach_object_ARB)(); 
            int (*create_shader_object_ARB)(); 
            int (*shader_source_ARB)(); 
            int (*compile_shader_ARB)(); 
            int (*create_program_object_ARB)(); 
            int (*attach_object_ARB)(); 
            int (*link_program_ARB)(); 
            int (*use_program_object_ARB)(); 
            int (*validate_program_ARB)(); 
            int (*uniform1f_ARB)(); 
            int (*uniform2f_ARB)(); 
            int (*uniform3f_ARB)(); 
            int (*uniform4f_ARB)(); 
            int (*uniform1i_ARB)(); 
            int (*uniform2i_ARB)(); 
            int (*uniform3i_ARB)(); 
            int (*uniform4i_ARB)(); 
            int (*uniform1fv_ARB)(); 
            int (*uniform2fv_ARB)(); 
            int (*uniform3fv_ARB)(); 
            int (*uniform4fv_ARB)(); 
            int (*uniform1iv_ARB)(); 
            int (*uniform2iv_ARB)(); 
            int (*uniform3iv_ARB)(); 
            int (*uniform4iv_ARB)(); 
            int (*uniform_matrix2fv_ARB)(); 
            int (*uniform_matrix3fv_ARB)(); 
            int (*uniform_matrix4fv_ARB)(); 
            int (*get_object_parameterfv_ARB)(); 
            int (*get_object_parameteriv_ARB)(); 
            int (*get_info_log_ARB)(); 
            int (*get_attached_objects_ARB)(); 
            int (*get_uniform_location_ARB)(); 
            int (*get_active_uniform_ARB)(); 
            int (*get_uniformfv_ARB)(); 
            int (*get_uniformiv_ARB)(); 
            int (*get_shader_source_ARB)(); 
            int (*bind_attrib_location_ARB)(); 
            int (*get_active_attrib_ARB)(); 
            int (*get_attrib_location_ARB)(); 
            int (*clamp_color_ARB)(); 
            int (*gen_queries)(); 
            int (*delete_queries)(); 
            int (*is_query)(); 
            int (*begin_query)(); 
            int (*end_query)(); 
            int (*get_queryiv)(); 
            int (*get_query_objectiv)(); 
            int (*get_query_objectuiv)(); 
            int (*bind_buffer)(); 
            int (*delete_buffers)(); 
            int (*gen_buffers)(); 
            int (*is_buffer)(); 
            int (*buffer_data)(); 
            int (*buffer_sub_data)(); 
            int (*get_buffer_sub_data)(); 
            int (*map_buffer)(); 
            int (*unmap_buffer)(); 
            int (*get_buffer_parameteriv)(); 
            int (*get_buffer_pointerv)(); 
            int (*depth_bounds_EXT)(); 
            int (*draw_buffers_ARB)(); 
            int (*is_shader)(); 
            int (*is_program)(); 
            int (*get_shaderiv)(); 
            int (*get_programiv)(); 
            int (*get_shader_info_log)(); 
            int (*get_program_info_log)(); 
            int (*stencil_func_separate)(); 
            int (*stencil_mask_separate)(); 
            int (*multi_draw_element_array_APPLE)(); 
            int (*multi_draw_range_element_array_APPLE)(); 
            int (*is_renderbuffer_EXT)(); 
            int (*bind_renderbuffer_EXT)(); 
            int (*delete_renderbuffers_EXT)(); 
            int (*gen_renderbuffers_EXT)(); 
            int (*renderbuffer_storage_EXT)(); 
            int (*get_renderbuffer_parameteriv_EXT)(); 
            int (*is_framebuffer_EXT)(); 
            int (*bind_framebuffer_EXT)(); 
            int (*delete_framebuffers_EXT)(); 
            int (*gen_framebuffers_EXT)(); 
            int (*check_framebuffer_status_EXT)(); 
            int (*framebuffer_texture1D_EXT)(); 
            int (*framebuffer_texture2D_EXT)(); 
            int (*framebuffer_texture3D_EXT)(); 
            int (*framebuffer_renderbuffer_EXT)(); 
            int (*get_framebuffer_attachment_parameteriv_EXT)(); 
            int (*generate_mipmap_EXT)(); 
            int (*buffer_parameteri_APPLE)(); 
            int (*flush_mapped_buffer_range_APPLE)(); 
            int (*program_env_parameters4fv_EXT)(); 
            int (*program_local_parameters4fv_EXT)(); 
            int (*object_purgeable_APPLE)(); 
            int (*object_unpurgeable_APPLE)(); 
            int (*get_object_parameteriv_APPLE)(); 
            int (*program_parameteri_EXT)(); 
            int (*framebuffer_texture_EXT)(); 
            int (*framebuffer_texture_layer_EXT)(); 
            int (*framebuffer_texture_face_EXT)(); 
            int (*bind_buffer_range_EXT)(); 
            int (*bind_buffer_offset_EXT)(); 
            int (*bind_buffer_base_EXT)(); 
            int (*begin_transform_feedback_EXT)(); 
            int (*end_transform_feedback_EXT)(); 
            int (*transform_feedback_varyings_EXT)(); 
            int (*get_transform_feedback_varying_EXT)(); 
            int (*get_integer_indexedv_EXT)(); 
            int (*get_boolean_indexedv_EXT)(); 
            int (*uniform_buffer_EXT)(); 
            int (*get_uniform_buffer_size_EXT)(); 
            int (*get_uniform_buffer_offset_EXT)(); 
            int (*clear_colorIi_EXT)(); 
            int (*clear_colorIui_EXT)(); 
            int (*tex_parameterIiv_EXT)(); 
            int (*tex_parameterIuiv_EXT)(); 
            int (*get_tex_parameterIiv_EXT)(); 
            int (*get_tex_parameterIuiv_EXT)(); 
            int (*vertex_attribI1i_EXT)(); 
            int (*vertex_attribI2i_EXT)(); 
            int (*vertex_attribI3i_EXT)(); 
            int (*vertex_attribI4i_EXT)(); 
            int (*vertex_attribI1ui_EXT)(); 
            int (*vertex_attribI2ui_EXT)(); 
            int (*vertex_attribI3ui_EXT)(); 
            int (*vertex_attribI4ui_EXT)(); 
            int (*vertex_attribI1iv_EXT)(); 
            int (*vertex_attribI2iv_EXT)(); 
            int (*vertex_attribI3iv_EXT)(); 
            int (*vertex_attribI4iv_EXT)(); 
            int (*vertex_attribI1uiv_EXT)(); 
            int (*vertex_attribI2uiv_EXT)(); 
            int (*vertex_attribI3uiv_EXT)(); 
            int (*vertex_attribI4uiv_EXT)(); 
            int (*vertex_attribI4bv_EXT)(); 
            int (*vertex_attribI4sv_EXT)(); 
            int (*vertex_attribI4ubv_EXT)(); 
            int (*vertex_attribI4usv_EXT)(); 
            int (*vertex_attribI_pointer_EXT)(); 
            int (*get_vertex_attribIiv_EXT)(); 
            int (*get_vertex_attribIuiv_EXT)(); 
            int (*uniform1ui_EXT)(); 
            int (*uniform2ui_EXT)(); 
            int (*uniform3ui_EXT)(); 
            int (*uniform4ui_EXT)(); 
            int (*uniform1uiv_EXT)(); 
            int (*uniform2uiv_EXT)(); 
            int (*uniform3uiv_EXT)(); 
            int (*uniform4uiv_EXT)(); 
            int (*get_uniformuiv_EXT)(); 
            int (*bind_frag_data_location_EXT)(); 
            int (*get_frag_data_location_EXT)(); 
            int (*color_mask_indexed_EXT)(); 
            int (*enable_indexed_EXT)(); 
            int (*disable_indexed_EXT)(); 
            int (*is_enabled_indexed_EXT)(); 
            int (*uniform_matrix2x3fv)(); 
            int (*uniform_matrix3x2fv)(); 
            int (*uniform_matrix2x4fv)(); 
            int (*uniform_matrix4x2fv)(); 
            int (*uniform_matrix3x4fv)(); 
            int (*uniform_matrix4x3fv)(); 
            int (*blit_framebuffer_EXT)(); 
            int (*renderbuffer_storage_multisample_EXT)(); 
            int (*begin_conditional_render_NV)(); 
            int (*end_conditional_render_NV)(); 
            int (*get_attached_shaders)(); 
            int (*provoking_vertex_EXT)(); 
            int (*vertex_attrib_divisor)(); 
            int (*draw_arrays_instanced)(); 
            int (*draw_elements_instanced)(); 
            int (*draw_elements_base_vertex)(); 
            int (*draw_range_elements_base_vertex)(); 
            int (*draw_elements_instanced_base_vertex)(); 
            int (*multi_draw_elements_base_vertex)(); 
            int (*bind_vertex_array_ARB)(); 
            int (*delete_vertex_arrays_ARB)(); 
            int (*gen_vertex_arrays_ARB)(); 
            int (*is_vertex_array_ARB)(); 
            int (*vertex_point_sizef_APPLE)(); 
            int (*tex_image2D_multisample)(); 
            int (*tex_image3D_multisample)(); 
            int (*get_multisamplefv)(); 
            int (*sample_maski)(); 
            int (*alpha_funcx)(); 
            int (*clear_colorx)(); 
            int (*clear_depthf)(); 
            int (*clear_depthx)(); 
            int (*clip_planef)(); 
            int (*clip_planex)(); 
            int (*color4x)(); 
            int (*depth_rangef)(); 
            int (*depth_rangex)(); 
            int (*fogx)(); 
            int (*fogxv)(); 
            int (*frustumf)(); 
            int (*frustumx)(); 
            int (*get_clip_planef)(); 
            int (*get_clip_planex)(); 
            int (*get_fixedv)(); 
            int (*get_lightxv)(); 
            int (*get_materialxv)(); 
            int (*get_tex_envxv)(); 
            int (*get_tex_parameterxv)(); 
            int (*light_modelx)(); 
            int (*light_modelxv)(); 
            int (*lightx)(); 
            int (*lightxv)(); 
            int (*line_widthx)(); 
            int (*load_matrixx)(); 
            int (*materialx)(); 
            int (*materialxv)(); 
            int (*mult_matrixx)(); 
            int (*normal3x)(); 
            int (*orthof)(); 
            int (*orthox)(); 
            int (*point_sizex)(); 
            int (*polygon_offsetx)(); 
            int (*rotatex)(); 
            int (*scalex)(); 
            int (*tex_envx)(); 
            int (*tex_envxv)(); 
            int (*tex_parameterx)(); 
            int (*tex_parameterxv)(); 
            int (*translatex)(); 
            int (*multi_tex_coord4x)(); 
            int (*sample_coveragex)(); 
            int (*point_parameterx)(); 
            int (*point_parameterxv)(); 
            int (*point_size_pointer)(); 
            int (*current_palette_matrix_OES)(); 
            int (*load_palette_from_modelview_matrix_OES)(); 
            int (*matrix_index_pointer_OES)(); 
            int (*weight_pointer_OES)(); 
            int (*drawtexs_OES)(); 
            int (*drawtexi_OES)(); 
            int (*drawtexx_OES)(); 
            int (*drawtexsv_OES)(); 
            int (*drawtexiv_OES)(); 
            int (*drawtexxv_OES)(); 
            int (*drawtexf_OES)(); 
            int (*drawtexfv_OES)(); 
            int (*shader_binary_OES)(); 
            int (*get_shader_precision_format_OES)(); 
            int (*release_shader_compiler_OES)(); 
            int (*discard_framebuffer_EXT)(); 
            int (*framebuffer_parameteri_APPLE)(); 
            int (*resolve_multisample_framebuffer_APPLE)(); 
        } x30; } *_private;

}

@property(readonly) NSUInteger API;
@property(readonly) EAGLSharegroup *sharegroup;

+ (BOOL)setCurrentContext:(id)arg1;
+ (id)currentContext;

- (id)initWithAPI:(NSUInteger)arg1 sharegroup:(id)arg2;
- (id)initWithAPI:(NSUInteger)arg1;
- (id)sharegroup;
- (BOOL)attachImage:(NSUInteger)arg1 toCoreSurface:(struct __IOSurface { }*)arg2 invertedRender:(BOOL)arg3;
- (BOOL)presentRenderbuffer:(NSUInteger)arg1;
- (BOOL)renderbufferStorage:(NSUInteger)arg1 fromDrawable:(id)arg2;
- (BOOL)texImageIOSurface:(struct __IOSurface { }*)arg1 target:(NSUInteger)arg2 internalFormat:(NSUInteger)arg3 width:(NSUInteger)arg4 height:(NSUInteger)arg5 format:(NSUInteger)arg6 type:(NSUInteger)arg7 plane:(NSUInteger)arg8 invert:(BOOL)arg9;
- (NSUInteger)setParameter:(NSUInteger)arg1 to:(NSInteger*)arg2;
- (NSUInteger)getParameter:(NSUInteger)arg1 to:(NSInteger*)arg2;
- (void)dealloc;
- (NSUInteger)API;
- (id)initWithAPI:(NSUInteger)arg1 properties:(id)arg2;
- (void)swapNotification:(struct __IOMobileFramebuffer { }*)arg1 forTransaction:(NSUInteger)arg2 onLayer:(NSUInteger)arg3;
- (void)sendNotification:(NSUInteger)arg1 forTransaction:(NSUInteger)arg2 onLayer:(NSUInteger)arg3;

@end
