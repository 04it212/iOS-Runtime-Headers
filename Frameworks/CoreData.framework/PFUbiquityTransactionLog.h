/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreData.framework/CoreData
 */

@class NSNumber, PFUbiquityKnowledgeVector, NSString, PFUbiquitySaveSnapshot, PFUbiquityLocation, NSMutableDictionary;

@interface PFUbiquityTransactionLog : NSObject {
    NSMutableDictionary *_contents;
    NSString *_fileProtectionOption;
    BOOL _inPermanentLocation;
    BOOL _inStagingLocation;
    BOOL _inTemporaryLocation;
    PFUbiquityKnowledgeVector *_knowledgeVector;
    PFUbiquitySaveSnapshot *_saveSnapshot;
    PFUbiquityLocation *_stagingTransactionLogLocation;
    PFUbiquityLocation *_temporaryTransactionLogLocation;
    PFUbiquityLocation *_transactionLogLocation;
    int _transactionLogType;
    NSNumber *_transactionNumber;
    BOOL _useTemporaryLogLocation;
}

@property(readonly) PFUbiquityLocation * currentLocation;
@property(readonly) NSString * exportingPeerID;
@property(readonly) NSString * fileProtectionOption;
@property(readonly) BOOL inPermanentLocation;
@property(readonly) BOOL inStagingLocation;
@property(readonly) BOOL inTemporaryLocation;
@property(readonly) PFUbiquityKnowledgeVector * knowledgeVector;
@property(readonly) NSString * modelVersionHash;
@property(readonly) PFUbiquitySaveSnapshot * saveSnapshot;
@property(readonly) PFUbiquityLocation * stagingTransactionLogLocation;
@property(readonly) NSString * storeName;
@property(readonly) PFUbiquityLocation * temporaryTransactionLogLocation;
@property(readonly) NSString * transactionLogFilename;
@property(readonly) PFUbiquityLocation * transactionLogLocation;
@property(readonly) int transactionLogType;
@property(readonly) NSNumber * transactionNumber;
@property BOOL useTemporaryLogLocation;

+ (id)createTransactionLogFilenameForLogType:(int)arg1;
+ (id)generateTransactionLogFilename;
+ (id)loadPlistAtLocation:(id)arg1 withError:(id*)arg2;
+ (void)pruneStagingDirectoryForLocalPeerID:(id)arg1 andStoreName:(id)arg2 andModelVersionHash:(id)arg3 withStack:(id)arg4 andStoreTransactionNumber:(id)arg5;
+ (id)transactionLogFilenameUUID;
+ (int)transactionLogTypeFromLocation:(id)arg1;
+ (void)truncateLogFilesBeforeBaselineMetadata:(id)arg1 withLocalPeerID:(id)arg2 andUbiquityRootLocation:(id)arg3;
+ (void)updateModificationTimesForLocation:(id)arg1;

- (void)cleanupExternalDataReferences;
- (id)currentLocation;
- (void)dealloc;
- (BOOL)deleteLogFileWithError:(id*)arg1;
- (id)description;
- (id)exportingPeerID;
- (id)fileProtectionOption;
- (id)generatePeerCodeKnowledgeVectorWithManagedObjectContext:(id)arg1;
- (BOOL)inPermanentLocation;
- (BOOL)inStagingLocation;
- (BOOL)inTemporaryLocation;
- (id)init;
- (id)initWithStoreName:(id)arg1 andSaveSnapshot:(id)arg2;
- (id)initWithTransactionLogLocation:(id)arg1;
- (id)initWithTransactionLogURL:(id)arg1 andUbiquityRootLocation:(id)arg2;
- (id)knowledgeVector;
- (BOOL)loadComparisonMetadataWithError:(id*)arg1;
- (BOOL)loadDeletedObjectsDataWithError:(id*)arg1;
- (BOOL)loadImportMetadataWithError:(id*)arg1;
- (BOOL)loadInsertedObjectsDataWithError:(id*)arg1;
- (BOOL)loadUpdatedObjectsDataWithError:(id*)arg1;
- (id)modelVersionHash;
- (BOOL)moveFileToPermanentLocationWithError:(id*)arg1;
- (void)populateContents;
- (id)saveSnapshot;
- (void)setUseTemporaryLogLocation:(BOOL)arg1;
- (id)stagingTransactionLogLocation;
- (id)storeName;
- (id)temporaryTransactionLogLocation;
- (id)transactionLogFilename;
- (id)transactionLogLocation;
- (int)transactionLogType;
- (id)transactionNumber;
- (BOOL)useTemporaryLogLocation;
- (BOOL)writeToDiskWithError:(id*)arg1 andUpdateFilenameInTransactionEntries:(id)arg2;

@end
