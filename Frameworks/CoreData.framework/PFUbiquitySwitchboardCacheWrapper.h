/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/CoreData.framework/CoreData
 */

@class PFUbiquityGlobalObjectIDCache, PFUbiquityBaseline, PFUbiquityPeerRangeCache, PFUbiquityPeerReceipt, NSLock, NSObject<OS_dispatch_semaphore>, PFUbiquityLocation, PFUbiquityTransactionLogCache, NSString, PFUbiquityTransactionHistoryCache, PFUbiquityKnowledgeVector;

@interface PFUbiquitySwitchboardCacheWrapper : NSObject  {
    NSString *_localPeerID;
    PFUbiquityLocation *_ubiquityRootLocation;
    PFUbiquityGlobalObjectIDCache *_globalIDCache;
    PFUbiquityPeerRangeCache *_peerRangeCache;
    PFUbiquityTransactionLogCache *_transactionLogCache;
    PFUbiquityTransactionHistoryCache *_transactionHistoryCache;
    PFUbiquityKnowledgeVector *_kv;
    PFUbiquityPeerReceipt *_peerReceipt;
    BOOL _pendingReceiptWrite;
    NSLock *_receiptFileLock;
    BOOL _allowSchedulingOfReceiptFileWrites;
    PFUbiquityBaseline *_baseline;
    BOOL _pendingBaselineMove;
    BOOL _baselineUploaded;
    NSLock *_baselineLock;
    BOOL _allowReplacementOfBaseline;
    NSObject<OS_dispatch_semaphore> *_baselineSemaphore;
}

@property(readonly) PFUbiquityGlobalObjectIDCache * globalIDCache;
@property(readonly) PFUbiquityPeerRangeCache * peerRangeCache;
@property(readonly) PFUbiquityTransactionLogCache * transactionLogCache;
@property(readonly) PFUbiquityTransactionHistoryCache * transactionHistoryCache;
@property(readonly) PFUbiquityPeerReceipt * peerReceipt;
@property(retain) PFUbiquityKnowledgeVector * kv;
@property(readonly) NSString * localPeerID;
@property(readonly) PFUbiquityLocation * ubiquityRootLocation;
@property(readonly) BOOL pendingBaselineMove;


- (void)dealloc;
- (id)init;
- (void)cachePeerReceipt:(id)arg1;
- (void)timerFinishedUploadingPeerFile;
- (void)checkPeerFileUploaded;
- (BOOL)writeReceiptFile:(id*)arg1;
- (BOOL)pendingBaselineMove;
- (id)globalIDCache;
- (BOOL)monitorUploadOfBaseline:(id)arg1 synchronously:(BOOL)arg2 error:(id*)arg3;
- (void)cacheWrapperWillBeRemovedFromEntry;
- (id)initWithStoreName:(id)arg1 privateStore:(id)arg2 forLocalPeerID:(id)arg3 andUbiquityRootLocation:(id)arg4;
- (id)kv;
- (id)peerReceipt;
- (id)transactionLogCache;
- (void)scheduleReceiptFileWrite:(id)arg1;
- (void)setKv:(id)arg1;
- (id)transactionHistoryCache;
- (id)ubiquityRootLocation;
- (id)peerRangeCache;
- (id)localPeerID;

@end
