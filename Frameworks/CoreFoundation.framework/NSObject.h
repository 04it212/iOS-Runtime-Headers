/* Generated by RuntimeBrowser on iPhone OS 3.0
   Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */



@interface NSObject <NSObject>
{
    Class isa;
}

@property(readonly) BOOL _mapkit_hasPanoramaID;

+ (void)load;
+ (void)initialize;
+ (id)self;
+ (Class)class;
+ (Class)superclass;
+ (BOOL)isMemberOfClass:(Class)arg1;
+ (BOOL)isKindOfClass:(Class)arg1;
+ (BOOL)isSubclassOfClass:(Class)arg1;
+ (BOOL)isAncestorOfObject:(id)arg1;
+ (BOOL)instancesRespondToSelector:(SEL)arg1;
+ (BOOL)respondsToSelector:(SEL)arg1;
+ (BOOL)conformsToProtocol:(id)arg1;
+ (NSUInteger)hash;
+ (BOOL)isEqual:(id)arg1;
+ (BOOL)isFault;
+ (BOOL)isProxy;
+ (int (*)())instanceMethodForSelector:(SEL)arg1;
+ (int (*)())methodForSelector:(SEL)arg1;
+ (BOOL)resolveClassMethod:(SEL)arg1;
+ (BOOL)resolveInstanceMethod:(SEL)arg1;
+ (void)doesNotRecognizeSelector:(SEL)arg1;
+ (id)performSelector:(SEL)arg1;
+ (id)performSelector:(SEL)arg1 withObject:(id)arg2;
+ (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
+ (id)instanceMethodSignatureForSelector:(SEL)arg1;
+ (id)methodSignatureForSelector:(SEL)arg1;
+ (void)forwardInvocation:(id)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (id)description;
+ (id)debugDescription;
+ (id)new;
+ (id)retain;
+ (oneway void)release;
+ (id)autorelease;
+ (NSUInteger)retainCount;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (void)dealloc;
+ (void)finalize;
+ (struct _NSZone { }*)zone;
+ (id)copy;
+ (id)copyWithZone:(struct _NSZone { }*)arg1;
+ (id)mutableCopy;
+ (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
+ (id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (BOOL)accessInstanceVariablesDirectly;
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (BOOL)_shouldAddObservationForwardersForKey:(id)arg1;
+ (void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;
+ (id)_keysForValuesAffectingValueForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (Class)classForKeyedUnarchiver;
+ (id)classFallbacksForKeyedArchiver;
+ (id)_copyDescription;
+ (void)initialize;
+ (void)load;
+ (BOOL)instancesImplementSelector:(SEL)arg1;
+ (BOOL)implementsSelector:(SEL)arg1;
+ (void)setVersion:(NSInteger)arg1;
+ (NSInteger)version;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1;
+ (int (*)())CA_setterForType:(NSInteger)arg1;
+ (int (*)())CA_getterForType:(NSInteger)arg1;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)arg1;
+ (BOOL)isKeyExcludedFromWebScript:(const char *)arg1;
+ (void)performSelectorWithNonRetainedTarget:(id)arg1 selector:(SEL)arg2 withObject:(id)arg3 afterDelay:(double)arg4;
+ (void)cancelPreviousPerformRequestsWithNonRetainedTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
+ (void)cancelPreviousPerformRequestsWithNonRetainedTarget:(id)arg1;
+ (void)mf_clearLocks;
+ (id)_accessibilityStringForDayOfWeek:(NSInteger)arg1;
+ (id)_accessibilityStringForDate:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1;
+ (void)_accessibilityCalDetailStringForEvent:(void*)arg1 occurrenceDate:(NSInteger)arg2 inDateString:(id*)arg3 inTimeString:(id*)arg4;
+ (BOOL)overridesClassMethod:(SEL)arg1;
+ (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 count:(unsigned long)arg3 objects:(id)arg4;
+ (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 waitTime:(double)arg3 cancelMask:(unsigned long)arg4 count:(unsigned long)arg5 objects:(id)arg6;
+ (void)accessibilityInitializeBundle;
+ (id)accessibilityBundles;

- (id)self;
- (Class)class;
- (Class)superclass;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (NSUInteger)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isFault;
- (BOOL)isProxy;
- (int (*)())methodForSelector:(SEL)arg1;
- (void)doesNotRecognizeSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)description;
- (id)debugDescription;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (NSUInteger)retainCount;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (struct _NSZone { }*)zone;
- (id)copy;
- (id)mutableCopy;
- (Class)classForArchiver;
- (id)replacementObjectForArchiver:(id)arg1;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (BOOL)validateValue:(id*)arg1 forKey:(id)arg2 error:(id*)arg3;
- (id)mutableArrayValueForKey:(id)arg1;
- (id)mutableSetValueForKey:(id)arg1;
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (BOOL)validateValue:(id*)arg1 forKeyPath:(id)arg2 error:(id*)arg3;
- (id)mutableArrayValueForKeyPath:(id)arg1;
- (id)mutableSetValueForKeyPath:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setNilValueForKey:(id)arg1;
- (id)dictionaryWithValuesForKeys:(id)arg1;
- (void)setValuesForKeysWithDictionary:(id)arg1;
- (BOOL)_isKVOA;
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;
- (void)_willChangeValuesForKeys:(id)arg1;
- (void)_didChangeValuesForKeys:(id)arg1;
- (id)_implicitObservationInfo;
- (void)setObservationInfo:(void*)arg1;
- (void*)observationInfo;
- (void)willChangeValueForKey:(id)arg1;
- (void)didChangeValueForKey:(id)arg1;
- (void)willChange:(NSUInteger)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)didChange:(NSUInteger)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)willChangeValueForKey:(id)arg1 withSetMutation:(NSUInteger)arg2 usingObjects:(id)arg3;
- (void)didChangeValueForKey:(id)arg1 withSetMutation:(NSUInteger)arg2 usingObjects:(id)arg3;
- (void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(NSUInteger)arg3 context:(void*)arg4;
- (void)_removeObserver:(id)arg1 forProperty:(id)arg2;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(NSUInteger)arg3 context:(void*)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (Class)classForKeyedArchiver;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
- (id)autorelease;
- (id)_copyDescription;
- (void)dealloc;
- (id)awakeAfterUsingCoder:(id)arg1;
- (Class)classForCoder;
- (id)replacementObjectForCoder:(id)arg1;
- (BOOL)implementsSelector:(SEL)arg1;
- (BOOL)isNSArray__;
- (BOOL)isNSDictionary__;
- (BOOL)isNSSet__;
- (BOOL)isNSNumber__;
- (BOOL)isNSData__;
- (BOOL)isNSDate__;
- (BOOL)isNSString__;
- (BOOL)isNSValue__;
- (unsigned long)_cfTypeID;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;
- (void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4 modes:(id)arg5;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3 modes:(id)arg4;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4;
- (void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2;
- (id)pep_onMainThread;
- (id)pep_onDetachedThread;
- (id)pep_onThread:(id)arg1;
- (id)pep_afterDelay:(double)arg1;
- (id)pep_onOperationQueue:(id)arg1;
- (id)pep_onOperationQueue:(id)arg1 priority:(NSInteger)arg2;
- (id)pep_getInvocation:(id*)arg1;
- (struct Object { int (**x1)(); struct Atomic { struct { NSInteger x_1_2_1; } x_2_1_1; } x2; }*)CA_copyRenderValue;
- (id)CA_addValue:(id)arg1 multipliedBy:(NSInteger)arg2;
- (id)CA_interpolateValue:(id)arg1 byFraction:(float)arg2;
- (float)CA_distanceToValue:(id)arg1;
- (void)releaseOnMainThread;
- (id)_webkit_invokeOnMainThread;
- (void)awakeFromNib;
- (unsigned long long)defaultAccessibilityTraits;
- (BOOL)isAccessibilityElementByDefault;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (void)accessibilitySetIdentification:(id)arg1;
- (void)_accessibilityFinalize;
- (NSInteger)accessibilityElementCount;
- (id)accessibilityElementAtIndex:(NSInteger)arg1;
- (NSInteger)indexOfAccessibilityElement:(id)arg1;
- (id)accessibilityLabel;
- (id)accessibilityValue;
- (id)accessibilityHint;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })accessibilityFrame;
- (unsigned long long)accessibilityTraits;
- (BOOL)isAccessibilityElement;
- (id)accessibilityContainer;
- (void)setAccessibilityLabel:(id)arg1;
- (void)setAccessibilityValue:(id)arg1;
- (void)setAccessibilityHint:(id)arg1;
- (void)setAccessibilityFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setAccessibilityTraits:(unsigned long long)arg1;
- (void)setIsAccessibilityElement:(BOOL)arg1;
- (void)setAccessibilityContainer:(id)arg1;
- (void)_enableScrollingIfNecessary;
- (void)_disableScrollingIfNecessary;
- (void)postNotificationWithDescription:(id)arg1;
- (void)allowSafePerformSelector;
- (void)disallowSafePerformSelector;
- (BOOL)okToNotifyFromThisThread;
- (void)fromNotifySafeThreadPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)fromNotifySafeThreadPostNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)fromMainThreadPostNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (long)becomeActive;
- (long)becomeInactive;
- (BOOL)_mapkit_isInternalAnnotation;
- (BOOL)_mapkit_isInternalAnnotationView;
- (BOOL)_mapkit_hasPanoramaID;
- (void)_nonRetainingPerformSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
- (id)_ICSStringWithOptions:(NSUInteger)arg1;
- (void)_ICSStringWithOptions:(NSUInteger)arg1 appendingToString:(id)arg2;
- (id)xmlStringWithBag:(id)arg1;
- (void)_ay_performSelector:(SEL)arg1 inThread:(id)arg2;
- (void)_ay_performSelector:(SEL)arg1 inThread:(id)arg2 beforeDate:(id)arg3;
- (void)_ay_performSelector:(SEL)arg1 withObject:(id)arg2 inThread:(id)arg3;
- (void)_ay_performSelector:(SEL)arg1 withObject:(id)arg2 inThread:(id)arg3 beforeDate:(id)arg4;
- (void)_ay_performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 inThread:(id)arg4;
- (void)_ay_performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 inThread:(id)arg4 beforeDate:(id)arg5;
- (id)_mf_lockOrderingForType:(NSInteger)arg1;
- (void)_mf_checkToAllowOrderingWithLock:(id)arg1;
- (void)_mf_checkToAllowStrictProgressionWithLock:(id)arg1;
- (void)_mf_checkToAllowExclusiveLocksWithLock:(id)arg1;
- (void)_mf_checkToAllowLock:(id)arg1;
- (void)mf_lock;
- (BOOL)mf_tryLock;
- (void)mf_lockWithPriority;
- (BOOL)mf_tryLockWithPriority;
- (void)mf_unlock;
- (void)mf_yieldLock;
- (BOOL)_mf_ntsIsLocked;
- (BOOL)mf_isLocked;
- (id)mf_strictLockOrdering;
- (id)mf_lockOrdering;
- (id)mf_exclusiveLocks;
- (BOOL)isNull;
- (void)addNullRunLoopSourceAndPerformSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
- (void)performSelectorInMainThread:(SEL)arg1;
- (void)performSelectorInMainThread:(SEL)arg1 withObject:(id)arg2;
- (void)performSelectorInMainThread:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)performOnewaySelectorInMainThread:(SEL)arg1 withObject:(id)arg2;
- (void)performOnewaySelectorInMainThread:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)messageEntryView:(id)arg1 contentSizeChanged:(struct CGSize { float x1; float x2; })arg2 animate:(BOOL)arg3;
- (void)messageEntryViewSendButtonHit:(id)arg1;
- (void)smsComposeControllerDataInserted:(id)arg1;
- (void)smsComposeControllerAppeared:(id)arg1;
- (void)smsComposeControllerCancelled:(id)arg1;
- (void)smsComposeControllerSendStarted:(id)arg1;
- (id)threadDescription;
- (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 count:(unsigned long)arg3 objects:(id)arg4;
- (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 waitTime:(double)arg3 cancelMask:(unsigned long)arg4 count:(unsigned long)arg5 objects:(id)arg6;
- (void)_scr_safeGetValueForKeyPath:(id)arg1 lock:(id)arg2;
- (void)_scr_safeGetValueForKeyPath:(id)arg1;
- (id)_getRetainedValueForKeyPathOnMainThread:(id)arg1 copy:(BOOL)arg2;
- (id)valueForKeyPathOnMainThread:(id)arg1;
- (id)copyValueForKeyPathOnMainThread:(id)arg1;
- (id)valueForKeyPath:(id)arg1 forThreadKey:(id)arg2;
- (id)valueForKeyPath:(id)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3;
- (id)accessibilityUserDefinedLabel;
- (id)accessibilityUserDefinedValue;
- (id)accessibilityUserDefinedHint;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })accessibilityUserDefinedFrame;
- (id)accessibilityUserDefinedTraits;
- (id)isAccessibilityUserDefinedElement;
- (id)accessibilityUserDefinedLanguage;
- (id)accessibilityLabel;
- (id)accessibilityValue;
- (id)accessibilityHint;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })accessibilityFrame;
- (unsigned long long)accessibilityTraits;
- (BOOL)isAccessibilityElement;
- (id)accessibilityContainer;
- (id)accessibilityLanguage;
- (id)accessibilityIdentification;
- (void)setAccessibilityLabel:(id)arg1;
- (void)setAccessibilityValue:(id)arg1;
- (void)setAccessibilityHint:(id)arg1;
- (void)setAccessibilityFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setAccessibilityTraits:(unsigned long long)arg1;
- (void)setIsAccessibilityElement:(BOOL)arg1;
- (void)setAccessibilityContainer:(id)arg1;
- (void)accessibilitySetIdentification:(id)arg1;
- (void)setAccessibilityLanguage:(id)arg1;
- (id)accessibilityLabelForRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; }*)arg1;
- (struct CGPoint { float x1; float x2; })accessibilityCenterPoint;
- (id)_accessibilityScrollStatus;
- (void)_accessibilityUnregister;
- (id)accessibilityAttributeValue:(NSInteger)arg1;
- (void)_accessibilitySetValue:(id)arg1 forAttribute:(NSInteger)arg2;
- (id)accessibilityAttributeValue:(NSInteger)arg1 forParameter:(id)arg2;
- (id)_accessibilitySupplementaryHeaderViews;
- (id)_accessibilitySupplementaryFooterViews;
- (id)accessibilityHitTest:(struct CGPoint { float x1; float x2; })arg1;
- (id)_accessibilityHitTestSupplementaryViews:(id)arg1 point:(struct CGPoint { float x1; float x2; })arg2 withEvent:(id)arg3;
- (id)_accessibilityHitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (BOOL)_accessibilityHasOrderedChildren;
- (id)_accessibilityScrollParent;
- (BOOL)_accessibilityIsFrameOutOfBounds;
- (void)accessibilityIncrement;
- (void)accessibilityDecrement;
- (void)accessibilityMoveInsertionPointLeft;
- (void)accessibilityMoveInsertionPointRight;
- (void)accessibilityZoom;
- (void)_accessibilityScrollToFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forView:(id)arg2;
- (void)_accessibilitySetInsertionPointForIndex:(unsigned long)arg1;
- (NSInteger)_accessibilityInsertionPointIndex;
- (BOOL)_accessibilityServesAsFirstResponder;
- (void)accessibilityActivate;
- (void)accessibilityStartStopToggle;
- (void)accessibilityPerformAction:(NSInteger)arg1;
- (BOOL)_accessibilityIsScrollAncestor;
- (BOOL)_accessibilityIsScrollable;
- (id)_accessibilityScrollAncestorForSelector:(SEL)arg1;
- (id)_accessibilityScrollAncestor;
- (void)_accessibilityScrollToVisible;
- (void)_accessibilityScrollLeftPage;
- (void)_accessibilityScrollRightPage;
- (void)_accessibilityScrollUpPage;
- (void)_accessibilityScrollDownPage;
- (id)_accessibilityNextElementsWithCount:(unsigned long)arg1;
- (id)_accessibilityPreviousElementsWithCount:(unsigned long)arg1;
- (id)safeValueForKey:(id)arg1;
- (id)safeValueForKeyPath:(id)arg1;
- (void)handleFailoversForClassNamed:(id)arg1;
- (id)mainThreadProxy;
- (id)safeValueForKey:(id)arg1;

@end
