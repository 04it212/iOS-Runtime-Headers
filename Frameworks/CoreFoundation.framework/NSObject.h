/* Generated by RuntimeBrowser on iPhone OS 4.0
   Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */



@interface NSObject <NSObject>
{
    Class isa;
}

@property(readonly) BOOL _mapkit_hasPanoramaID;
@property BOOL isAccessibilityElement;
@property(retain) NSString *accessibilityLanguage;
@property CGRect accessibilityFrame;
@property unsigned long long accessibilityTraits;
@property(copy) NSString *accessibilityHint;
@property(copy) NSString *accessibilityValue;
@property(copy) NSString *accessibilityLabel;

+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
+ (id)methodSignatureForSelector:(SEL)arg1;
+ (id)copyWithZone:(struct _NSZone { }*)arg1;
+ (void)forwardInvocation:(id)arg1;
+ (void)finalize;
+ (void)initialize;
+ (id)mutableCopy;
+ (NSUInteger)hash;
+ (BOOL)isProxy;
+ (Class)superclass;
+ (id)self;
+ (BOOL)respondsToSelector:(SEL)arg1;
+ (id)performSelector:(SEL)arg1 withObject:(id)arg2;
+ (struct _NSZone { }*)zone;
+ (BOOL)conformsToProtocol:(id)arg1;
+ (id)instanceMethodSignatureForSelector:(SEL)arg1;
+ (id)copy;
+ (id)init;
+ (BOOL)isMemberOfClass:(Class)arg1;
+ (BOOL)isEqual:(id)arg1;
+ (id)performSelector:(SEL)arg1;
+ (int (*)())instanceMethodForSelector:(SEL)arg1;
+ (int (*)())methodForSelector:(SEL)arg1;
+ (BOOL)isSubclassOfClass:(Class)arg1;
+ (Class)class;
+ (id)retain;
+ (oneway void)release;
+ (void)dealloc;
+ (id)alloc;
+ (NSUInteger)retainCount;
+ (id)description;
+ (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
+ (BOOL)isKindOfClass:(Class)arg1;
+ (id)new;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)autorelease;
+ (void)load;
+ (BOOL)isAncestorOfObject:(id)arg1;
+ (id)_copyDescription;
+ (BOOL)isFault;
+ (void)doesNotRecognizeSelector:(SEL)arg1;
+ (id)debugDescription;
+ (BOOL)instancesRespondToSelector:(SEL)arg1;
+ (BOOL)resolveInstanceMethod:(SEL)arg1;
+ (BOOL)resolveClassMethod:(SEL)arg1;
+ (id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (BOOL)accessInstanceVariablesDirectly;
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (BOOL)_shouldAddObservationForwardersForKey:(id)arg1;
+ (void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;
+ (id)_keysForValuesAffectingValueForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (Class)classForKeyedUnarchiver;
+ (id)classFallbacksForKeyedArchiver;
+ (NSInteger)version;
+ (void)initialize;
+ (void)load;
+ (void)setVersion:(NSInteger)arg1;
+ (BOOL)instancesImplementSelector:(SEL)arg1;
+ (BOOL)implementsSelector:(SEL)arg1;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1;
+ (int (*)())CA_setterForType:(NSInteger)arg1;
+ (id)CA_CAMLPropertyForKey:(id)arg1;
+ (BOOL)CA_encodePropertyConditionally:(NSUInteger)arg1 type:(NSInteger)arg2;
+ (int (*)())CA_getterForType:(NSInteger)arg1;
+ (BOOL)CA_automaticallyNotifiesObservers:(Class)arg1;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)arg1;
+ (BOOL)isKeyExcludedFromWebScript:(const char *)arg1;
+ (id)_accessibilityTextChecker;
+ (id)accessibilityBundles;
+ (void)accessibilityInitializeBundle;
+ (void)_initializeSafeCategory;
+ (void)performSelectorWithNonRetainedTarget:(id)arg1 selector:(SEL)arg2 withObject:(id)arg3 afterDelay:(double)arg4;
+ (void)cancelPreviousPerformRequestsWithNonRetainedTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
+ (void)cancelPreviousPerformRequestsWithNonRetainedTarget:(id)arg1;
+ (void)_accessibilityCalGetHourDesignatorsForAM:(id*)arg1 andPM:(id*)arg2;
+ (BOOL)_accessibilityCalSpaceBetweenDesignatorsAndHour;
+ (BOOL)_accessibilityCalHourDesignatorsAreBeforeHour;
+ (BOOL)_accessibilityCalShow24Hours;
+ (id)_accessibilityStringForDayOfWeek:(NSInteger)arg1;
+ (id)_accessibilityStringForDate:(struct { NSInteger x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; double x6; })arg1;
+ (void)_accessibilityCalDetailStringForEvent:(id)arg1 inDateString:(id*)arg2 inTimeString:(id*)arg3;
+ (void)mf_clearLocks;
+ (BOOL)overridesSelector:(SEL)arg1 ofBaseClass:(Class)arg2;
+ (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 count:(unsigned long)arg3 objects:(id)arg4;
+ (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 waitTime:(double)arg3 cancelMask:(unsigned long)arg4 count:(unsigned long)arg5 objects:(id)arg6;

- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)finalize;
- (id)mutableCopy;
- (NSUInteger)hash;
- (BOOL)isProxy;
- (Class)superclass;
- (id)self;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (struct _NSZone { }*)zone;
- (BOOL)conformsToProtocol:(id)arg1;
- (id)copy;
- (id)init;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)performSelector:(SEL)arg1;
- (int (*)())methodForSelector:(SEL)arg1;
- (Class)class;
- (id)retain;
- (oneway void)release;
- (void)dealloc;
- (NSUInteger)retainCount;
- (id)description;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)isKindOfClass:(Class)arg1;
- (id)autorelease;
- (BOOL)isNSDictionary__;
- (BOOL)isNSDate__;
- (BOOL)isNSArray__;
- (BOOL)isNSSet__;
- (BOOL)isNSNumber__;
- (id)_copyDescription;
- (BOOL)isFault;
- (BOOL)isNSData__;
- (BOOL)isNSValue__;
- (BOOL)isNSString__;
- (void)doesNotRecognizeSelector:(SEL)arg1;
- (unsigned long)_cfTypeID;
- (id)debugDescription;
- (BOOL)isNSTimeZone__;
- (BOOL)isNSOrderedSet__;
- (Class)classForArchiver;
- (id)replacementObjectForArchiver:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (void)setValuesForKeysWithDictionary:(id)arg1;
- (id)dictionaryWithValuesForKeys:(id)arg1;
- (id)valueForKey:(id)arg1;
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (BOOL)validateValue:(id*)arg1 forKey:(id)arg2 error:(id*)arg3;
- (id)mutableArrayValueForKey:(id)arg1;
- (id)mutableSetValueForKey:(id)arg1;
- (BOOL)validateValue:(id*)arg1 forKeyPath:(id)arg2 error:(id*)arg3;
- (id)mutableArrayValueForKeyPath:(id)arg1;
- (id)mutableSetValueForKeyPath:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (BOOL)_isKVOA;
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;
- (void)_willChangeValuesForKeys:(id)arg1;
- (void)_didChangeValuesForKeys:(id)arg1;
- (void)_changeValueForKey:(id)arg1 usingBlock:(id)arg2;
- (id)_implicitObservationInfo;
- (void)setObservationInfo:(void*)arg1;
- (void*)observationInfo;
- (void)willChangeValueForKey:(id)arg1;
- (void)didChangeValueForKey:(id)arg1;
- (void)willChangeValueForKey:(id)arg1 withSetMutation:(NSUInteger)arg2 usingObjects:(id)arg3;
- (void)didChangeValueForKey:(id)arg1 withSetMutation:(NSUInteger)arg2 usingObjects:(id)arg3;
- (void)willChange:(NSUInteger)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)didChange:(NSUInteger)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(NSUInteger)arg3 context:(void*)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(NSUInteger)arg3 context:(void*)arg4;
- (void)_removeObserver:(id)arg1 forProperty:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (Class)classForKeyedArchiver;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
- (id)autoContentAccessingProxy;
- (id)awakeAfterUsingCoder:(id)arg1;
- (Class)classForCoder;
- (BOOL)implementsSelector:(SEL)arg1;
- (id)replacementObjectForCoder:(id)arg1;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;
- (void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3 modes:(id)arg4;
- (void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4 modes:(id)arg5;
- (id)pep_onDetachedThread;
- (id)pep_afterDelay:(double)arg1;
- (id)pep_getInvocation:(id*)arg1;
- (id)pep_onMainThread;
- (id)pep_onMainThreadIfNecessary;
- (id)pep_onThread:(id)arg1 immediateForMatchingThread:(BOOL)arg2;
- (id)pep_onOperationQueue:(id)arg1;
- (id)pep_onOperationQueue:(id)arg1 priority:(NSInteger)arg2;
- (id)pep_onThread:(id)arg1;
- (struct Object { int (**x1)(); struct Atomic { struct { NSInteger x_1_2_1; } x_2_1_1; } x2; }*)CA_copyRenderValue;
- (void)CA_prepareRenderValue;
- (id)CA_addValue:(id)arg1 multipliedBy:(NSInteger)arg2;
- (id)CA_interpolateValue:(id)arg1 byFraction:(float)arg2;
- (id)CA_interpolateValues:(id)arg1 :(id)arg2 :(id)arg3 interpolator:(const struct ValueInterpolator { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x10; }*)arg4;
     /* Encoded args for previous method: @24@0:4@8@12@16r^{ValueInterpolator=dddddddddB}20 */

- (float)CA_distanceToValue:(id)arg1;
- (void)releaseOnMainThread;
- (id)_webkit_invokeOnMainThread;
- (void)awakeFromNib;
- (unsigned long long)defaultAccessibilityTraits;
- (BOOL)isAccessibilityElementByDefault;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (void)accessibilitySetIdentification:(id)arg1;
- (void)_accessibilityFinalize;
- (NSInteger)accessibilityElementCount;
- (id)accessibilityElementAtIndex:(NSInteger)arg1;
- (NSInteger)indexOfAccessibilityElement:(id)arg1;
- (void)accessibilityIncrement;
- (void)accessibilityDecrement;
- (void)accessibilityElementDidBecomeFocused;
- (void)accessibilityElementDidLoseFocus;
- (BOOL)accessibilityElementIsFocused;
- (void)setAccessibilityTraits:(unsigned long long)arg1;
- (id)accessibilityValue;
- (id)accessibilityLabel;
- (id)accessibilityHint;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })accessibilityFrame;
- (unsigned long long)accessibilityTraits;
- (BOOL)isAccessibilityElement;
- (id)accessibilityContainer;
- (id)accessibilityLanguage;
- (void)setAccessibilityLabel:(id)arg1;
- (void)setAccessibilityValue:(id)arg1;
- (void)setAccessibilityHint:(id)arg1;
- (void)setAccessibilityFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setIsAccessibilityElement:(BOOL)arg1;
- (void)setAccessibilityContainer:(id)arg1;
- (void)setAccessibilityLanguage:(id)arg1;
- (void)_enableScrollingIfNecessary;
- (void)_disableScrollingIfNecessary;
- (id)_selectableText;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_selectionAsNSRange;
- (NSInteger)_indexForTextPosition:(id)arg1;
- (id)_wordContainingCaretSelection;
- (BOOL)_selectionAtDocumentStart;
- (BOOL)_selectionAtDocumentEnd;
- (BOOL)_isEmptySelection;
- (BOOL)_hasMarkedTextOrRangedSelection;
- (void)_moveCurrentSelection:(NSInteger)arg1;
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;
- (void)_deleteByWord;
- (void)_deleteToEndOfLine;
- (void)_scrollRectToVisible:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 animated:(BOOL)arg2;
- (id)_clampedpositionFromPosition:(id)arg1 offset:(NSInteger)arg2;
- (id)_fontForCaretSelection;
- (void)_updateSelectionWithTextRange:(id)arg1 withAffinityDownstream:(BOOL)arg2;
- (id)_setSelectionRangeWithHistory:(id)arg1;
- (id)_setHistory:(id)arg1 withExtending:(BOOL)arg2 withAnchor:(NSInteger)arg3 withAffinityDownstream:(BOOL)arg4;
- (id)_moveToStartOfParagraph:(BOOL)arg1 withHistory:(id)arg2;
- (void)_setSelectedTextRange:(id)arg1 withAffinityDownstream:(BOOL)arg2;
- (NSInteger)_selectionAffinity;
- (id)_textColorForCaretSelection;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_nsrangeForTextRange:(id)arg1;
- (id)_positionFromPosition:(id)arg1 inDirection:(NSInteger)arg2 offset:(NSInteger)arg3 withAffinityDownstream:(BOOL)arg4;
- (unsigned short)_characterBeforeCaretSelection;
- (unsigned short)_characterAfterCaretSelection;
- (id)_moveToEndOfWord:(BOOL)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfLine:(BOOL)arg1 withHistory:(id)arg2;
- (id)_moveRight:(BOOL)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfWord:(BOOL)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfLine:(BOOL)arg1 withHistory:(id)arg2;
- (id)_moveLeft:(BOOL)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfParagraph:(BOOL)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfDocument:(BOOL)arg1 withHistory:(id)arg2;
- (id)_moveDown:(BOOL)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfDocument:(BOOL)arg1 withHistory:(id)arg2;
- (id)_moveUp:(BOOL)arg1 withHistory:(id)arg2;
- (void)_deleteToStartOfLine;
- (id)_fullText;
- (id)_rangeOfEnclosingWord:(id)arg1;
- (unsigned short)_characterInRelationToRangedSelection:(NSInteger)arg1;
- (BOOL)_selectionAtWordStart;
- (unsigned short)_characterInRelationToCaretSelection:(NSInteger)arg1;
- (void)_extendCurrentSelection:(NSInteger)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_lastRectForRange:(id)arg1;
- (void)_replaceCurrentWordWithText:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_rectContainingCaretSelection;
- (BOOL)isAXAttributedString;
- (void)setAccessibilityTraits:(unsigned long long)arg1;
- (id)accessibilityValue;
- (id)accessibilityLabel;
- (id)accessibilityHint;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })accessibilityFrame;
- (unsigned long long)accessibilityTraits;
- (BOOL)isAccessibilityElement;
- (id)accessibilityContainer;
- (id)accessibilityLanguage;
- (void)setAccessibilityLabel:(id)arg1;
- (void)setAccessibilityValue:(id)arg1;
- (void)setAccessibilityHint:(id)arg1;
- (void)setAccessibilityFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setIsAccessibilityElement:(BOOL)arg1;
- (void)setAccessibilityContainer:(id)arg1;
- (void)setAccessibilityLanguage:(id)arg1;
- (void)accessibilityElementDidBecomeFocused;
- (void)accessibilityElementDidLoseFocus;
- (BOOL)accessibilityElementIsFocused;
- (void)accessibilityIncrement;
- (void)accessibilityDecrement;
- (NSInteger)accessibilityElementCount;
- (id)accessibilityElementAtIndex:(NSInteger)arg1;
- (NSInteger)indexOfAccessibilityElement:(id)arg1;
- (void)accessibilitySetIdentification:(id)arg1;
- (BOOL)_accessibilityHasOrderedChildren;
- (id)_accessibilitySupplementaryFooterViews;
- (void)_accessibilitySetValue:(id)arg1;
- (void)accessibilityZoomInAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)_accessibilityDecreaseSelection:(id)arg1;
- (void)_accessibilityIncreaseSelection:(id)arg1;
- (void)_accessibilityScrollToFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forView:(id)arg2;
- (void)_accessibilitySetSelectedTextRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_accessibilitySelectedTextRange;
- (BOOL)_accessibilityServesAsFirstResponder;
- (BOOL)_accessibilityServesAsFirstElement;
- (id)_accessibilityResponderElement;
- (void)accessibilityStartStopToggle;
- (NSInteger)_accessibilityLineEndPosition;
- (NSInteger)_accessibilityLineStartPosition;
- (id)_accessibilityLineNumberAndColumnForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_accessibilityRangeForLineNumberAndColumn:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_accessibilityBoundsForRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (id)_accessibilityLineStartMarker:(id)arg1;
- (id)_accessibilityMarkerForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)_accessibilityLineEndMarker:(id)arg1;
- (id)_accessibilityNextMarker:(id)arg1;
- (id)_accessibilityPreviousMarker:(id)arg1;
- (id)_accessibilityTextMarkerRange;
- (id)_accessibilityTextMarkerRangeForSelection;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })accessibilityBoundsForTextMarkers:(id)arg1;
- (id)accessibilityStringForTextMarkers:(id)arg1;
- (id)accessibilityArrayOfTextForTextMarkers:(id)arg1;
- (id)_accessibilityObjectForTextMarker:(id)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_accessibilityLineRangeForPosition:(NSUInteger)arg1;
- (float)_accessibilityMinValue;
- (float)_accessibilityMaxValue;
- (struct CGPoint { float x1; float x2; })_accessibilityMinScrubberPosition;
- (struct CGPoint { float x1; float x2; })_accessibilityMaxScrubberPosition;
- (id)_accessibilityPageContent;
- (BOOL)_accessibilityIsFirstSibling;
- (BOOL)_accessibilityIsLastSibling;
- (BOOL)_accessibilityIsTitleElement;
- (NSInteger)_accessibilityPageControlCount;
- (NSInteger)_accessibilityPageControlIndex;
- (void)_accessibilitySetCurrentWordInPageContext:(id)arg1;
- (id)accessibilityUserDefinedLabel;
- (id)accessibilityUserDefinedValue;
- (id)accessibilityUserDefinedHint;
- (id)accessibilityUserDefinedFrame;
- (id)accessibilityUserDefinedCenterPoint;
- (id)isAccessibilityUserDefinedWindow;
- (id)isAccessibilityUserDefinedScrollAncestor;
- (id)isAccessibilityUserDefinedObscuresScreen;
- (id)accessibilityUserDefinedServesAsContainingParentForOrdering;
- (id)accessibilityUserDefinedIgnoresMouseEvents;
- (id)accessibilityUserDefinedTraits;
- (id)accessibilityUserDefinedSize;
- (id)isAccessibilityUserDefinedElement;
- (id)accessibilityUserDefinedLanguage;
- (id)accessibilityUserDefinedLiteContent;
- (id)accessibilityLiteContent;
- (id)accessibilityIdentification;
- (void)setAccessibilityCenterPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setAccessibilitySize:(struct CGSize { float x1; float x2; })arg1;
- (void)setIsAccessibilityWindow:(BOOL)arg1;
- (void)setIsAccessibilityScrollAncestor:(BOOL)arg1;
- (void)_setAccessibilityObscuresScreen:(BOOL)arg1;
- (BOOL)_accessibilityServesAsContainingParentForOrdering;
- (void)_setAccessibilityServesAsContainingParentForOrdering:(BOOL)arg1;
- (void)_setAccessibilityIgnoresMouseEvents:(BOOL)arg1;
- (void)setAccessibilityLiteContent:(id)arg1;
- (id)accessibilityLabelForRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; }*)arg1;
- (id)_accessibilityValueForRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; }*)arg1;
- (void)_accessibilityAddMispellingsToAttributedString:(id)arg1;
- (id)_accessibilityAttributedValueForRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; }*)arg1;
- (struct CGPoint { float x1; float x2; })accessibilityCenterPoint;
- (BOOL)_accessibilityObscuresScreen;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_accessibilityGesturePracticeRegion;
- (id)_accessibilityScrollStatus;
- (id)_axDebugTraits;
- (BOOL)_accessibilitySupportsActivateAction;
- (void)_accessibilityHandleATFocused:(BOOL)arg1;
- (void)_accessibilitySetValue:(id)arg1 forAttribute:(NSInteger)arg2;
- (id)_accessibilitySupplementaryHeaderViews;
- (BOOL)_accessibilityIsTouchContainer;
- (id)_accessibilityTouchContainer;
- (id)_accessibilityHitTestSupplementaryViews:(id)arg1 point:(struct CGPoint { float x1; float x2; })arg2 withEvent:(id)arg3;
- (id)_axSuperviews;
- (id)_accessibilityAncestorIsKindOf:(Class)arg1;
- (void)_accessibilityResetContainerElements;
- (id)accessibilityContainerElements;
- (id)_accessibilityScrollParent;
- (BOOL)_accessibilityIsFrameOutOfBounds;
- (void)_accessibilityIgnoreNextNotification:(NSUInteger)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_accessibilityClassicModeFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_accessibilityUnignoredDescendant;
- (BOOL)_accessibilityIsDescendantOfElement:(id)arg1;
- (id)_accessibilityApplication;
- (id)_accessibilityParentView;
- (id)_accessibilityContainerInDirection:(BOOL)arg1 originalElement:(id)arg2;
- (id)_accessibilityNextElementsWithCount:(unsigned long)arg1 originalElement:(id)arg2;
- (id)_accessibilityPreviousElementsWithCount:(unsigned long)arg1 originalElement:(id)arg2;
- (void)accessibilityZoomOutAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)_accessibilityEscape;
- (void)_accessibilityPaste;
- (void)_accessibilitySelectAll;
- (void)_accessibilitySelect;
- (void)_accessibilityDelete;
- (void)_accessibilityReplace;
- (void)_accessibilityCut;
- (id)_accessibilityTextOperations;
- (id)_accessibilityTextViewTextOperationResponder;
- (void)_accessibilitySetCurrentGesture:(id)arg1;
- (BOOL)_accessibilityHasTextOperations;
- (BOOL)accessibilityEditOperationAction:(id)arg1;
- (void)_accessibilityTextOperationAction:(id)arg1;
- (void)accessibilityActivate;
- (BOOL)accessibilityPerformAction:(NSInteger)arg1 withValue:(id)arg2;
- (id)_accessibilityFirstVisibleItem;
- (id)_accessibilityVisibleItemInList;
- (BOOL)_accessibilityIsScrollAncestor;
- (BOOL)_accessibilityIsScrollable;
- (id)_accessibilityScrollAncestorForSelector:(SEL)arg1;
- (id)_accessibilityScrollAncestor;
- (void)_accessibilityScrollToVisible;
- (void)_accessibilityScrollToPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)_accessibilityScrollLeftPage;
- (void)_accessibilityScrollRightPage;
- (void)_accessibilityScrollUpPage;
- (void)_accessibilityScrollDownPage;
- (id)_accessibilityTextChecker;
- (id)accessibilityAttributeValue:(NSInteger)arg1;
- (id)_accessibilityHitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (id)accessibilityAttributeValue:(NSInteger)arg1 forParameter:(id)arg2;
- (id)accessibilityHitTest:(struct CGPoint { float x1; float x2; })arg1;
- (id)accessibilityURL;
- (void)_accessibilityUnregister;
- (id)safeValueForKey:(id)arg1;
- (id)safeValueForKeyPath:(id)arg1;
- (void)handleFailoversForClassNamed:(id)arg1;
- (BOOL)_accessibilityUserTestingIsDefaultButton;
- (BOOL)_accessibilityUserTestingIsCancelButton;
- (BOOL)_accessibilityUserTestingIsBackNavButton;
- (BOOL)_accessibilityUserTestingIsRightNavButton;
- (id)_accessibilityUserTestingElementAttributes;
- (id)_accessibilityUserTestingElementType;
- (id)_accessibilityUserTestingParent;
- (id)_accessibilityUserTestingChildren;
- (id)_accessibilityAbsoluteValue;
- (id)_accessibilityUserTestingElementBaseType;
- (void)accessibilityInitialize;
- (NSUInteger)_elementForColumn:(NSInteger)arg1;
- (void)_setValue:(float)arg1 andSendAction:(BOOL)arg2;
- (id)accessibilityRootElement;
- (id)accessibilityHitTest:(struct CGPoint { float x1; float x2; })arg1;
- (id)_accessibilityParentForSubview:(id)arg1;
- (id)__accessibilityHitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)accessibilityUpdateChildrenFrames;
- (void)_accessibilitySetTextSelection:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)_accessibilityPostPasteboardTextForOperation:(id)arg1;
- (void)_accessibilityIgnoreNextPostPasteboardTextOperation:(id)arg1;
- (void)_accessibilityCheckBorderHit:(BOOL)arg1 left:(BOOL)arg2;
- (void)_accessibilityCopy;
- (BOOL)okToNotifyFromThisThread;
- (void)allowSafePerformSelector;
- (void)disallowSafePerformSelector;
- (void)postNotificationWithDescription:(id)arg1;
- (void)fromNotifySafeThreadPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)fromNotifySafeThreadPostNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)fromMainThreadPostNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (long)becomeActive;
- (long)becomeInactive;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 ignoreMenuTracking:(BOOL)arg4;
- (BOOL)isNull;
- (BOOL)isSecurityNormal;
- (BOOL)isSecurityEnabled;
- (void)postSecurityLevelChangeFrom:(NSInteger)arg1 to:(NSInteger)arg2;
- (void)_nonRetainingPerformSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
- (void)unregisterForTimeMarkerNotifications;
- (void)__crossedTimeMarkerNotification:(id)arg1;
- (void)registerForTimeMarkerNotificationsIfNecessary;
- (BOOL)_mapkit_isInternalAnnotation;
- (BOOL)_mapkit_isInternalAnnotationView;
- (BOOL)_mapkit_hasPanoramaID;
- (id)imageIdentifier;
- (void)_zoomToNextLevel:(BOOL)arg1 tapCentroid:(struct CGPoint { float x1; float x2; })arg2;
- (void)_setScrollViewOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)setCenterCoordinate:(struct { double x1; double x2; })arg1 animated:(BOOL)arg2;
- (struct { double x1; double x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toCoordinateFromView:(id)arg2;
- (void)detailSliderTrackingDidBegin:(id)arg1;
- (void)detailSlider:(id)arg1 didChangeValue:(float)arg2;
- (void)detailSliderTrackingDidEnd:(id)arg1;
- (float)_accessibilityIncreaseAmount:(BOOL)arg1;
- (id)_ICSStringWithOptions:(NSUInteger)arg1;
- (void)_ICSStringWithOptions:(NSUInteger)arg1 appendingToString:(id)arg2;
- (struct CalEventOccurrence { }*)cachedOccurrenceAtIndex:(NSInteger)arg1;
- (NSInteger)occurrenceIndexFromIndexPath:(id)arg1;
- (id)mf_lockOrdering;
- (BOOL)mf_tryLock;
- (void)mf_lockWithPriority;
- (void)mf_unlock;
- (void)mf_lock;
- (id)_mf_lockOrderingForType:(NSInteger)arg1;
- (void)_mf_checkToAllowOrderingWithLock:(id)arg1;
- (void)_mf_checkToAllowStrictProgressionWithLock:(id)arg1;
- (void)_mf_checkToAllowExclusiveLocksWithLock:(id)arg1;
- (void)_mf_checkToAllowLock:(id)arg1;
- (BOOL)mf_tryLockWithPriority;
- (BOOL)_mf_ntsIsLocked;
- (id)mf_strictLockOrdering;
- (id)mf_exclusiveLocks;
- (void)addNullRunLoopSourceAndPerformSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
- (void)mf_performSelectorInMainThread:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)mf_performOnewaySelectorInMainThread:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)messageEntryView:(id)arg1 contentSizeChanged:(struct CGSize { float x1; float x2; })arg2 animate:(BOOL)arg3;
- (void)messageEntryViewSendButtonHit:(id)arg1;
- (void)smsComposeControllerDataInserted:(id)arg1;
- (void)smsComposeControllerCancelled:(id)arg1;
- (void)smsComposeControllerSendStarted:(id)arg1;
- (void)smsComposeControllerAppeared:(id)arg1;
- (id)className;
- (id)xmlStringWithBag:(id)arg1;
- (void)_ay_performSelector:(SEL)arg1 inThread:(id)arg2;
- (void)_ay_performSelector:(SEL)arg1 inThread:(id)arg2 beforeDate:(id)arg3;
- (void)_ay_performSelector:(SEL)arg1 withObject:(id)arg2 inThread:(id)arg3 beforeDate:(id)arg4;
- (void)_ay_performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 inThread:(id)arg4;
- (void)_ay_performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 inThread:(id)arg4 beforeDate:(id)arg5;
- (void)_ay_performSelector:(SEL)arg1 withObject:(id)arg2 inThread:(id)arg3;
- (void)_scr_safeGetValueForKeyPath:(id)arg1 lock:(id)arg2;
- (void)_scr_safeGetValueForKeyPath:(id)arg1;
- (id)_getRetainedValueForKeyPathOnMainThread:(id)arg1 copy:(BOOL)arg2;
- (id)valueForKeyPathOnMainThread:(id)arg1;
- (id)copyValueForKeyPathOnMainThread:(id)arg1;
- (id)valueForKeyPath:(id)arg1 forThreadKey:(id)arg2;
- (id)valueForKeyPath:(id)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3;
- (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 count:(unsigned long)arg3 objects:(id)arg4;
- (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 waitTime:(double)arg3 cancelMask:(unsigned long)arg4 count:(unsigned long)arg5 objects:(id)arg6;
- (id)threadDescription;
- (id)blockingMainThreadProxy;
- (id)mainThreadProxy;
- (id)delayedProxy:(double)arg1;
- (id)webThreadProxy;
- (id)responderChainProxy:(id)arg1;
- (id)webThreadMainThreadProxy;
- (void)reloadStrings;
- (void)_accessibilityReloadMediaStrings;
- (id)_accessibilityContentLanguage;

@end
