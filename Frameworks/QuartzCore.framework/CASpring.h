/* Generated by RuntimeBrowser on iPhone OS 4.2.1
   Image: /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 */

@class CAValueFunction, NSString, CALayer;



@interface CASpring : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
    NSString *_name;
    CALayer *_layerA;
    CALayer *_layerB;
    struct CGPoint { 
        float x; 
        float y; 
    } _attachmentPointA;
    struct CGPoint { 
        float x; 
        float y; 
    } _attachmentPointB;
    CAValueFunction *_function;
    float _stiffness;
    float _damping;
    float _restLength;
    BOOL _enabled;
    id _delegate;
    void *_priv;
}

@property(copy) NSString *name;
@property(getter=isEnabled) BOOL enabled;
@property(retain) CALayer *layerA;
@property(retain) CALayer *layerB;
@property CGPoint attachmentPointA;
@property CGPoint attachmentPointB;
@property(retain) CAValueFunction *function;
@property float restLength;
@property float stiffness;
@property float damping;
@property id delegate;

+ (id)defaultValueForKey:(id)arg1;
+ (id)spring;

- (id)layerA;
- (id)layerB;
- (struct CGPoint { float x1; float x2; })attachmentPointA;
- (struct CGPoint { float x1; float x2; })attachmentPointB;
- (float)stiffness;
- (float)damping;
- (float)restLength;
- (void)setRestLength:(float)arg1;
- (void)setFunction:(id)arg1;
- (struct Object { int (**x1)(); struct Atomic { struct { NSInteger x_1_2_1; } x_2_1_1; } x2; }*)CA_copyRenderValue;
- (id)function;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (void)setName:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (id)name;
- (id)valueForKeyPath:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)init;
- (BOOL)isEnabled;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setStiffness:(float)arg1;
- (void)setDamping:(float)arg1;
- (void)setLayerB:(id)arg1;
- (void)setAttachmentPointB:(struct CGPoint { float x1; float x2; })arg1;
- (void)setLayerA:(id)arg1;
- (void)setAttachmentPointA:(struct CGPoint { float x1; float x2; })arg1;

@end
