/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class DOMHTMLElement, UIColor, UIDelayedAction, UIFont, UITouch, UIWebDocumentView, WebCoreFrameBridge, WebFrame;

@interface UITextView : UIScrollView <UITextInputTraits> {
    struct CGPoint { 
        float x; 
        float y; 
    struct CGPoint { 
        float x; 
        float y; 
    struct _NSRange { 
        NSUInteger location; 
        NSUInteger length; 
    DOMHTMLElement *m_body;
    WebCoreFrameBridge *m_bridge;
    BOOL m_editable;
    UIFont *m_font;
    WebFrame *m_frame;
    BOOL m_handlingMouse;
    UIDelayedAction *m_longPressAction;
    NSInteger m_marginTop;
    BOOL m_passMouseDownToOther;
    BOOL m_scrollOnMouseUp;
    } m_selectedRange;
    BOOL m_selecting;
    UIDelayedAction *m_selectionTimer;
    BOOL m_sentMouseDown;
    UITouch *m_syntheticTouch;
    NSInteger m_textAlignment;
    UIColor *m_textColor;
    } m_touchOffset;
    } m_touchPoint;
    UIWebDocumentView *m_webView;
}

@property <UITextViewDelegate> *delegate;
@property(retain) UIFont *font;
@property(copy) NSString *text;
@property(retain) UIColor *textColor;
@property NSInteger autocapitalizationType;
@property NSInteger autocorrectionType;
@property(getter=isEditable) BOOL editable;
@property BOOL enablesReturnKeyAutomatically;
@property NSInteger keyboardAppearance;
@property NSInteger keyboardType;
@property NSInteger returnKeyType;
@property(getter=isSecureTextEntry) BOOL secureTextEntry;
@property _NSRange selectedRange;
@property NSInteger textAlignment;

- (BOOL)_alwaysHandleScrollerMouseEvent;
- (id)_automationValue;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)_syntheticTouch;
- (BOOL)becomeFirstResponder;
- (float)bottomBufferHeight;
- (void)callSuperTouchBegan:(struct { BOOL x1; union { struct { id x_1_2_1; id x_1_2_2; } x_2_1_1; struct __GSEvent {} *x_2_1_2; } x2; }*)arg1;
- (void)callSuperTouchEnded:(struct { BOOL x1; union { struct { id x_1_2_1; id x_1_2_2; } x_2_1_1; struct __GSEvent {} *x_2_1_2; } x2; }*)arg1;
- (void)callSuperTouchMoved:(struct { BOOL x1; union { struct { id x_1_2_1; id x_1_2_2; } x_2_1_1; struct __GSEvent {} *x_2_1_2; } x2; }*)arg1;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canResignFirstResponder;
- (void)commonInitWithWebDocumentView:(id)arg1 isDecoding:(BOOL)arg2;
- (struct CGPoint { float x1; float x2; })constrainedPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)contentAsHTMLString;
- (void)dealloc;
- (void)didMoveToSuperview;
- (void)displayScrollerIndicators;
- (void)encodeWithCoder:(id)arg1;
- (void)ensureSelection;
- (id)font;
- (void)forwardInvocation:(id)arg1;
- (BOOL)hasText;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 webView:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)isEditable;
- (NSInteger)keyboardInput:(id)arg1 positionForAutocorrection:(id)arg2;
- (BOOL)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(BOOL)arg3;
- (BOOL)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg2 replacementText:(id)arg3;
- (BOOL)keyboardInputChanged:(id)arg1;
- (void)keyboardInputChangedSelection:(id)arg1;
- (BOOL)keyboardInputShouldDelete:(id)arg1;
- (NSInteger)marginTop;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)mouseDown:(struct __GSEvent { }*)arg1;
- (void)mouseDragged:(struct __GSEvent { }*)arg1;
- (void)mouseUp:(struct __GSEvent { }*)arg1;
- (struct CGPoint { float x1; float x2; })offset;
- (void)performBecomeEditableTasks;
- (void)recalculateStyle;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForSelection:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)registerForEditingDelegateNotification:(id)arg1 selector:(SEL)arg2;
- (BOOL)resignFirstResponder;
- (void)scrollRangeToVisible:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)scrollRectToVisible:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 animated:(BOOL)arg2;
- (void)scrollToMakeCaretVisible:(BOOL)arg1;
- (BOOL)scrollingEnabled;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })selectedRange;
- (void)setAllowsFourWayRubberBanding:(BOOL)arg1;
- (void)setAllowsRubberBanding:(BOOL)arg1;
- (void)setBottomBufferHeight:(float)arg1;
- (void)setContentToHTMLString:(id)arg1;
- (void)setEditable:(BOOL)arg1;
- (void)setFont:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setMarginTop:(NSInteger)arg1;
- (void)setOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)setScrollerIndicatorSubrect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setScrollingEnabled:(BOOL)arg1;
- (void)setSelectedRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)setSelectionToEnd;
- (void)setSelectionToStart;
- (void)setSelectionWithPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setShowScrollerIndicators:(BOOL)arg1;
- (void)setText:(id)arg1;
- (void)setTextAlignment:(NSInteger)arg1;
- (void)setTextColor:(id)arg1;
- (BOOL)showScrollerIndicators;
- (id)styleString;
- (id)text;
- (NSInteger)textAlignment;
- (id)textColor;
- (id)textInputTraits;
- (void)textLoupeTimerAction;
- (struct CGSize { float x1; float x2; })tileSizeForSize:(struct CGSize { float x1; float x2; })arg1;
- (void)touchBegan:(struct { BOOL x1; union { struct { id x_1_2_1; id x_1_2_2; } x_2_1_1; struct __GSEvent {} *x_2_1_2; } x2; }*)arg1 atLocation:(struct CGPoint { float x1; float x2; })arg2;
- (void)touchEnded:(struct { BOOL x1; union { struct { id x_1_2_1; id x_1_2_2; } x_2_1_1; struct __GSEvent {} *x_2_1_2; } x2; }*)arg1 atLocation:(struct CGPoint { float x1; float x2; })arg2 loupeActive:(BOOL)arg3 loupeTerminalPoint:(struct CGPoint { float x1; float x2; })arg4;
- (void)touchMoved:(struct { BOOL x1; union { struct { id x_1_2_1; id x_1_2_2; } x_2_1_1; struct __GSEvent {} *x_2_1_2; } x2; }*)arg1 atLocation:(struct CGPoint { float x1; float x2; })arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)updateWebViewObjects;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleTextRect;
- (id)webView;
- (void)webViewDidChange:(id)arg1;

@end
