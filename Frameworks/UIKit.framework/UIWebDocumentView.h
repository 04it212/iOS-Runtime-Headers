/* Generated by RuntimeBrowser on iPhone OS 2.2.1
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class WebView, DOMHTMLElement, UIInformalDelegate, NSMutableSet, UIAutoscrollTimer, NSMutableArray, WebViewReachabilityObserver, UIView, UITextLoupe, UITextInputTraits, DOMNode<UIFormControl>, UIModalView, WebPDFView, DOMNode, NSTimer, CALayer;



@interface UIWebDocumentView : UITiledView <UIKeyboardInput, UIModalViewDelegate, WebFormDelegate>
{
    struct WKWindow { struct _WKObject { 
            NSUInteger referenceCount; 
            struct _WKClassInfo {} *classInfo; 
        } x1; struct CGRect { 
            struct CGPoint { 
                float x; 
                float y; 
            } origin; 
            struct CGSize { 
                float width; 
                float height; 
            } size; 
        } x2; struct WKView {} *x3; struct WKView {} *x4; struct __GSEvent {} *x5; int (*x6)(); void *x7; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; } *_window;
    WebView *_webView;
    WebViewReachabilityObserver *_reachabilityObserver;
    id m_parentTextView;
    id _delegate;
    id _textSuggestionDelegate;
    id _editingDelegate;
    float _doubleTapDelay;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _doubleTapRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _mainDocumentDoubleTapRect;
    struct CGPoint { 
        float x; 
        float y; 
    } _scrollPoint;
    struct CGPoint { 
        float x; 
        float y; 
    } _doubleTapStartPosition;
    double _doubleTapStartTime;
    struct CGSize { 
        float width; 
        float height; 
    } _pendingSize;
    NSInteger _orientation;
    UITextLoupe *_textLoupe;
    DOMHTMLElement *_standaloneEditingElement;
    struct CGPoint { 
        float x; 
        float y; 
    } _mouseDownPoint;
    double _mouseDownTime;
    UIAutoscrollTimer *_autoscrollTimer;
    struct __CFDictionary { } *_plugInViews;
    struct CGRect { struct CGPoint { 
            float x; 
            float y; 
        } x1; struct CGSize { 
            float width; 
            float height; 
        } x2; } *_accurateDirtyRects;
    NSUInteger _accurateDirtyRectCount;
    CALayer *_contentLayersHostingLayer;
    UITextInputTraits *_traits;
    struct { 
        NSMutableArray *all; 
        NSMutableArray *html; 
        NSMutableArray *javascript; 
        NSMutableArray *css; 
        NSMutableArray *error; 
        NSMutableArray *warning; 
        NSMutableArray *tip; 
        NSMutableArray *log; 
    } _messages;
    struct { 
        BOOL isEdited; 
        BOOL isTransitioning; 
        BOOL allowsUnapprovedFocus; 
        BOOL zoomsFocusedFormControl; 
        DOMNode<UIFormControl> *element; 
        UIInformalDelegate *delegate; 
    } _forms;
    struct { 
        NSTimer *timer; 
        struct CGPoint { 
            float x; 
            float y; 
        } location; 
        BOOL isBlocked; 
        BOOL isCancelled; 
        BOOL isOnWebThread; 
        BOOL isDisplayingHighlight; 
        BOOL attemptedClick; 
        BOOL isGestureScrolling; 
        struct CGPoint { 
            float x; 
            float y; 
        } gestureScrollPoint; 
        struct CGPoint { 
            float x; 
            float y; 
        } gestureCurrentPoint; 
        BOOL hasAttemptedGestureScrolling; 
        UIView *candidate; 
        BOOL forwardingGuard; 
        SEL mouseUpForwarder; 
        SEL mouseDraggedForwarder; 
        DOMNode *element; 
        UIInformalDelegate *delegate; 
        UIModalView *imageSheet; 
        BOOL allowsImageSheet; 
        struct { 
            BOOL active; 
            BOOL defaultPrevented; 
            NSMutableArray *regions; 
        } directEvents; 
        NSMutableSet *touches; 
    } _interaction;
    struct { 
        WebPDFView *view; 
        NSTimer *timer; 
    } _pdf;
    struct { 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
        float initialScale; 
        float minimumScale; 
        float maximumScale; 
        BOOL allowsUserScaling; 
    } _viewportConfigurations[6];
    struct CGSize { 
        float width; 
        float height; 
    } _minimumSize;
    NSInteger _documentType;
    float _documentScale;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _documentBounds;
    NSInteger _enabledGestures;
    NSUInteger _customConfigurations;
    NSUInteger _mouseDownCount;
    unsigned int _webCoreNeedsSetNeedsDisplay : 1;
    unsigned int _webCoreNeedsDraw : 1;
    unsigned int _ignoresFocusingMouse : 1;
    unsigned int _ignoresKeyEvents : 1;
    unsigned int _autoresizes : 1;
    unsigned int _scalesToFit : 1;
    unsigned int _hasCustomScale : 1;
    unsigned int _userScrolled : 1;
    unsigned int _pageNeedsReset : 1;
    unsigned int _hasScrollPoint : 1;
    unsigned int _setNeedsDisplayWasForced : 1;
    unsigned int _gesturesDisabled : 1;
    unsigned int _doubleTapRectIsReplaced : 1;
    unsigned int _standaloneEditableView : 1;
    unsigned int _isFieldEditor : 1;
    unsigned int _widgetEditingView : 1;
    unsigned int _mouseDragged : 1;
    unsigned int _textLoupeActive : 1;
    unsigned int _mouseReentrancyGuard : 1;
    unsigned int _smoothsFonts : 1;
    unsigned int _isShowingFullScreenPlugIn : 1;
    unsigned int _isSettingRedrawFrame : 1;
    unsigned int _needsScrollNotifications : 1;
    unsigned int _loadsSynchronously : 1;
    unsigned int _detectsPhoneNumbers : 1;
    unsigned int _mouseDown : 1;
    unsigned int _usePreTimberlineTransparencyBehavior : 1;
}

@property BOOL acceptsEmoji;
@property BOOL contentsIsSingleValue;
@property id textSuggestionDelegate;
@property NSInteger textSelectionBehavior;
@property NSInteger textLoupeVisibility;
@property NSUInteger insertionPointWidth;
@property(retain) UIColor *insertionPointColor;
@property __CFCharacterSet *textTrimmingSet;
@property(getter=isSecureTextEntry) BOOL secureTextEntry;
@property BOOL enablesReturnKeyAutomatically;
@property NSInteger returnKeyType;
@property NSInteger keyboardAppearance;
@property NSInteger keyboardType;
@property NSInteger autocorrectionType;
@property NSInteger autocapitalizationType;

+ (Class)layerClass;
+ (id)_calloutViewForWebView:(id)arg1;
+ (id)_createDefaultHighlightView;
+ (id)_highlightView;
+ (id)_PDFPageNumberLabel;

- (id)_doubleTapSpeedFromDefaults;
- (void)_restoreViewportSettingsWithSize:(struct CGSize { float x1; float x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)enableReachability;
- (void)dealloc;
- (void)release;
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)arg1;
- (void)stopLoading:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)loadRequest:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)setLoadsSynchronously:(BOOL)arg1;
- (BOOL)loadsSynchronously;
- (id)webView;
- (void)setUserStyleSheet:(id)arg1;
- (void)setDetectsPhoneNumbers:(BOOL)arg1;
- (BOOL)detectsPhoneNumbers;
- (void)setUsePreTimberlineTransparencyBehavior;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (float)integralScaleForScale:(float)arg1;
- (void)_setDocumentScale:(float)arg1;
- (float)viewportWidth;
- (float)viewportHeight;
- (float)minimumScaleForMinimumSize:(struct CGSize { float x1; float x2; })arg1;
- (float)initialScale;
- (float)minimumScale;
- (void)viewportConfigurationsDidChange:(NSUInteger)arg1;
- (void)_setDocumentType:(NSInteger)arg1 overrideCustomConfigurations:(BOOL)arg2;
- (void)_setDocumentType:(NSInteger)arg1;
- (void)_updateSize;
- (void)_clearDoubleTapRect;
- (void)webView:(id)arg1 didReceiveViewportArguments:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 needsScrollNotifications:(id)arg2 forFrame:(id)arg3;
- (BOOL)needsScrollNotifications;
- (void)enclosingScrollerDidScroll;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didReceiveDocTypeForFrame:(id)arg2;
- (void)_WAKViewSizeDidChange:(id)arg1;
- (void)setEnabledGestures:(NSInteger)arg1;
- (NSInteger)enabledGestures;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })documentBounds;
- (void)setAutoresizes:(BOOL)arg1;
- (void)setMinimumSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setViewportSize:(struct CGSize { float x1; float x2; })arg1 forDocumentTypes:(NSInteger)arg2;
- (void)setInitialScale:(float)arg1 forDocumentTypes:(NSInteger)arg2;
- (void)setMinimumScale:(float)arg1 forDocumentTypes:(NSInteger)arg2;
- (void)setMaximumScale:(float)arg1 forDocumentTypes:(NSInteger)arg2;
- (void)setAllowsUserScaling:(BOOL)arg1 forDocumentTypes:(NSInteger)arg2;
- (BOOL)_updatesScroller;
- (void)_setScrollerOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)_restoreScrollPointForce:(BOOL)arg1;
- (void)_resetForNewPage;
- (void)webView:(id)arg1 saveStateToHistoryItem:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 restoreStateFromHistoryItem:(id)arg2 forFrame:(id)arg3 force:(BOOL)arg4;
- (BOOL)webView:(id)arg1 shouldScrollToPoint:(struct CGPoint { float x1; float x2; })arg2 forFrame:(id)arg3;
- (struct CGPoint { float x1; float x2; })contentsPointForWebView:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })documentVisibleRectForWebView:(id)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (BOOL)tileDrawingEnabled;
- (void)_webCoreNeedsDisplay;
- (void)accurateDirtyRects:(struct CGRect {}**)arg1 count:(NSUInteger*)arg2 clear:(BOOL)arg3;
- (BOOL)shouldRepaintInPieces:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 region:(void*)arg2;
- (void)flushDirtyRects;
- (void)forceLayout;
- (void)layoutSubviews;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setNeedsDisplay;
- (void)layoutBeforeDraw;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setSmoothsFonts:(BOOL)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)cancelMouseTracking;
- (BOOL)cancelTouchTracking;
- (void)setIgnoresFocusingMouse:(BOOL)arg1;
- (void)setIgnoresKeyEvents:(BOOL)arg1;
- (void)_didScroll;
- (void)_sendInternalEvent:(struct __GSEvent { }*)arg1;
- (struct CGPoint { float x1; float x2; })_viewportLocationForEvent:(struct __GSEvent { }*)arg1;
- (BOOL)_isSubviewOfPlugInView:(id)arg1;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (void)clickAfterDelay:(float)arg1;
- (void)setDoubleTapDelay:(float)arg1;
- (float)doubleTapDelay;
- (void)keyUp:(struct __GSEvent { }*)arg1;
- (void)keyDown:(struct __GSEvent { }*)arg1;
- (void)gestureStarted:(struct __GSEvent { }*)arg1;
- (void)gestureChanged:(struct __GSEvent { }*)arg1;
- (void)gestureEnded:(struct __GSEvent { }*)arg1;
- (void)_notifyPlugInViewsOfScaleChange;
- (void)_notifyContentHostingLayersOfScaleChange;
- (id)contentsHostingLayerForWebView:(id)arg1;
- (void)zoomToScale:(float)arg1;
- (void)_reshapePlugInViews;
- (void)redrawScaledDocument;
- (void)setOrientation:(NSInteger)arg1;
- (struct CGPoint { float x1; float x2; })_centeredScrollPointForPoint:(struct CGPoint { float x1; float x2; })arg1 scale:(float)arg2;
- (struct CGPoint { float x1; float x2; })_doubleTapScrollPointForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 scale:(float)arg2 event:(struct __GSEvent { }*)arg3;
- (float)_doubleTapScaleForSize:(float)arg1 isWidth:(BOOL)arg2;
- (BOOL)_doubleTapZoomToRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 scale:(float)arg2 fromEvent:(struct __GSEvent { }*)arg3;
- (void)doubleTap:(struct __GSEvent { }*)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })doubleTapRect;
- (BOOL)doubleTapRectIsReplaced;
- (void)setIsStandaloneEditableView:(BOOL)arg1;
- (BOOL)isStandaloneEditableView;
- (void)setStandaloneEditingElement:(id)arg1;
- (id)standaloneEditingElement;
- (void)setIsWidgetEditingView:(BOOL)arg1;
- (BOOL)isWidgetEditingView;
- (BOOL)updateKeyboardStateOnResponderChanges;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canResignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (id)_responderForBecomeFirstResponder;
- (BOOL)makeWKFirstResponder;
- (void)ensureSelection;
- (id)_parentTextView;
- (void)_setParentTextView:(id)arg1;
- (BOOL)isFieldEditor;
- (BOOL)_editable;
- (void)_setEditable:(BOOL)arg1;
- (id)delegate;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (void)replaceCurrentWordWithText:(id)arg1;
- (void)clearPlaceholder;
- (void)setupPlaceholderTextIfNeeded;
- (void)setMarkedText:(id)arg1;
- (void)confirmMarkedText:(id)arg1;
- (id)markedText;
- (unsigned short)characterInRelationToCaretSelection:(NSInteger)arg1;
- (unsigned short)characterBeforeCaretSelection;
- (unsigned short)characterAfterCaretSelection;
- (id)fontForCaretSelection;
- (id)textColorForCaretSelection;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForNSRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectContainingCaretSelection;
- (id)wordRangeContainingCaretSelection;
- (id)wordContainingCaretSelection;
- (id)wordInRange:(id)arg1;
- (void)expandSelectionToStartOfWordContainingCaretSelection;
- (NSInteger)wordOffsetInRange:(id)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })selectionRange;
- (id)selectedDOMRange;
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(BOOL)arg2;
- (id)rangeByMovingCurrentSelection:(NSInteger)arg1;
- (id)rangeByExtendingCurrentSelection:(NSInteger)arg1;
- (BOOL)hasSelection;
- (BOOL)selectionAtDocumentStart;
- (BOOL)selectionAtSentenceStart;
- (BOOL)selectionAtWordStart;
- (BOOL)rangeAtSentenceStart:(id)arg1;
- (void)moveBackward:(NSUInteger)arg1;
- (void)moveForward:(NSUInteger)arg1;
- (void)selectAll;
- (void)setText:(id)arg1;
- (id)text;
- (BOOL)hasText;
- (void)updateSelectionWithPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setCaretChangeListener:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertCaretRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)keyboardInputView;
- (BOOL)isShowingPlaceholder;
- (id)implementationWebView;
- (BOOL)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg2 replacementText:(id)arg3;
- (BOOL)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(BOOL)arg3;
- (BOOL)keyboardInputShouldDelete:(id)arg1;
- (BOOL)keyboardInputChanged:(id)arg1;
- (void)keyboardInputChangedSelection:(id)arg1;
- (id)automaticallySelectedOverlay;
- (void)setBottomBufferHeight:(float)arg1;
- (NSInteger)keyboardInput:(id)arg1 positionForAutocorrection:(id)arg2;
- (BOOL)isProxyFor:(id)arg1;
- (BOOL)requiresKeyEvents;
- (void)handleKeyEvent:(struct __GSEvent { }*)arg1;
- (void)setWKWindowIsSuspendedWindow:(BOOL)arg1;
- (id)webView:(id)arg1 plugInViewWithArguments:(id)arg2 fromPlugInPackage:(id)arg3;
- (void)webView:(id)arg1 willShowFullScreenForPlugInView:(id)arg2;
- (void)webView:(id)arg1 didHideFullScreenForPlugInView:(id)arg2;
- (void)didRemovePlugInView:(id)arg1;
- (BOOL)isShowingFullScreenPlugInUI;
- (id)textInputTraits;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)takeTraitsFrom:(id)arg1;
- (void)formAssistant:(id)arg1 willStartAssistingFormControl:(id)arg2;
- (void)formAssistant:(id)arg1 didStartAssistingFormControl:(id)arg2;
- (void)formAssistant:(id)arg1 didStopAssistingFormControl:(id)arg2;
- (void)textFieldDidBeginEditing:(id)arg1 inFrame:(id)arg2;
- (void)textFieldDidEndEditing:(id)arg1 inFrame:(id)arg2;
- (void)formElementDidSetValue:(id)arg1;
- (void)textDidChangeInTextField:(id)arg1 inFrame:(id)arg2;
- (void)textDidChangeInTextArea:(id)arg1 inFrame:(id)arg2;
- (BOOL)textField:(id)arg1 doCommandBySelector:(SEL)arg2 inFrame:(id)arg3;
- (BOOL)textField:(id)arg1 shouldHandleEvent:(struct __GSEvent { }*)arg2 inFrame:(id)arg3;
- (void)formElementDidFocus:(id)arg1;
- (void)formElementDidBlur:(id)arg1;
- (void)frame:(id)arg1 sourceFrame:(id)arg2 willSubmitForm:(id)arg3 withValues:(id)arg4 submissionListener:(id)arg5;
- (void)didFinishLoading:(id)arg1;
- (void)addInputString:(id)arg1;
- (void)deleteFromInput;
- (void)setAllowsUnapprovedFocus:(BOOL)arg1;
- (BOOL)allowsUnapprovedFocus;
- (void)setFormEditingDelegate:(id)arg1;
- (id)formEditingDelegate;
- (BOOL)zoomsFocusedFormControl;
- (void)setZoomsFocusedFormControl:(BOOL)arg1;
- (BOOL)isFormEdited;
- (BOOL)webView:(id)arg1 shouldChangeSelectedDOMRange:(id)arg2 toDOMRange:(id)arg3 affinity:(NSInteger)arg4 stillSelecting:(BOOL)arg5;
- (struct CGPoint { float x1; float x2; })constrainScrollOffset:(struct CGPoint { float x1; float x2; })arg1 toDeviceRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 factor:(float)arg3;
- (void)scrollCaretToVisible:(id)arg1;
- (void)_showImageSheet;
- (void)clearInteractionTimer;
- (void)performInteractionSelector:(SEL)arg1 afterDelay:(double)arg2;
- (struct CGPoint { float x1; float x2; })convertWindowPointToViewport:(struct CGPoint { float x1; float x2; })arg1;
- (void)mouseDown:(struct __GSEvent { }*)arg1;
- (void)mouseUp:(struct __GSEvent { }*)arg1;
- (void)mouseDragged:(struct __GSEvent { }*)arg1;
- (void)interactionMouseUp:(struct __GSEvent { }*)arg1;
- (void)interactionMouseDown:(struct __GSEvent { }*)arg1;
- (void)defaultMouseDragged:(struct __GSEvent { }*)arg1;
- (void)defaultMouseUp:(struct __GSEvent { }*)arg1;
- (BOOL)canHandleHandEvent:(struct __GSEvent { }*)arg1;
- (BOOL)handleHandEvent:(struct __GSEvent { }*)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)webView:(id)arg1 eventRegionsChanged:(id)arg2;
- (BOOL)_directEventsHitTest:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)_directEventsCheckEvent:(struct __GSEvent { }*)arg1;
- (BOOL)_directEventsProcessEvent:(struct __GSEvent { }*)arg1;
- (void)cancelInteractionWithCandidate;
- (void)forwardMouseUpToInteractionCandidate:(struct __GSEvent { }*)arg1;
- (void)forwardMouseDraggedToInteractionCandidate:(struct __GSEvent { }*)arg1;
- (void)forwardEventsToInteractionCandidate;
- (void)performCandidateClick:(id)arg1;
- (void)performClick:(id)arg1;
- (void)attemptClick:(id)arg1;
- (void)webView:(id)arg1 didObserveDeferredContentChange:(NSInteger)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didPreventDefaultForEvent:(struct __GSEvent { }*)arg2;
- (id)approximateNodeAtViewportLocation:(struct CGPoint { float x1; float x2; }*)arg1;
- (void)calloutApproximateNode;
- (void)highlightApproximateNodeInverted:(BOOL)arg1;
- (void)hideCalloutAndHighlight;
- (void)highlightApproximateNodeAndDisplayCallout;
- (void)resetInteraction;
- (void)completeInteraction;
- (void)cancelInteraction;
- (void)deferInteraction;
- (void)cancelInteractionWithImmediateDisplay:(BOOL)arg1;
- (void)_saveImages:(id)arg1;
- (void)alertSheet:(id)arg1 buttonClicked:(NSInteger)arg2;
- (void)modalView:(id)arg1 didDismissWithButtonIndex:(NSInteger)arg2;
- (void)sendScrollWheelEvents;
- (BOOL)eventCanTriggerGestureScrolling:(struct __GSEvent { }*)arg1;
- (void)setInteractionDelegate:(id)arg1;
- (id)interactionDelegate;
- (void)setAllowsImageSheet:(BOOL)arg1;
- (void)webView:(id)arg1 didReceiveMessage:(id)arg2;
- (void)setAllowsMessaging:(BOOL)arg1;
- (BOOL)allowsMessaging;
- (id)messagesMatchingMask:(NSInteger)arg1;
- (void)clearMessagesMatchingMask:(NSInteger)arg1;
- (void)hidePDFPageNumberLabel;
- (void)updatePDFPageNumberLabel;
- (BOOL)mouseEventsChangeSelection;
- (BOOL)shouldChangeSelectionForEvent:(struct __GSEvent { }*)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleRectForSelecting;
- (struct CGPoint { float x1; float x2; })constrainedPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)startAutoscroll:(struct CGPoint { float x1; float x2; })arg1;
- (void)cancelAutoscroll;
- (void)textLoupeTimerAction;
- (void)selectionMouseDown:(struct __GSEvent { }*)arg1;
- (void)selectionMouseDragged:(struct __GSEvent { }*)arg1;
- (void)selectionMouseUp:(struct __GSEvent { }*)arg1;
- (BOOL)textLoupeActive;
- (void)setTextLoupeActive:(BOOL)arg1;
- (void)createTextLoupeIfNeeded;
- (id)textLoupe;
- (void)updateTextLoupe:(struct CGPoint { float x1; float x2; })arg1;
- (void)removeTextLoupe;
- (void)fadeTextLoupe;
- (BOOL)autocorrectPromptCapturedMouseDown:(struct __GSEvent { }*)arg1;
- (id)createCSSStyleDeclaration;

@end
