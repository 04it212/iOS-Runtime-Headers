/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class DOMHTMLElement, UIResponder<UITextSelection>, UIResponder<UITextInput>, UITextInputTraits, DOMElement, <UITextInputTokenizer>, UITextInteractionAssistant, UIReferenceLibraryViewController, UILongPressGestureRecognizer, UITextSelectionView, CALayer, UIPanGestureRecognizer, UIColor, UITextRange, NSMutableSet, UIView, UIPopoverController, UITextPosition, NSArray, UIImage, WebThreadSafeUndoManager, WebView, WebViewReachabilityObserver, UITextChecker, UIWebRotatingSheet, <UITextInputDelegate>, NSTimer, UIView<UITextSelectingContent>, DOMNode, UIWebSelectionAssistant, UIAutoscroll, UITapGestureRecognizer, NSDictionary;

@interface UIWebDocumentView : UIWebTiledView <UITextSelectingContent, UIAutoscrollContainer, UIActionSheetDelegate, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, UITextSelection> {
    int _retainCount;
    struct WKWindow { struct _WKObject { unsigned int x_1_1_1; struct _WKClassInfo {} *x_1_1_2; } x1; id x2; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_3_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_3_1_2; } x3; struct WKView {} *x4; struct WKView {} *x5; struct WKView {} *x6; struct CGSize { float x_7_1_1; float x_7_1_2; } x7; struct CGSize { float x_8_1_1; float x_8_1_2; } x8; float x9; unsigned int x10 : 1; } *_wkWindow;
    WebView *_webView;
    WebViewReachabilityObserver *_reachabilityObserver;
    id m_parentTextView;
    id _delegate;
    id _textSuggestionDelegate;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _doubleTapRect;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _mainDocumentDoubleTapRect;
    struct CGPoint { 
        float x; 
        float y; 
    } _scrollPoint;
    struct CGPoint { 
        float x; 
        float y; 
    } _doubleTapStartPosition;
    double _doubleTapStartTime;
    struct CGSize { 
        float width; 
        float height; 
    } _pendingSize;
    int _orientation;
    DOMHTMLElement *_standaloneEditingElement;
    struct CGPoint { 
        float x; 
        float y; 
    } _mouseDownPoint;
    double _mouseDownTime;
    UIAutoscroll *_autoscroll;
    struct __CFDictionary { } *_plugInViews;
    int m_selectionGranularity;
    CALayer *_contentLayersHostingLayer;
    CALayer *_flattenedRotatingContentLayer;
    NSMutableSet *_overflowScrollViewsPendingInsertion;
    NSMutableSet *_overflowScrollViewsPendingDeletion;
    NSMutableSet *_overflowScrollViews;
    NSArray *_additionalSubviews;
    UITextInputTraits *_traits;
    <UITextInputDelegate> *_inputDelegate;
    UITapGestureRecognizer *_singleTapGestureRecognizer;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;
    UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;
    struct { 
        NSTimer *timer; 
        struct CGPoint { 
            float x; 
            float y; 
        } location; 
        BOOL isBlocked; 
        BOOL isCancelled; 
        BOOL isOnWebThread; 
        BOOL isDisplayingHighlight; 
        BOOL attemptedClick; 
        struct CGPoint { 
            float x; 
            float y; 
        } lastPanTranslation; 
        DOMNode *element; 
        id delegate; 
        UIWebRotatingSheet *interactionSheet; 
        NSArray *elementActions; 
        BOOL allowsImageSheet; 
        BOOL allowsDataDetectorsSheet; 
        BOOL allowsLinkSheet; 
        BOOL acceptsFirstResponder; 
    } _interaction;
    struct UIWebDocumentViewViewportConfiguration { 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
        float initialScale; 
        float minimumScale; 
        float maximumScale; 
        BOOL allowsUserScaling; 
    } _defaultViewportConfigurations[5];
    struct UIWebDocumentViewViewportConfiguration { 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
        float initialScale; 
        float minimumScale; 
        float maximumScale; 
        BOOL allowsUserScaling; 
    } _currentViewportConfiguration;
    struct CGSize { 
        float width; 
        float height; 
    } _minimumSize;
    int _documentType;
    float _documentScale;
    float _previousDocumentScale;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _documentBounds;
    struct CGSize { 
        float width; 
        float height; 
    } _fixedLayoutOriginRoundingDelta;
    struct CGSize { 
        float width; 
        float height; 
    } _fixedLayoutSizeRoundingDelta;
    unsigned int _customConfigurations;
    unsigned int _mouseDownCount;
    unsigned int _dataDetectorTypes;
    unsigned int _webCoreNeedsSetNeedsDisplay : 1;
    unsigned int _webCoreNeedsDraw : 1;
    unsigned int _ignoresFocusingMouse : 1;
    unsigned int _ignoresKeyEvents : 1;
    unsigned int _autoresizes : 1;
    unsigned int _ignoresViewportOverflowWhenAutoresizing : 1;
    unsigned int _updatingSize : 1;
    unsigned int _scalesToFit : 1;
    unsigned int _updatesScrollView : 1;
    unsigned int _hasCustomScale : 1;
    unsigned int _shouldRestoreScrollPosition : 1;
    unsigned int _pageNeedsReset : 1;
    unsigned int _hasScrollPoint : 1;
    unsigned int _gesturesDisabled : 1;
    unsigned int _doubleTapRectIsReplaced : 1;
    unsigned int _standaloneEditableView : 1;
    unsigned int _widgetEditingView : 1;
    unsigned int _mouseDragged : 1;
    unsigned int _mouseReentrancyGuard : 1;
    unsigned int _isShowingFullScreenPlugIn : 1;
    unsigned int _isSettingRedrawFrame : 1;
    unsigned int _needsScrollNotifications : 1;
    unsigned int _loadsSynchronously : 1;
    unsigned int _mouseDown : 1;
    unsigned int _usePreTimberlineTransparencyBehavior : 1;
    unsigned int _geolocationDialogAllowed : 1;
    unsigned int _usingMinimalTilesDuringLoading : 1;
    unsigned int _sheetsCount : 2;
    unsigned int _didFirstVisuallyNonEmptyLayout : 1;
    unsigned int _loadInProgress : 1;
    unsigned int _uiwdvIsResigningFirstResponder : 1;
    unsigned int _classicViewportMode : 1;
    unsigned int _sizeUpdatesSuspended : 1;
    unsigned int _sizeUpdateOccurredWhileSuspended : 1;
    unsigned int _shouldOnlyRecognizeGesturesOnActiveElements : 1;
    unsigned int _shouldIgnoreCustomViewport : 1;
    unsigned int _ignoresFocusEventFromFirstResponderChange : 1;
    unsigned int _shouldCloseWebViewAtDealloc : 1;
    unsigned int _shouldRemoveUserStyleSheet : 1;
    unsigned int _hasDrawnTiles : 1;
    unsigned int _showingTextStyleOptions : 1;
    unsigned int _subviewCachesNeedUpdate : 1;
    unsigned int _avoidFixedPositionUpdateOnZoomStart : 1;
    WebThreadSafeUndoManager *_undoManager;
    UIWebSelectionAssistant *_webSelectionAssistant;
    UITextInteractionAssistant *_textSelectionAssistant;
    UITextSelectionView *_textSelectionView;
    UITextChecker *_textChecker;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _caretInsets;
    int _selectionAffinity;
    UIPopoverController *_definePopoverController;
    UIReferenceLibraryViewController *_defineViewController;
    DOMElement *_imagePlaceholder;
    id _imagePlaceholderRemovalObserver;
}

@property(readonly) int selectionState;
@property(readonly) UIResponder<UITextInput> * asText;
@property struct CGPoint { float x1; float x2; } autoscrollContentOffset;
@property(getter=_acceptsFirstResponder,setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;
@property(getter=isDoubleTapEnabled) BOOL doubleTapEnabled;
@property BOOL shouldIgnoreCustomViewport;
@property BOOL shouldOnlyRecognizeGesturesOnActiveElements;
@property BOOL sizeUpdatesSuspended;
@property BOOL mediaPlaybackAllowsAirPlay;
@property int autocapitalizationType;
@property int autocorrectionType;
@property int spellCheckingType;
@property int keyboardType;
@property int keyboardAppearance;
@property int returnKeyType;
@property BOOL enablesReturnKeyAutomatically;
@property(getter=isSecureTextEntry) BOOL secureTextEntry;
@property(copy) UITextRange * selectedTextRange;
@property(readonly) UITextRange * markedTextRange;
@property(copy) NSDictionary * markedTextStyle;
@property(readonly) UITextPosition * beginningOfDocument;
@property(readonly) UITextPosition * endOfDocument;
@property <UITextInputDelegate> * inputDelegate;
@property(readonly) <UITextInputTokenizer> * tokenizer;
@property(readonly) UIView * textInputView;
@property int selectionAffinity;
@property struct __CFCharacterSet { }* textTrimmingSet;
@property(retain) UIColor * insertionPointColor;
@property(retain) UIColor * selectionBarColor;
@property(retain) UIColor * selectionHighlightColor;
@property(retain) UIImage * selectionDragDotImage;
@property unsigned int insertionPointWidth;
@property int textLoupeVisibility;
@property int textSelectionBehavior;
@property id textSuggestionDelegate;
@property BOOL contentsIsSingleValue;
@property BOOL acceptsEmoji;
@property int emptyContentReturnKeyType;
@property BOOL returnKeyGoesToNextResponder;
@property BOOL acceptsFloatingKeyboard;
@property BOOL acceptsSplitKeyboard;
@property(getter=isRichText) BOOL richText;
@property BOOL displaySecureTextUsingPlainText;
@property BOOL learnsCorrections;
@property int shortcutConversionType;
@property BOOL suppressReturnKeyStyling;
@property BOOL acceptsForwardDelete;
@property BOOL forceEnableForwardDelete;
@property(getter=isEditable,readonly) BOOL editable;
@property(getter=isEditing,readonly) BOOL editing;
@property int selectionGranularity;
@property(readonly) UITextSelectionView * selectionView;
@property(readonly) UITextInteractionAssistant * interactionAssistant;
@property(readonly) UIView<UITextSelectingContent> * content;
@property(readonly) UIResponder<UITextSelection> * textDocument;

+ (id)_sharedHighlightView;
+ (id)_createDefaultHighlightView;
+ (double)getTimestamp;
+ (id)standardTextViewPreferences;
+ (Class)layerClass;
+ (void)initialize;

- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setDelegate:(id)arg1;
- (Class)_printFormatterClass;
- (BOOL)setRangedSelectionExtentPoint:(struct CGPoint { float x1; float x2; })arg1 baseIsStart:(BOOL)arg2;
- (void)setCaretInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)smartExtendRangedSelection:(int)arg1;
- (id)wordAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setRangedSelectionExtentPoint:(struct CGPoint { float x1; float x2; })arg1 baseIsStart:(BOOL)arg2 allowFlipping:(BOOL)arg3;
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;
- (void)setRangedSelectionBaseToCurrentSelectionEnd;
- (void)setRangedSelectionBaseToCurrentSelectionStart;
- (struct CGPoint { float x1; float x2; })convertPointToSelectedFrameCoordinates:(struct CGPoint { float x1; float x2; })arg1;
- (id)textInDOMRange:(id)arg1;
- (void)setSelectionWithFirstPoint:(struct CGPoint { float x1; float x2; })arg1 secondPoint:(struct CGPoint { float x1; float x2; })arg2;
- (id)selectionRects;
- (void)setRangedSelectionWithExtentPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)clearRangedSelectionInitialExtent;
- (void)setRangedSelectionBaseToCurrentSelection;
- (id)asText;
- (void)drawPage:(unsigned int)arg1 withPaginationInfo:(id)arg2;
- (void)endPrintMode;
- (id)beginPrintModeWithSize:(struct CGSize { float x1; float x2; })arg1 startOffset:(float)arg2 minimumLayoutWidth:(float)arg3 maximumLayoutWidth:(float)arg4 tileClippedContent:(BOOL)arg5;
- (id)beginPrintModeWithWidth:(float)arg1 height:(float)arg2 startOffset:(float)arg3 shrinkToFit:(BOOL)arg4;
- (BOOL)isInPrintMode;
- (void)_drawPDFPagesForPage:(unsigned int)arg1 withPaginationInfo:(id)arg2;
- (id)_beginPrintModeForPDFView:(id)arg1 withSize:(struct CGSize { float x1; float x2; })arg2 startOffset:(float)arg3 minimumLayoutWidth:(float)arg4 maximumLayoutWidth:(float)arg5;
- (id)_beginPrintModeForHTMLView:(id)arg1 withSize:(struct CGSize { float x1; float x2; })arg2 startOffset:(float)arg3 minimumLayoutWidth:(float)arg4 maximumLayoutWidth:(float)arg5 tileClippedContent:(BOOL)arg6;
- (id)beginPrintModeForFrame:(id)arg1 withSize:(struct CGSize { float x1; float x2; })arg2 startOffset:(float)arg3 minimumLayoutWidth:(float)arg4 maximumLayoutWidth:(float)arg5 tileClippedContent:(BOOL)arg6;
- (id)beginPrintModeForFrame:(id)arg1 withWidth:(float)arg2 height:(float)arg3 startOffset:(float)arg4 shrinkToFit:(BOOL)arg5 tileClippedContent:(BOOL)arg6;
- (id)beginPrintModeWithWidth:(float)arg1 height:(float)arg2 startOffset:(float)arg3 shrinkToFit:(BOOL)arg4 tileClippedContent:(BOOL)arg5;
- (void)_createSheetWithElementActions:(id)arg1 showLinkTitle:(BOOL)arg2;
- (void)_setAcceptsFirstResponder:(BOOL)arg1;
- (id)superviewForSheet;
- (void)setAllowsLinkSheet:(BOOL)arg1;
- (void)setAllowsImageSheet:(BOOL)arg1;
- (id)interactionDelegate;
- (void)setInteractionDelegate:(id)arg1;
- (void)highlightApproximateNodeAndDisplayInfoSheet;
- (void)webViewDidPreventDefaultForEvent:(id)arg1;
- (void)webView:(id)arg1 didObserveDeferredContentChange:(int)arg2 forFrame:(id)arg3;
- (BOOL)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;
- (id)_targetURL;
- (void)hideTapHighlight;
- (void)resetInteraction;
- (void)performInteractionSelector:(SEL)arg1 afterDelay:(double)arg2;
- (void)_sendMouseMoveAndAttemptClick:(id)arg1;
- (void)performClick:(id)arg1;
- (void)deferInteraction;
- (void)sendScrollWheelEvents;
- (void)_showImageSheet;
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(struct CGPoint { float x1; float x2; })arg1 andLocation:(struct CGPoint { float x1; float x2; })arg2;
- (void)_twoFingerPanRecognized:(id)arg1;
- (void)_longPressRecognized:(id)arg1;
- (void)_highlightLongPressRecognized:(id)arg1;
- (void)_twoFingerDoubleTapRecognized:(id)arg1;
- (void)_doubleTapRecognized:(id)arg1;
- (void)_singleTapRecognized:(id)arg1;
- (id)approximateNodeAtViewportLocation:(struct CGPoint { float x1; float x2; }*)arg1;
- (void)_showLinkSheet;
- (void)_showDataDetectorsSheet;
- (void)attemptClick:(id)arg1;
- (void)_resetInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)highlightApproximateNodeInverted:(BOOL)arg1;
- (void)clearInteractionTimer;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })caretInsets;
- (id)_scriptingInfoForForm:(id)arg1;
- (id)_scriptingInfoForLink:(id)arg1;
- (id)_doubleTapGestureRecognizer;
- (int)documentType;
- (id)_documentUrl;
- (void)_scrollRectToVisible:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 animated:(BOOL)arg2;
- (id)rangeOfEnclosingWord:(id)arg1;
- (void)setSelectedTextRange:(id)arg1 withAffinityDownstream:(BOOL)arg2;
- (BOOL)hasSimpleTextOnlyStructure;
- (void)setTileUpdatesDisabled:(BOOL)arg1;
- (void)_flattenAndSwapContentLayersInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)didEndZoom;
- (void)didZoom;
- (void)willStartZoom;
- (void)scrollViewWasRemoved;
- (void)didEndScroll;
- (void)willStartScrollToTop;
- (void)willStartScroll;
- (void)useSelectionAssistantWithMode:(int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })autoscrollContentFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })autoscrollDragFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleContentFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleFrame;
- (id)webSelectionAssistant;
- (void)webView:(id)arg1 willAddPlugInView:(id)arg2;
- (BOOL)hasPlugInSubviews;
- (void)webView:(id)arg1 didHideFullScreenForPlugInView:(id)arg2;
- (void)webView:(id)arg1 willShowFullScreenForPlugInView:(id)arg2;
- (id)webView:(id)arg1 plugInViewWithArguments:(id)arg2 fromPlugInPackage:(id)arg3;
- (void)setPaused:(BOOL)arg1;
- (id)implementationWebView;
- (void)replaceSelectionWithWebArchive:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (BOOL)updateKeyboardStateOnResponderChanges;
- (BOOL)isWidgetEditingView;
- (void)setIsWidgetEditingView:(BOOL)arg1;
- (id)standaloneEditingElement;
- (void)setStandaloneEditingElement:(id)arg1;
- (BOOL)isStandaloneEditableView;
- (void)setIsStandaloneEditableView:(BOOL)arg1;
- (id)textFormElement;
- (void)assistFormNode:(id)arg1;
- (BOOL)doubleTapRectIsReplaced;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })doubleTapRect;
- (void)_handleTwoFingerDoubleTapAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_handleDoubleTapAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)isDoubleTapEnabled;
- (void)setDoubleTapEnabled:(BOOL)arg1;
- (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;
- (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)arg1;
- (void)sendOrientationEventForOrientation:(int)arg1;
- (void)redrawScaledDocument;
- (id)checkSpellingOfString:(id)arg1;
- (BOOL)_hasSubviewContainingWebContent:(id)arg1;
- (void)_overflowScrollView:(id)arg1 didEndScrollingForNode:(id)arg2;
- (void)_overflowScrollView:(id)arg1 scrollOffsetChangedForNode:(id)arg2;
- (void)_overflowScrollView:(id)arg1 willStartScrollingForNode:(id)arg2;
- (void)webView:(id)arg1 willRemoveScrollingLayer:(id)arg2 withContentsLayer:(id)arg3 forNode:(id)arg4;
- (void)webView:(id)arg1 didCreateOrUpdateScrollingLayer:(id)arg2 withContentsLayer:(id)arg3 scrollSize:(id)arg4 forNode:(id)arg5;
- (void)webViewDidCommitCompositingLayerChanges:(id)arg1;
- (void)_webthread_webView:(id)arg1 attachRootLayer:(id)arg2;
- (void)revealedSelectionByScrollingWebFrame:(id)arg1;
- (id)readDataFromPasteboard:(id)arg1 withIndex:(int)arg2;
- (BOOL)isUnperturbedMarsVoltaResultMarker:(id)arg1;
- (int)getPasteboardChangeCount;
- (BOOL)performsTwoStepPaste:(id)arg1;
- (int)getPasteboardItemsCount;
- (void)writeDataToPasteboard:(id)arg1;
- (BOOL)_isSubviewOfPlugInView:(id)arg1;
- (void)setIgnoresKeyEvents:(BOOL)arg1;
- (void)setSmoothsFonts:(BOOL)arg1;
- (void)forceLayout;
- (BOOL)webView:(id)arg1 shouldScrollToPoint:(struct CGPoint { float x1; float x2; })arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 restoreStateFromHistoryItem:(id)arg2 forFrame:(id)arg3 force:(BOOL)arg4;
- (void)webView:(id)arg1 saveStateToHistoryItem:(id)arg2 forFrame:(id)arg3;
- (void)saveStateToCurrentHistoryItem;
- (BOOL)updatesScrollView;
- (void)setUpdatesScrollView:(BOOL)arg1;
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)arg1;
- (void)setAutoresizes:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })documentBounds;
- (void)webView:(id)arg1 didReceiveDocTypeForFrame:(id)arg2;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;
- (void)webViewDidEndOverflowScroll:(id)arg1;
- (void)webViewDidStartOverflowScroll:(id)arg1;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)enclosingScrollerDidScroll;
- (BOOL)needsScrollNotifications;
- (void)webView:(id)arg1 needsScrollNotifications:(id)arg2 forFrame:(id)arg3;
- (BOOL)isClassicViewportMode;
- (void)webView:(id)arg1 didReceiveViewportArguments:(id)arg2 forFrame:(id)arg3;
- (BOOL)shouldIgnoreCustomViewport;
- (void)setShouldIgnoreCustomViewport:(BOOL)arg1;
- (BOOL)sizeUpdatesSuspended;
- (void)setSizeUpdatesSuspended:(BOOL)arg1;
- (void)_setDocumentType:(int)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toFrame:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromFrame:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toFrame:(id)arg2;
- (float)maximumScale;
- (void)setUsePreTimberlineTransparencyBehavior;
- (BOOL)detectsPhoneNumbers;
- (void)setDetectsPhoneNumbers:(BOOL)arg1;
- (void)setUserStyleSheet:(id)arg1;
- (BOOL)loadsSynchronously;
- (void)setUsesUIScrollView;
- (BOOL)hasDrawnTiles;
- (BOOL)didFirstVisuallyNonEmptyLayout;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (void)enableReachability;
- (id)webVisiblePositionForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)_positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3 withAffinityDownstream:(BOOL)arg4;
- (BOOL)containsOnlySelectableElements;
- (void*)_createIOSurfaceFromRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)_shouldFlattenContentLayersForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (unsigned int)_contentSizeInExposedRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 topLayer:(id)arg2 visibleLayerCount:(int*)arg3;
- (void)_notifyPlugInViewsOfDidEndZooming;
- (void)_notifyPlugInViewsOfDidZoom;
- (void)_notifyPlugInViewsOfWillBeginZooming;
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;
- (BOOL)isCaretInEmptyParagraph;
- (void)toggleBaseWritingDirection;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRectFromSelectedFrameCoordinates:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)isShowingFullScreenPlugInUI;
- (void)setPaused:(BOOL)arg1 withEvents:(BOOL)arg2;
- (void)setCaretChangeListener:(id)arg1;
- (void)_finishedUsingImagePlaceholder;
- (BOOL)_imagePlaceholderHasBeenRemoved;
- (BOOL)hasRangedSelection;
- (id)marsVoltaResultMetadataForRange:(id)arg1;
- (BOOL)isEditingSingleLineElement;
- (void)_undoManagerDidRedo:(id)arg1;
- (void)_undoManagerDidUndo:(id)arg1;
- (void)setInteractionAssistantGestureRecognizers;
- (BOOL)_acceptsFirstResponder;
- (float)_clampScale:(float)arg1 toScrollView:(id)arg2;
- (float)_doubleTapScaleForSize:(float)arg1 isWidth:(BOOL)arg2 isPDF:(BOOL)arg3;
- (void)_handleDoubleTapAtPoint:(struct CGPoint { float x1; float x2; })arg1 inWebHTMLView:(id)arg2 outRenderRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg3;
- (float)minimumScaleForMinimumSize:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)mediaPlaybackAllowsAirPlay;
- (void)setMediaPlaybackAllowsAirPlay:(BOOL)arg1;
- (void)updateInteractionElements;
- (void)_restoreFlattenedContentLayers;
- (void)webViewDidDrawTiles:(id)arg1;
- (BOOL)_shouldUpdateSubviewCachesForPlugins;
- (void)_removeAdditionalSubview:(id)arg1;
- (void)_noteOverflowScrollViewPendingDeletion:(id)arg1;
- (void)_noteOverflowScrollViewPendingInsertion:(id)arg1;
- (void)_reshapePlugInViews;
- (void)_updateSubviewCaches;
- (void)_addAdditionalSubview:(id)arg1;
- (id)_supportedPasteboardTypesForCurrentSelection;
- (BOOL)hasRichlyEditableSelection;
- (BOOL)fragmentContainsRichContent:(id)arg1;
- (id)_focusedOrMainFrame;
- (id)formElement;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_adjustedLayoutRectForFixedPositionObjects;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_layoutRectForFixedPositionObjects;
- (float)_zoomedDocumentScale;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_documentViewVisibleRect;
- (void)_updateFixedPositionContent;
- (void)_cancelLongPressGestureRecognizer;
- (void)_resetForNewPage;
- (void)_saveStateToHistoryItem:(id)arg1;
- (void)_showPendingContentLayers;
- (void)_restoreScrollPointForce:(BOOL)arg1;
- (void)_WAKViewSizeDidChange:(id)arg1;
- (void)_clearAllConsoleMessages;
- (void)_clearDoubleTapRect;
- (void)_resetFormDataForFrame:(id)arg1;
- (void)webThreadWebViewDidLayout:(id)arg1 byScrolling:(BOOL)arg2;
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)arg1;
- (void)_selectionLayoutChangedByScrolling:(BOOL)arg1;
- (void)webThreadWebViewDidLayout:(id)arg1;
- (void)resetTilingAfterLoadComplete;
- (void)setTilingArea:(int)arg1;
- (void)sendScrollEventIfNecessary;
- (void)_updateSize;
- (void)_setDocumentType:(int)arg1 overrideCustomConfigurations:(BOOL)arg2 viewportArguments:(id)arg3;
- (void)viewportConfigurationsDidChange:(unsigned int)arg1;
- (unsigned int)_applyViewportArguments:(id)arg1;
- (void)_setDocumentScale:(float)arg1;
- (float)initialScale;
- (float)minimumScale;
- (float)viewportWidth;
- (float)viewportHeight;
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)arg1;
- (void)_notifyPlugInViewsOfScaleChange;
- (float)integralScaleForScale:(float)arg1;
- (float)integralScaleForScale:(float)arg1 keepingPointFixed:(struct CGPoint { float x1; float x2; }*)arg2;
- (void)_notifyContentHostingLayersOfScaleChange;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)_cleanUpFrameStateAndLoad:(id)arg1;
- (void)loadRequest:(id)arg1;
- (id)_requestWithUDIDHeaderIfAppropriate:(id)arg1;
- (void)_runLoadBlock:(id)arg1;
- (void)stopLoading:(id)arg1;
- (void)_updateScrollViewBoundaryZoomScales;
- (void)completeInteraction;
- (void)cancelInteractionWithImmediateDisplay:(BOOL)arg1;
- (BOOL)_dataDetectionIsActivated;
- (id)_groupName;
- (void)resetShowingTextStyle:(id)arg1;
- (void)selectionChanged:(id)arg1;
- (void)_restoreViewportSettingsWithSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setMinimumSize:(struct CGSize { float x1; float x2; })arg1;
- (void)installGestureRecognizers;
- (id)initWithWebView:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })webViewFrameForUIFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setViewportSize:(struct CGSize { float x1; float x2; })arg1 forDocumentTypes:(int)arg2;
- (void)setAllowsUserScaling:(BOOL)arg1 forDocumentTypes:(int)arg2;
- (void)setMaximumScale:(float)arg1 forDocumentTypes:(int)arg2;
- (void)setMinimumScale:(float)arg1 forDocumentTypes:(int)arg2;
- (void)setInitialScale:(float)arg1 forDocumentTypes:(int)arg2;
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)arg1;
- (BOOL)hasEditableSelection;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertCaretRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)extendCurrentSelection:(int)arg1;
- (id)rangeByExtendingCurrentSelection:(int)arg1;
- (id)rangeByMovingCurrentSelection:(int)arg1;
- (BOOL)selectionAtWordStart;
- (BOOL)selectionAtDocumentStart;
- (int)selectionState;
- (int)selectionState;
- (int)wordOffsetInRange:(id)arg1;
- (void)expandSelectionToStartOfWordContainingCaretSelection;
- (id)rectsForNSRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (unsigned short)characterAfterCaretSelection;
- (unsigned short)characterInRelationToCaretSelection:(int)arg1;
- (void)confirmMarkedText:(id)arg1;
- (void)replaceCurrentWordWithText:(id)arg1;
- (void)replaceRangeWithText:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1 replacementText:(id)arg2;
- (void)addInputString:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_lastRectForRange:(id)arg1;
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)arg1;
- (void)addInputString:(id)arg1 fromVariantKey:(BOOL)arg2;
- (void)deleteFromInput;
- (BOOL)isPosition:(id)arg1 withinTextUnit:(int)arg2 inDirection:(int)arg3;
- (id)positionFromPosition:(id)arg1 toBoundary:(int)arg2 inDirection:(int)arg3;
- (BOOL)isPosition:(id)arg1 atBoundary:(int)arg2 inDirection:(int)arg3;
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(int)arg2 inDirection:(int)arg3;
- (id)fontForCaretSelection;
- (void)setMarkedText:(id)arg1;
- (id)markedText;
- (id)wordRangeContainingCaretSelection;
- (id)wordContainingCaretSelection;
- (unsigned short)characterBeforeCaretSelection;
- (void)moveForward:(unsigned int)arg1;
- (void)moveBackward:(unsigned int)arg1;
- (id)nextUnperturbedMarsVoltasBoundaryFromPosition:(id)arg1;
- (id)previousUnperturbedMarsVoltasBoundaryFromPosition:(id)arg1;
- (void)handleKeyWebEvent:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectContainingCaretSelection;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(BOOL)arg2;
- (void)setContinuousSpellCheckingEnabled:(BOOL)arg1;
- (BOOL)requiresKeyEvents;
- (id)_parentTextView;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 fromFrame:(id)arg2;
- (void)_setSubviewCachesNeedUpdate:(BOOL)arg1;
- (void)didRemovePlugInView:(id)arg1;
- (float)_documentScale;
- (void)setBottomBufferHeight:(float)arg1;
- (void)setBecomesEditableWithGestures:(BOOL)arg1;
- (BOOL)becomesEditableWithGestures;
- (void)setSelectionToStart;
- (void)updateSelection;
- (BOOL)willInteractWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)isInInteraction;
- (BOOL)startActionSheet;
- (void)cancelInteraction;
- (void)validateInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)continueInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)startInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)tapInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (unsigned int)effectiveDataDetectorTypes;
- (void)setAllowsDataDetectorsSheet:(BOOL)arg1;
- (void)collapseSelection;
- (void)setSelectedDOMRange:(id)arg1 affinity:(int)arg2;
- (void)ensureSelection;
- (id)undoManagerForWebView:(id)arg1;
- (id)undoNameForMarsVoltaInsertion;
- (void)_showTextStyleOptions:(id)arg1;
- (void)setSelectionToEnd;
- (void)_removeDefinitionController:(BOOL)arg1;
- (BOOL)clearWKFirstResponder;
- (BOOL)makeWKFirstResponder;
- (void)detachInteractionAssistant;
- (void)detachSelectionView;
- (void)_setParentTextView:(id)arg1;
- (void)setLoadsSynchronously:(BOOL)arg1;
- (id)selectedDOMRange;
- (id)selectedDOMRange;
- (unsigned int)dataDetectorTypes;
- (void)setDataDetectorTypes:(unsigned int)arg1;
- (BOOL)mouseEventsChangeSelection;
- (id)automaticallySelectedOverlay;
- (id)textColorForCaretSelection;
- (id)_textSelectingContainer;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectForVisiblePosition:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRect;
- (void)setSelectionWithPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleRectForSelecting;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForNSRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)scrollSelectionToVisible:(BOOL)arg1;
- (void)setIgnoresFocusingMouse:(BOOL)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (id)initSimpleHTMLDocumentWithStyle:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 preferences:(id)arg3 groupName:(id)arg4;
- (id)supportedPasteboardTypesForCurrentSelection;
- (BOOL)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2 replacementText:(id)arg3;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (BOOL)isEditable;
- (id)textDocument;
- (id)content;
- (BOOL)playsNicelyWithGestures;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })selectionClipRect;
- (id)rectsForRange:(id)arg1;
- (void)setSelectionGranularity:(int)arg1;
- (int)selectionGranularity;
- (id)positionAtStartOrEndOfWord:(id)arg1;
- (void)setSelectionAffinity:(int)arg1;
- (int)selectionAffinity;
- (id)characterRangeAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)closestPositionToPoint:(struct CGPoint { float x1; float x2; })arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectForPosition:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(int)arg1 forRange:(id)arg2;
- (int)baseWritingDirectionForPosition:(id)arg1 inDirection:(int)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(int)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(int)arg2;
- (id)tokenizer;
- (void)setInputDelegate:(id)arg1;
- (int)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (int)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3;
- (id)positionFromPosition:(id)arg1 offset:(int)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)endOfDocument;
- (id)beginningOfDocument;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2;
- (void)setMarkedTextStyle:(id)arg1;
- (id)markedTextStyle;
- (id)markedTextRange;
- (void)setSelectedTextRange:(id)arg1;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (BOOL)hasText;
- (id)metadataDictionariesForMarsVoltas;
- (void)removeYakushimasPlaceholder:(id)arg1 willInsertText:(BOOL)arg2;
- (id)insertYakushimasPlaceholder:(struct CGSize { float x1; float x2; })arg1;
- (void)insertMarsVoltas:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (void)insertText:(id)arg1;
- (void)deleteBackward;
- (void)_underline:(id)arg1;
- (void)_italicize:(id)arg1;
- (void)_bold:(id)arg1;
- (void)_define:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)_promptForReplace:(id)arg1;
- (void)copy:(id)arg1;
- (void)paste:(id)arg1;
- (void)replace:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)selectWord;
- (void)cut:(id)arg1;
- (id)inputDelegate;
- (struct CGPoint { float x1; float x2; })constrainedPoint:(struct CGPoint { float x1; float x2; })arg1;
- (unsigned int)offsetInMarkedTextForSelection:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)textInRange:(id)arg1;
- (id)selectedTextRange;
- (id)selectionRectsForRange:(id)arg1;
- (void)cancelAutoscroll;
- (void)startAutoscroll:(struct CGPoint { float x1; float x2; })arg1;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (BOOL)hasSelection;
- (BOOL)hasSelection;
- (void)selectionChanged;
- (void)clearSelection;
- (BOOL)canResignFirstResponder;
- (id)interpretationsForMarsVoltas;
- (void)selectAll;
- (void)selectAll;
- (void)keyboardInputChangedSelection:(id)arg1;
- (BOOL)keyboardInputChanged:(id)arg1;
- (BOOL)keyboardInputShouldDelete:(id)arg1;
- (BOOL)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(BOOL)arg3;
- (struct _NSRange { unsigned int x1; unsigned int x2; })selectionRange;
- (struct _NSRange { unsigned int x1; unsigned int x2; })_markedTextNSRange;
- (BOOL)hasMarkedText;
- (BOOL)hasContent;
- (void)takeTraitsFrom:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)textInputTraits;
- (id)webView;
- (int)selectionBaseWritingDirection;
- (id)interactionAssistant;
- (void)setBaseWritingDirection:(int)arg1;
- (id)selectionView;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (BOOL)isEditing;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentFrameForView:(id)arg1;
- (void)setAutoscrollContentOffset:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })autoscrollContentOffset;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;
- (void)_didScroll;
- (BOOL)canBecomeFirstResponder;
- (struct CGImage { }*)createSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGImage { }*)newSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleBounds;
- (void)willMoveToSuperview:(id)arg1;
- (void)didMoveToSuperview;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)deferredBecomeFirstResponder;
- (BOOL)becomeFirstResponder;
- (id)_responderForBecomeFirstResponder;
- (BOOL)cancelMouseTracking;
- (BOOL)cancelTouchTracking;
- (id)scriptingInfoWithChildren;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (id)methodSignatureForSelector:(SEL)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)subviews;
- (id)undoManager;
- (id)text;
- (id)delegate;
- (void)setText:(id)arg1;
- (void)layoutSubviews;
- (void)setOpaque:(BOOL)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (unsigned int)retainCount;
- (id)retain;
- (oneway void)release;
- (void)dealloc;

@end
