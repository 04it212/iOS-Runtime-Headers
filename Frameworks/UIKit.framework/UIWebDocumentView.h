/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class <UITextInputDelegate>, CALayer, DOMHTMLElement, DOMNode, NSTimer, UIActionSheet, UIAutoscroll, UIInformalDelegate, UILongPressGestureRecognizer, UIPanGestureRecognizer, UITapGestureRecognizer, UITextChecker, UITextInputTraits, UITextInteractionAssistant, UITextSelectionView, UIWebSelectionAssistant, UIWindow, WebThreadSafeUndoManager, WebView, WebViewReachabilityObserver;

@interface UIWebDocumentView : UIWebTiledView <UITextSelectingContent, UIAutoscrollContainer, UIActionSheetDelegate, UIKeyboardInput, UIModalViewDelegate, UILongPressGestureRecognizerDelegate> {
    struct WKWindow { struct _WKObject { 
            NSUInteger referenceCount; 
            struct _WKClassInfo {} *classInfo; 
        } x1; id x2; /* Warning: Unrecognized filer type: '"' using 'void*' */ void*x3; void*x4; void*x5; void*x6; void*x7; NSInteger x8; in double x9; out void*x10; void*x11; struct CGRect { 
            struct CGPoint { 
                float x; 
                float y; 
            } origin; 
            struct CGSize { 
                float width; 
                float height; 
            } size; 
        } x12; struct WKView {} *x13; struct WKView {} *x14; struct WKView {} *x15; struct CGSize { 
            float width; 
            float height; 
        } x16; struct CGSize { 
            float width; 
            float height; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGPoint { 
        float x; 
        float y; 
    struct CGPoint { 
        float x; 
        float y; 
    struct CGSize { 
        float width; 
        float height; 
    struct CGPoint { 
        float x; 
        float y; 
    struct { 
        NSTimer *timer; 
        struct CGPoint { 
            float x; 
            float y; 
        } location; 
        BOOL isBlocked; 
        BOOL isCancelled; 
        BOOL isOnWebThread; 
        BOOL isDisplayingHighlight; 
        BOOL attemptedClick; 
        struct CGPoint { 
            float x; 
            float y; 
        } lastPanTranslation; 
        DOMNode *element; 
        BOOL defersCallbacksState; 
        UIInformalDelegate *delegate; 
        UIWindow *windowForReenablingRotation; 
        NSInteger interactionSheetType; 
        UIActionSheet *interactionSheet; 
        BOOL allowsImageSheet; 
        BOOL allowsDataDetectorsSheet; 
        BOOL allowsLinkSheet; 
    struct { 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
        float initialScale; 
        float minimumScale; 
        float maximumScale; 
        BOOL allowsUserScaling; 
    struct CGSize { 
        float width; 
        float height; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    unsigned int _webCoreNeedsSetNeedsDisplay : 1;
    unsigned int _webCoreNeedsDraw : 1;
    unsigned int _ignoresFocusingMouse : 1;
    unsigned int _ignoresKeyEvents : 1;
    unsigned int _autoresizes : 1;
    unsigned int _updatingSize : 1;
    unsigned int _scalesToFit : 1;
    unsigned int _updatesScrollView : 1;
    unsigned int _hasCustomScale : 1;
    unsigned int _userScrolled : 1;
    unsigned int _pageNeedsReset : 1;
    unsigned int _hasScrollPoint : 1;
    unsigned int _setNeedsDisplayWasForced : 1;
    unsigned int _gesturesDisabled : 1;
    unsigned int _doubleTapRectIsReplaced : 1;
    unsigned int _standaloneEditableView : 1;
    unsigned int _widgetEditingView : 1;
    unsigned int _mouseDragged : 1;
    unsigned int _mouseReentrancyGuard : 1;
    unsigned int _isShowingFullScreenPlugIn : 1;
    unsigned int _isSettingRedrawFrame : 1;
    unsigned int _needsScrollNotifications : 1;
    unsigned int _loadsSynchronously : 1;
    unsigned int _mouseDown : 1;
    unsigned int _usePreTimberlineTransparencyBehavior : 1;
    unsigned int _geolocationDialogAllowed : 1;
    unsigned int _usingMinimalTilesDuringLoading : 1;
    unsigned int _didFirstVisuallyNonEmptyLayout : 1;
    unsigned int _loadInProgress : 1;
    unsigned int _uiwdvIsResigningFirstResponder : 1;
    unsigned int _classicViewportMode : 1;
    unsigned int _sizeUpdatesSuspended : 1;
    unsigned int _sizeUpdateOccurredWhileSuspended : 1;
    unsigned int _shouldOnlyRecognizeGesturesOnActiveElements : 1;
    unsigned int _shouldIgnoreCustomViewport : 1;
    unsigned int _ignoresFocusEventFromFirstResponderChange : 1;
    unsigned int _shoudCloseWebViewAtDealloc : 1;
    unsigned int _sheetsCount : 2;
    UIAutoscroll *_autoscroll;
    } _caretInsets;
    CALayer *_contentLayersHostingLayer;
    NSUInteger _customConfigurations;
    NSUInteger _dataDetectorTypes;
    id _delegate;
    } _documentBounds;
    float _documentScale;
    NSInteger _documentType;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    } _doubleTapRect;
    } _doubleTapStartPosition;
    double _doubleTapStartTime;
    id _editingDelegate;
    NSInteger _enabledGestures;
    UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;
    <UITextInputDelegate> *_inputDelegate;
    } _interaction;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    } _mainDocumentDoubleTapRect;
    } _minimumSize;
    NSUInteger _mouseDownCount;
    } _mouseDownPoint;
    double _mouseDownTime;
    NSInteger _orientation;
    } _pendingSize;
    struct __CFDictionary { } *_plugInViews;
    WebViewReachabilityObserver *_reachabilityObserver;
    NSInteger _retainCount;
    } _scrollPoint;
    UITapGestureRecognizer *_singleTapGestureRecognizer;
    DOMHTMLElement *_standaloneEditingElement;
    UITextChecker *_textChecker;
    UITextInteractionAssistant *_textSelectionAssistant;
    UITextSelectionView *_textSelectionView;
    id _textSuggestionDelegate;
    UITextInputTraits *_traits;
    UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;
    UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;
    WebThreadSafeUndoManager *_undoManager;
    } _viewportConfigurations[6];
    UIWebSelectionAssistant *_webSelectionAssistant;
    WebView *_webView;
        } x17; float x18; unsigned int x19 : 1; } *_wkWindow;
    id m_parentTextView;
    NSInteger m_selectionGranularity;
}

@property(readonly) UIResponder<UITextInput> *asText;
@property(readonly) UITextPosition *beginningOfDocument;
@property(readonly) UIView<UITextSelectingContent> *content;
@property(readonly) UITextPosition *endOfDocument;
@property <UITextInputDelegate> *inputDelegate;
@property(retain) UIColor *insertionPointColor;
@property(readonly) UITextInteractionAssistant *interactionAssistant;
@property(readonly) UITextRange *markedTextRange;
@property(copy) NSDictionary *markedTextStyle;
@property(copy) UITextRange *selectedTextRange;
@property(readonly) UITextSelectionView *selectionView;
@property(readonly) UIView *textInputView;
@property __CFCharacterSet *textTrimmingSet;
@property(readonly) <UITextInputTokenizer> *tokenizer;
@property BOOL acceptsEmoji;
@property NSInteger autocapitalizationType;
@property NSInteger autocorrectionType;
@property CGPoint autoscrollContentOffset;
@property BOOL contentsIsSingleValue;
@property(getter=isDoubleTapEnabled) BOOL doubleTapEnabled;
@property(getter=isEditable,readonly) BOOL editable;
@property(getter=isEditing,readonly) BOOL editing;
@property NSInteger emptyContentReturnKeyType;
@property BOOL enablesReturnKeyAutomatically;
@property NSUInteger insertionPointWidth;
@property NSInteger keyboardAppearance;
@property NSInteger keyboardType;
@property BOOL returnKeyGoesToNextResponder;
@property NSInteger returnKeyType;
@property(getter=isSecureTextEntry) BOOL secureTextEntry;
@property NSInteger selectionAffinity;
@property NSInteger selectionGranularity;
@property(readonly) NSInteger selectionState;
@property BOOL shouldIgnoreCustomViewport;
@property BOOL shouldOnlyRecognizeGesturesOnActiveElements;
@property BOOL sizeUpdatesSuspended;
@property NSInteger textLoupeVisibility;
@property NSInteger textSelectionBehavior;
@property id textSuggestionDelegate;

+ (id)_createDefaultHighlightView;
+ (id)_highlightView;
+ (void)_initializeSafeCategory;
+ (double)getTimestamp;
+ (Class)layerClass;
+ (id)standardTextViewPreferences;

- (void)_WAKViewSizeDidChange:(id)arg1;
- (id)_accessibilityDocumentView;
- (BOOL)_accessibilityHasTextOperations;
- (id)_accessibilityHitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (BOOL)_accessibilityIsScrollAncestor;
- (id)_accessibilityResponderElement;
- (id)_accessibilityRootObject;
- (id)_accessibilityScrollStatus;
- (void)_accessibilityScrollToFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forView:(id)arg2;
- (BOOL)_accessibilityScrollingEnabled;
- (id)_accessibilitySupplementaryHeaderViews;
- (void)_accessibilityZoomAtPoint:(struct CGPoint { float x1; float x2; })arg1 zoomIn:(BOOL)arg2;
- (struct __CFDictionary { }*)_axPluginViews;
- (id)_beginPrintModeForHTMLWithSize:(struct CGSize { float x1; float x2; })arg1 startOffset:(float)arg2 minimumLayoutWidth:(float)arg3 maximumLayoutWidth:(float)arg4 tileClippedContent:(BOOL)arg5;
- (id)_beginPrintModeForPDFWithSize:(struct CGSize { float x1; float x2; })arg1 startOffset:(float)arg2 minimumLayoutWidth:(float)arg3 maximumLayoutWidth:(float)arg4;
- (void)_cleanUpPDF;
- (void)_clearAllConsoleMessages;
- (void)_clearDoubleTapRect;
- (void)_copyElement:(id)arg1;
- (void)_copyImage:(id)arg1;
- (BOOL)_dataDetectionIsActivated;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_didScroll;
- (void)_disableWebView;
- (void)_disableWindowRotation;
- (id)_documentFragmentForPasteboardItemAtIndex:(NSInteger)arg1;
- (float)_documentScale;
- (id)_doubleTapGestureRecognizer;
- (void)_doubleTapRecognized:(id)arg1;
- (float)_doubleTapScaleForSize:(float)arg1 isWidth:(BOOL)arg2 isPDF:(BOOL)arg3;
- (void)_drawPDFPagesForPage:(NSUInteger)arg1 withPaginationInfo:(id)arg2;
- (BOOL)_editable;
- (void)_enableWebView;
- (void)_enableWindowRotation;
- (id)_focusedOrMainFrame;
- (id)_groupName;
- (void)_handleDoubleTapAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_handleDoubleTapAtPoint:(struct CGPoint { float x1; float x2; })arg1 inWebHTMLView:(id)arg2 outRenderRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg3;
- (void)_handleDoubleTapAtPoint:(struct CGPoint { float x1; float x2; })arg1 inWebPDFView:(id)arg2 outRenderRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg3;
- (void)_handleTwoFingerDoubleTapAtLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_highlightLongPressRecognized:(id)arg1;
- (BOOL)_isSubviewOfPlugInView:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_lastRectForRange:(id)arg1;
- (void)_longPressRecognized:(id)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_markedTextNSRange;
- (void)_notifyContentHostingLayersOfScaleChange;
- (void)_notifyPlugInViewsOfDidZoom;
- (void)_notifyPlugInViewsOfScaleChange;
- (void)_notifyPlugInViewsOfWillBeginZooming;
- (id)_parentTextView;
- (id)_positionFromPosition:(id)arg1 inDirection:(NSInteger)arg2 offset:(NSInteger)arg3 withAffinityDownstream:(BOOL)arg4;
- (Class)_printFormatterClass;
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)arg1;
- (id)_requestWithUDIDHeaderIfAppropriate:(id)arg1;
- (void)_resetForNewPage;
- (void)_resetFormDataForFrame:(id)arg1;
- (void)_resetInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)_reshapePlugInViews;
- (id)_responderForBecomeFirstResponder;
- (void)_restoreScrollPointForce:(BOOL)arg1;
- (void)_restoreViewportSettingsWithSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_saveImages:(id)arg1;
- (void)_saveStateToHistoryItem:(id)arg1;
- (id)_scriptingInfoForForm:(id)arg1;
- (id)_scriptingInfoForLink:(id)arg1;
- (void)_scrollRectToVisible:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 animated:(BOOL)arg2;
- (void)_sendMouseMoveAndAttemptClick:(id)arg1;
- (void)_setDocumentScale:(float)arg1;
- (void)_setDocumentType:(NSInteger)arg1 overrideCustomConfigurations:(BOOL)arg2;
- (void)_setDocumentType:(NSInteger)arg1;
- (void)_setEditable:(BOOL)arg1;
- (void)_setLtoRTextDirection:(id)arg1;
- (void)_setPDFView:(id)arg1;
- (void)_setParentTextView:(id)arg1;
- (void)_setRtoLTextDirection:(id)arg1;
- (void)_showDataDetectorsSheet;
- (void)_showImageSheet;
- (void)_showLinkSheet;
- (void)_singleTapRecognized:(id)arg1;
- (id)_supportedPasteboardTypesForCurrentSelection;
- (id)_textSelectingContainer;
- (void)_twoFingerDoubleTapRecognized:(id)arg1;
- (void)_twoFingerPanRecognized:(id)arg1;
- (void)_undoManagerDidRedo:(id)arg1;
- (void)_undoManagerDidUndo:(id)arg1;
- (void)_updatePDFPageNumberLabelWithUserScrolling:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_updateScrollViewBoundaryZoomScales;
- (void)_updateSize;
- (id)accessibilityElementAtIndex:(NSInteger)arg1;
- (NSInteger)accessibilityElementCount;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })accessibilityFrame;
- (id)accessibilityLabel;
- (void)accessibilityScrollDownPage;
- (void)accessibilityScrollLeftPage;
- (void)accessibilityScrollRightPage;
- (void)accessibilityScrollUpPage;
- (unsigned long long)accessibilityTraits;
- (void)accessibilityZoomInAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)accessibilityZoomOutAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)actionDidFinish;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(NSInteger)arg2;
- (void)actionWillStart;
- (void)addInputString:(id)arg1;
- (id)approximateNodeAtViewportLocation:(struct CGPoint { float x1; float x2; }*)arg1;
- (id)asText;
- (void)assistFormNode:(id)arg1;
- (void)attemptClick:(id)arg1;
- (id)automaticallySelectedOverlay;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })autoscrollContentFrame;
- (struct CGPoint { float x1; float x2; })autoscrollContentOffset;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })autoscrollDragFrame;
- (NSInteger)baseWritingDirectionForPosition:(id)arg1 inDirection:(NSInteger)arg2;
- (BOOL)becomeFirstResponder;
- (BOOL)becomesEditableWithGestures;
- (id)beginPrintModeWithSize:(struct CGSize { float x1; float x2; })arg1 startOffset:(float)arg2 minimumLayoutWidth:(float)arg3 maximumLayoutWidth:(float)arg4 tileClippedContent:(BOOL)arg5;
- (id)beginPrintModeWithWidth:(float)arg1 height:(float)arg2 startOffset:(float)arg3 shrinkToFit:(BOOL)arg4 tileClippedContent:(BOOL)arg5;
- (id)beginPrintModeWithWidth:(float)arg1 height:(float)arg2 startOffset:(float)arg3 shrinkToFit:(BOOL)arg4;
- (void)beginSelectionChange;
- (id)beginningOfDocument;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canOpenNewPageForURL:(id)arg1;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (BOOL)canResignFirstResponder;
- (void)cancelAutoscroll;
- (void)cancelInteraction;
- (void)cancelInteractionWithImmediateDisplay:(BOOL)arg1;
- (BOOL)cancelMouseTracking;
- (BOOL)cancelTouchTracking;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })caretInsets;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectForPosition:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectForVisiblePosition:(id)arg1;
- (unsigned short)characterAfterCaretSelection;
- (unsigned short)characterBeforeCaretSelection;
- (unsigned short)characterInRelationToCaretSelection:(NSInteger)arg1;
- (id)characterRangeAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(NSInteger)arg2;
- (id)checkSpellingOfString:(id)arg1;
- (void)clearInteractionTimer;
- (void)clearRangedSelectionInitialExtent;
- (void)clearSelection;
- (BOOL)clearWKFirstResponder;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)closestPositionToPoint:(struct CGPoint { float x1; float x2; })arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)collapseSelection;
- (NSInteger)comparePosition:(id)arg1 toPosition:(id)arg2;
- (void)completeInteraction;
- (void)confirmMarkedText:(id)arg1;
- (struct CGPoint { float x1; float x2; })constrainedPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)containsOnlySelectableElements;
- (id)content;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentFrameForView:(id)arg1;
- (void)continueInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertCaretRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 fromFrame:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPoint:(struct CGPoint { float x1; float x2; })arg1 toFrame:(id)arg2;
- (struct CGPoint { float x1; float x2; })convertPointToSelectedFrameCoordinates:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 fromFrame:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 toFrame:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertRectFromSelectedFrameCoordinates:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)copy:(id)arg1;
- (struct CGImage { }*)createSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)cut:(id)arg1;
- (NSUInteger)dataDetectorTypes;
- (void)dealloc;
- (void)deferInteraction;
- (void)deferredBecomeFirstResponder;
- (id)delegate;
- (void)deleteBackward;
- (void)deleteFromInput;
- (void)detachInteractionAssistant;
- (void)detachSelectionView;
- (BOOL)detectsPhoneNumbers;
- (void)didEndScroll;
- (void)didEndZoom;
- (BOOL)didFirstVisuallyNonEmptyLayout;
- (void)didMoveToSuperview;
- (void)didRemovePlugInView:(id)arg1;
- (void)didZoom;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })documentBounds;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })doubleTapRect;
- (BOOL)doubleTapRectIsReplaced;
- (void)drawPage:(NSUInteger)arg1 withPaginationInfo:(id)arg2;
- (NSUInteger)effectiveDataDetectorTypes;
- (void)enableReachability;
- (NSInteger)enabledGestures;
- (void)enclosingScrollerDidScroll;
- (id)endOfDocument;
- (void)endPrintMode;
- (void)endSelectionChange;
- (void)ensureSelection;
- (void)expandSelectionToStartOfWordContainingCaretSelection;
- (void)extendCurrentSelection:(NSInteger)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })firstRectForRange:(id)arg1;
- (id)fontForCaretSelection;
- (void)forceLayout;
- (id)formElement;
- (void)forwardInvocation:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)handleKeyWebEvent:(id)arg1;
- (BOOL)hasContent;
- (BOOL)hasEditableSelection;
- (BOOL)hasMarkedText;
- (BOOL)hasPlugInSubviews;
- (BOOL)hasSelection;
- (BOOL)hasSelection;
- (BOOL)hasSelectionInPlainTextRegion;
- (BOOL)hasSimpleTextOnlyStructure;
- (BOOL)hasText;
- (void)hideAlert;
- (void)hideBrowserSheet;
- (void)hideTapHighlight;
- (void)highlightApproximateNodeAndDisplayInfoSheet;
- (void)highlightApproximateNodeInverted:(BOOL)arg1;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)image:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(id)arg3;
- (id)implementationWebView;
- (NSInteger)indexOfAccessibilityElement:(id)arg1;
- (id)initSimpleHTMLDocumentWithStyle:(id)arg1 editable:(BOOL)arg2 withFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 withPreferences:(id)arg4;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithWebView:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (float)initialScale;
- (id)inputDelegate;
- (void)insertText:(id)arg1;
- (void)installGestureRecognizers;
- (float)integralScaleForScale:(float)arg1;
- (id)interactionAssistant;
- (id)interactionDelegate;
- (BOOL)isAccessibilityElement;
- (BOOL)isCaretInEmptyParagraph;
- (BOOL)isClassicViewportMode;
- (BOOL)isDoubleTapEnabled;
- (BOOL)isEditable;
- (BOOL)isEditing;
- (BOOL)isInInteraction;
- (BOOL)isInPrintMode;
- (BOOL)isPosition:(id)arg1 atBoundary:(NSInteger)arg2 inDirection:(NSInteger)arg3;
- (BOOL)isPosition:(id)arg1 withinTextUnit:(NSInteger)arg2 inDirection:(NSInteger)arg3;
- (BOOL)isShowingFullScreenPlugInUI;
- (BOOL)isStandaloneEditableView;
- (BOOL)isWidgetEditingView;
- (BOOL)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(BOOL)arg3;
- (BOOL)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg2 replacementText:(id)arg3;
- (BOOL)keyboardInputChanged:(id)arg1;
- (void)keyboardInputChangedSelection:(id)arg1;
- (BOOL)keyboardInputShouldDelete:(id)arg1;
- (void)layoutSubviews;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadRequest:(id)arg1;
- (BOOL)loadsSynchronously;
- (BOOL)makeWKFirstResponder;
- (id)markedText;
- (id)markedTextRange;
- (id)markedTextStyle;
- (float)maximumScale;
- (id)methodSignatureForSelector:(SEL)arg1;
- (float)minimumScale;
- (float)minimumScaleForMinimumSize:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)mouseEventsChangeSelection;
- (void)moveBackward:(NSUInteger)arg1;
- (void)moveForward:(NSUInteger)arg1;
- (BOOL)needsScrollNotifications;
- (struct CGImage { }*)newSnapshotWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (NSInteger)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (NSUInteger)offsetInMarkedTextForSelection:(id)arg1;
- (void)paste:(id)arg1;
- (void)performClick:(id)arg1;
- (void)performInteractionSelector:(SEL)arg1 afterDelay:(double)arg2;
- (BOOL)playsNicelyWithGestures;
- (id)positionFromPosition:(id)arg1 inDirection:(NSInteger)arg2 offset:(NSInteger)arg3;
- (id)positionFromPosition:(id)arg1 offset:(NSInteger)arg2;
- (id)positionFromPosition:(id)arg1 toBoundary:(NSInteger)arg2 inDirection:(NSInteger)arg3;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(NSInteger)arg2;
- (void)promptForReplace:(id)arg1;
- (id)rangeByExtendingCurrentSelection:(NSInteger)arg1;
- (id)rangeByMovingCurrentSelection:(NSInteger)arg1;
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(NSInteger)arg2 inDirection:(NSInteger)arg3;
- (id)rangeOfEnclosingWord:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectContainingCaretSelection;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForNSRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (id)rectsForNSRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)redrawScaledDocument;
- (void)release;
- (void)replace:(id)arg1;
- (void)replaceCurrentWordWithText:(id)arg1;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (void)replaceRangeWithText:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1 replacementText:(id)arg2;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)replaceSelectionWithWebArchive:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (BOOL)requiresKeyEvents;
- (void)resetInteraction;
- (void)resetTilingAfterLoadComplete;
- (BOOL)resignFirstResponder;
- (id)retain;
- (NSUInteger)retainCount;
- (void)revealedSelectionByScrollingWebFrame:(id)arg1;
- (void)saveStateToCurrentHistoryItem;
- (id)scriptingInfoWithChildren;
- (void)scrollSelectionToVisible:(BOOL)arg1;
- (void)select:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)selectAll;
- (void)selectAll;
- (void)selectWord;
- (id)selectedDOMRange;
- (id)selectedDOMRange;
- (id)selectedTextRange;
- (NSInteger)selectionAffinity;
- (BOOL)selectionAtDocumentStart;
- (BOOL)selectionAtWordStart;
- (NSInteger)selectionBaseWritingDirection;
- (void)selectionChanged:(id)arg1;
- (void)selectionChanged;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })selectionClipRect;
- (NSInteger)selectionGranularity;
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(NSInteger)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })selectionRange;
- (id)selectionRects;
- (id)selectionRectsForRange:(id)arg1;
- (NSInteger)selectionState;
- (NSInteger)selectionState;
- (id)selectionView;
- (void)sendOrientationEventForOrientation:(NSInteger)arg1;
- (void)sendScrollWheelEvents;
- (void)setAllowsDataDetectorsSheet:(BOOL)arg1;
- (void)setAllowsImageSheet:(BOOL)arg1;
- (void)setAllowsLinkSheet:(BOOL)arg1;
- (void)setAllowsUserScaling:(BOOL)arg1 forDocumentTypes:(NSInteger)arg2;
- (void)setAutoresizes:(BOOL)arg1;
- (void)setAutoscrollContentOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)setBaseWritingDirection:(NSInteger)arg1 forRange:(id)arg2;
- (void)setBaseWritingDirection:(NSInteger)arg1;
- (void)setBecomesEditableWithGestures:(BOOL)arg1;
- (void)setBottomBufferHeight:(float)arg1;
- (void)setCaretChangeListener:(id)arg1;
- (void)setCaretInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setContinuousSpellCheckingEnabled:(BOOL)arg1;
- (void)setDataDetectorTypes:(NSUInteger)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDetectsPhoneNumbers:(BOOL)arg1;
- (void)setDoubleTapEnabled:(BOOL)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setEnabledGestures:(NSInteger)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setIgnoresFocusingMouse:(BOOL)arg1;
- (void)setIgnoresKeyEvents:(BOOL)arg1;
- (void)setInitialScale:(float)arg1 forDocumentTypes:(NSInteger)arg2;
- (void)setInputDelegate:(id)arg1;
- (void)setInteractionAssistantGestureRecognizers;
- (void)setInteractionDelegate:(id)arg1;
- (void)setIsStandaloneEditableView:(BOOL)arg1;
- (void)setIsWidgetEditingView:(BOOL)arg1;
- (void)setLoadsSynchronously:(BOOL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg2;
- (void)setMarkedText:(id)arg1;
- (void)setMarkedTextStyle:(id)arg1;
- (void)setMaximumScale:(float)arg1 forDocumentTypes:(NSInteger)arg2;
- (void)setMinimumScale:(float)arg1 forDocumentTypes:(NSInteger)arg2;
- (void)setMinimumSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setOpaque:(BOOL)arg1;
- (void)setPaused:(BOOL)arg1 withEvents:(BOOL)arg2;
- (void)setPaused:(BOOL)arg1;
- (void)setRangedSelectionBaseToCurrentSelection;
- (void)setRangedSelectionBaseToCurrentSelectionEnd;
- (void)setRangedSelectionBaseToCurrentSelectionStart;
- (void)setRangedSelectionExtentPoint:(struct CGPoint { float x1; float x2; })arg1 baseIsStart:(BOOL)arg2 allowFlipping:(BOOL)arg3;
- (BOOL)setRangedSelectionExtentPoint:(struct CGPoint { float x1; float x2; })arg1 baseIsStart:(BOOL)arg2;
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;
- (void)setRangedSelectionWithExtentPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setSelectedDOMRange:(id)arg1 affinity:(NSInteger)arg2;
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(BOOL)arg2;
- (void)setSelectedTextRange:(id)arg1 withAffinityDownstream:(BOOL)arg2;
- (void)setSelectedTextRange:(id)arg1;
- (void)setSelectionGranularity:(NSInteger)arg1;
- (void)setSelectionToEnd;
- (void)setSelectionToStart;
- (void)setSelectionWithFirstPoint:(struct CGPoint { float x1; float x2; })arg1 secondPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)setSelectionWithPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setShouldIgnoreCustomViewport:(BOOL)arg1;
- (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)arg1;
- (void)setSizeUpdatesSuspended:(BOOL)arg1;
- (void)setSmoothsFonts:(BOOL)arg1;
- (void)setStandaloneEditingElement:(id)arg1;
- (void)setText:(id)arg1;
- (void)setTilingArea:(NSInteger)arg1;
- (void)setUpdatesScrollView:(BOOL)arg1;
- (void)setUsePreTimberlineTransparencyBehavior;
- (void)setUserStyleSheet:(id)arg1;
- (void)setUsesUIScrollView;
- (void)setViewportSize:(struct CGSize { float x1; float x2; })arg1 forDocumentTypes:(NSInteger)arg2;
- (BOOL)shouldEnableAutoShift;
- (BOOL)shouldIgnoreCustomViewport;
- (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;
- (void)showAlert:(id)arg1;
- (void)showBrowserSheet:(id)arg1 atPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)showBrowserSheet:(id)arg1 shouldShowFromPoint:(BOOL)arg2 point:(struct CGPoint { float x1; float x2; })arg3 arrowDirections:(NSUInteger)arg4;
- (void)showBrowserSheet:(id)arg1 shouldShowFromPoint:(BOOL)arg2 point:(struct CGPoint { float x1; float x2; })arg3;
- (void)showBrowserSheet:(id)arg1;
- (BOOL)sizeUpdatesSuspended;
- (void)smartExtendRangedSelection:(NSInteger)arg1;
- (id)standaloneEditingElement;
- (BOOL)startActionSheet;
- (void)startAutoscroll:(struct CGPoint { float x1; float x2; })arg1;
- (void)startInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)stopLoading:(id)arg1;
- (id)superviewForSheet;
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(struct CGPoint { float x1; float x2; })arg1 andLocation:(struct CGPoint { float x1; float x2; })arg2;
- (void)takeTraitsFrom:(id)arg1;
- (void)tapInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (id)text;
- (id)textColorForCaretSelection;
- (id)textFormElement;
- (id)textInDOMRange:(id)arg1;
- (id)textInRange:(id)arg1;
- (id)textInputTraits;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (void)toggleBaseWritingDirection;
- (id)tokenizer;
- (id)undoManager;
- (id)undoManagerForWebView:(id)arg1;
- (void)unmarkText;
- (BOOL)updateKeyboardStateOnResponderChanges;
- (void)updateSelection;
- (BOOL)updatesScrollView;
- (void)useSelectionAssistantWithMode:(NSInteger)arg1;
- (void)validateInteractionWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)viewportConfigurationsDidChange:(NSUInteger)arg1;
- (float)viewportHeight;
- (float)viewportWidth;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleBounds;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleContentFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleFrame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleRectForSelecting;
- (id)webSelectionAssistant;
- (void)webView:(id)arg1 attachRootLayer:(id)arg2;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didHideFullScreenForPlugInView:(id)arg2;
- (void)webView:(id)arg1 didObserveDeferredContentChange:(NSInteger)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didReceiveDocTypeForFrame:(id)arg2;
- (void)webView:(id)arg1 didReceiveViewportArguments:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 needsScrollNotifications:(id)arg2 forFrame:(id)arg3;
- (id)webView:(id)arg1 plugInViewWithArguments:(id)arg2 fromPlugInPackage:(id)arg3;
- (void)webView:(id)arg1 restoreStateFromHistoryItem:(id)arg2 forFrame:(id)arg3 force:(BOOL)arg4;
- (void)webView:(id)arg1 saveStateToHistoryItem:(id)arg2 forFrame:(id)arg3;
- (BOOL)webView:(id)arg1 shouldScrollToPoint:(struct CGPoint { float x1; float x2; })arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 willAddPlugInView:(id)arg2;
- (void)webView:(id)arg1 willShowFullScreenForPlugInView:(id)arg2;
- (id)webView;
- (void)webViewDidLayout:(id)arg1;
- (void)webViewDidPreventDefaultForEvent:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })webViewFrameForUIFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)webVisiblePositionForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)willInteractWithLocation:(struct CGPoint { float x1; float x2; })arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)willStartScroll;
- (void)willStartZoom;
- (id)wordAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)wordContainingCaretSelection;
- (id)wordInRange:(id)arg1;
- (NSInteger)wordOffsetInRange:(id)arg1;
- (id)wordRangeContainingCaretSelection;
- (void)zoomToScale:(float)arg1;

@end
