/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSMutableSet, NSArray, NSMutableArray, <UITapRecognizerDelegate>;

@interface UITapRecognizer : NSObject <NSCoding> {
    unsigned int _numberOfTouchesRequired;
    unsigned int _numberOfTapsRequired;
    NSMutableSet *_activeTouches;
    int _currentNumberOfTouches;
    int _currentNumberOfTaps;
    struct CGPoint { 
        float x; 
        float y; 
    } _location;
    struct CGPoint { 
        float x; 
        float y; 
    } _startPoint;
    float _allowableMovement;
    double _maximumSingleTapDuration;
    double _maximumIntervalBetweenSuccessiveTaps;
    NSMutableArray *_touches;
    id _delegate;
    unsigned int _timerOn : 1;
    unsigned int _noNewTouches : 1;
}

@property <UITapRecognizerDelegate> * delegate;
@property unsigned int numberOfTapsRequired;
@property unsigned int numberOfTouchesRequired;
@property float allowableMovement;
@property double maximumSingleTapDuration;
@property double maximumIntervalBetweenSuccessiveTaps;
@property(readonly) NSArray * touches;


- (id)init;
- (void)dealloc;
- (void)setMaximumIntervalBetweenSuccessiveTaps:(double)arg1;
- (void)setMaximumSingleTapDuration:(double)arg1;
- (double)maximumSingleTapDuration;
- (struct CGPoint { float x1; float x2; })_locationOnScreen;
- (void)startTapTimer:(double)arg1;
- (void)tooSlow:(id)arg1;
- (void)clearTapTimer;
- (float)allowableMovement;
- (unsigned int)numberOfTouchesRequired;
- (double)maximumIntervalBetweenSuccessiveTaps;
- (void)_reset;
- (unsigned int)numberOfTapsRequired;
- (id)touches;
- (void)setAllowableMovement:(float)arg1;
- (void)setNumberOfTapsRequired:(unsigned int)arg1;
- (void)setNumberOfTouchesRequired:(unsigned int)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (struct CGPoint { float x1; float x2; })locationInView:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end
