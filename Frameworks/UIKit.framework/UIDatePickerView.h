/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSCalendar, NSTimeZone, NSDateComponents, NSLocale, UILabel, NSString, NSDate, UIDatePicker;

@interface UIDatePickerView : UIPickerView <UIPickerViewDelegate, UIPickerViewDataSource> {
    int _datePickerMode;
    NSLocale *_locale;
    NSTimeZone *_timeZone;
    NSCalendar *_calendar;
    struct __CFDateFormatter { } *_localDateFormatter;
    NSDate *_date;
    NSDate *_minimumDate;
    NSDate *_maximumDate;
    double _countDownDuration;
    int _minuteInterval;
    NSDateComponents *_referenceComponents;
    double _todaySinceReferenceDate;
    NSDateComponents *_todayDateComponents;
    NSString *_amString;
    NSString *_pmString;
    UILabel *_hourLabel;
    UILabel *_minuteLabel;
    UIDatePicker *_datePickerDelegate;
    id _delegateOfDatePicker;
    int _numberOfDaysInCurrentMonth;
    int _expectedAMPM;
    NSDateComponents *_minDateComponents;
    NSDateComponents *_maxDateComponents;
    struct { 
        unsigned int dateOrder : 2; 
        unsigned int timeOrder : 2; 
        unsigned int weekdayOrder : 1; 
        unsigned int staggerTimeIntervals : 1; 
        unsigned int loadingDateOrTime : 1; 
        unsigned int highlightsToday : 1; 
        unsigned int hasCustomCalendar : 1; 
        unsigned int reserved : 23; 
    } _datePickerFlags;
}

@property double countDownDuration;
@property(getter=_hasCustomCalendar,readonly) BOOL hasCustomCalendar;
@property id delegateOfDatePicker;
@property int minuteInterval;
@property(copy) NSDate * maximumDate;
@property(copy) NSDate * minimumDate;
@property(copy) NSDate * date;
@property(copy) NSCalendar * calendar;
@property(retain) NSTimeZone * timeZone;
@property(retain) NSLocale * locale;
@property int datePickerMode;


- (int)numberOfComponentsInPickerView:(id)arg1;
- (void)pickerView:(id)arg1 didSelectRow:(int)arg2 inComponent:(int)arg3;
- (void)setTimeZone:(id)arg1;
- (double)countDownDuration;
- (void)_datePickerReset:(id)arg1;
- (int)_incrementForElement:(unsigned int)arg1;
- (void)_doneLoadingDateOrTime;
- (BOOL)_showingDate;
- (int)_numberOfDaysInDate:(id)arg1;
- (void)_updateReferenceBits;
- (void)_updateBitsForDate:(id)arg1 andReload:(BOOL)arg2 animateIfNeeded:(BOOL)arg3;
- (void)setCalendar:(id)arg1;
- (BOOL)_hasCustomCalendar;
- (void)setLocale:(id)arg1;
- (void)setDate:(id)arg1 animated:(BOOL)arg2;
- (void)setMinimumDate:(id)arg1;
- (void)setMaximumDate:(id)arg1;
- (int)minute;
- (int)second;
- (id)_sizedPickerCellFont;
- (id)_datePickerCellFont;
- (id)_ampmCellFont;
- (id)_hrMinFont;
- (int)_numberOfDaysInWeek;
- (unsigned int)_elementForColumn:(int)arg1;
- (int)_columnForElement:(unsigned int)arg1;
- (void)setDatePickerMode:(int)arg1;
- (void)setMinuteInterval:(int)arg1;
- (void)setStaggerTimeIntervals:(BOOL)arg1;
- (int)_incrementedAmountForValue:(int)arg1 withElement:(unsigned int)arg2;
- (void)scrollerDidScroll:(id)arg1;
- (void)_updateRowInColumn:(int)arg1 toValue:(int)arg2 withRepeatingAmount:(int)arg3 element:(unsigned int)arg4 animated:(BOOL)arg5;
- (void)_loadDateAnimated:(BOOL)arg1;
- (void)_loadDesignatorStrings;
- (int)_selectedHourForColumn:(int)arg1;
- (int)_selectedMinuteForColumn:(int)arg1;
- (int)_minuteForRow:(int)arg1;
- (int)_secondForRow:(int)arg1;
- (void)_setDateComponent:(id)arg1 withElement:(unsigned int)arg2;
- (BOOL)_updateDateOrTime;
- (id)_fadeLabel:(id)arg1 toNewLabelWithString:(id)arg2 ifAnimated:(BOOL)arg3;
- (id)_minutesString;
- (id)_hoursString;
- (void)_updateLabels:(BOOL)arg1;
- (int)_dayForRow:(int)arg1;
- (int)_hourForRow:(int)arg1;
- (BOOL)_shouldEnableDayForRow:(int)arg1 column:(int)arg2;
- (BOOL)_shouldEnableMonthForRow:(int)arg1 column:(int)arg2;
- (BOOL)_scrollingAnyColumnExcept:(int)arg1;
- (BOOL)_shouldEnableMinuteForValue:(int)arg1 column:(int)arg2;
- (BOOL)_shouldEnableHourForValue:(int)arg1 column:(int)arg2;
- (BOOL)_shouldEnableYearForRow:(int)arg1;
- (BOOL)_shouldEnableWeekMonthDayForCell:(id)arg1;
- (void)_updateEnabledCells:(BOOL)arg1;
- (id)_todayTextColor;
- (void)_ensureTodayIsSet;
- (int)_monthForRow:(int)arg1;
- (int)_yearForRow:(int)arg1;
- (int)_eraForRow:(int)arg1;
- (void)_setupCell:(id)arg1 atRow:(int)arg2 inColumn:(int)arg3 withElementFlag:(unsigned int)arg4;
- (void)setHighlightsToday:(BOOL)arg1;
- (id)dateComponents;
- (void)setDateComponents:(id)arg1;
- (void)setCountDownDuration:(double)arg1;
- (float)pickerView:(id)arg1 widthForComponent:(int)arg2;
- (id)_createAccessoryViewWithText:(id)arg1 andFont:(id)arg2;
- (id)_createLabelWithString:(id)arg1 above:(id)arg2;
- (id)delegateOfDatePicker;
- (void)setDelegateOfDatePicker:(id)arg1;
- (int)minuteInterval;
- (id)maximumDate;
- (id)minimumDate;
- (id)timeZone;
- (id)locale;
- (int)datePickerMode;
- (struct __CFDateFormatter { }*)_localDateFormatter;
- (int)hour;
- (id)date;
- (void)scrollerWillStartDragging:(id)arg1;
- (id)shadowColor;
- (float)pickerView:(id)arg1 rowHeightForComponent:(int)arg2;
- (id)calendar;
- (void)setDate:(id)arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (int)pickerView:(id)arg1 numberOfRowsInComponent:(int)arg2;
- (void)pickerViewLoaded:(id)arg1;
- (id)pickerView:(id)arg1 viewForRow:(int)arg2 forComponent:(int)arg3 reusingView:(id)arg4;
- (float)_tableRowHeight;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)pickerImageNamePrefix;
- (void)setDelegate:(id)arg1;

@end
