/* Generated by RuntimeBrowser on iPhone OS 2.2.1
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UITextInputTraits, UILabel, NSString, UITextFieldAtomBackgroundView, UITextFieldBackgroundView, UIView, UIImageView, UIColor, UIImage, UITextFieldBorderView, UITextFieldLabel;



@interface UITextField : UIControl <UITextInputTraits, NSCoding>
{
    NSString *_text;
    UIColor *_textColor;
    NSInteger _borderStyle;
    float _minimumFontSize;
    id _delegate;
    UIImage *_background;
    UIImage *_disabledBackground;
    NSInteger _clearButtonMode;
    UIView *_leftView;
    NSInteger _leftViewMode;
    UIView *_rightView;
    NSInteger _rightViewMode;
    UITextInputTraits *_traits;
    UITextInputTraits *_nonAtomTraits;
    float _fullFontSize;
    float _paddingLeft;
    float _paddingTop;
    float _paddingRight;
    float _paddingBottom;
    NSString *_textFont;
    UIColor *_caretColor;
    struct _NSRange { 
        NSUInteger location; 
        NSUInteger length; 
    } _selectionRange;
    NSInteger _scrollXOffset;
    NSInteger _scrollYOffset;
    float _progress;
    NSString *_style;
    double _mouseDownTime;
    UIView *_clearButton;
    struct CGSize { 
        float width; 
        float height; 
    } _clearButtonOffset;
    struct CGSize { 
        float width; 
        float height; 
    } _leftViewOffset;
    struct CGSize { 
        float width; 
        float height; 
    } _rightViewOffset;
    UITextFieldBorderView *_backgroundView;
    UITextFieldBorderView *_disabledBackgroundView;
    UITextFieldBackgroundView *_systemBackgroundView;
    UITextFieldLabel *_textLabel;
    UITextFieldLabel *_placeholderLabel;
    UIImageView *_iconView;
    UILabel *_label;
    float _labelOffset;
    UITextFieldAtomBackgroundView *_atomBackgroundView;
    struct { 
        unsigned int secureTextChanged : 1; 
        unsigned int guard : 1; 
        unsigned int delegateRespondsToHandleKeyDown : 1; 
        unsigned int verticallyCenterText : 1; 
        unsigned int isAnimating : 4; 
        unsigned int inactiveHasDimAppearance : 1; 
        unsigned int becomesFirstResponderOnClearButtonTap : 1; 
        unsigned int clearsOnBeginEditing : 1; 
        unsigned int adjustsFontSizeToFitWidth : 1; 
        unsigned int fieldEditorAttached : 1; 
        unsigned int inBecomeFirstResponder : 1; 
    } _textFieldFlags;
}

@property(copy) NSString *text;
@property(retain) UIColor *textColor;
@property(retain) UIFont *font;
@property NSInteger textAlignment;
@property(copy) NSString *placeholder;
@property BOOL clearsOnBeginEditing;
@property BOOL adjustsFontSizeToFitWidth;
@property(getter=isEditing,readonly) BOOL editing;
@property NSInteger rightViewMode; /* unknown property attribute: V_rightViewMode */
@property(retain) UIView *rightView; /* unknown property attribute: V_rightView */
@property NSInteger leftViewMode; /* unknown property attribute: V_leftViewMode */
@property(retain) UIView *leftView; /* unknown property attribute: V_leftView */
@property NSInteger clearButtonMode; /* unknown property attribute: V_clearButtonMode */
@property(retain) UIImage *disabledBackground; /* unknown property attribute: V_disabledBackground */
@property(retain) UIImage *background; /* unknown property attribute: V_background */
@property <UITextFieldDelegate> *delegate; /* unknown property attribute: V_delegate */
@property float minimumFontSize; /* unknown property attribute: V_minimumFontSize */
@property NSInteger borderStyle; /* unknown property attribute: V_borderStyle */
@property(getter=isSecureTextEntry) BOOL secureTextEntry;
@property BOOL enablesReturnKeyAutomatically;
@property NSInteger returnKeyType;
@property NSInteger keyboardAppearance;
@property NSInteger keyboardType;
@property NSInteger autocorrectionType;
@property NSInteger autocapitalizationType;


- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)_clearStyle;
- (void)_setNeedsStyleRecalc;
- (void)_sizeChanged:(BOOL)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setAnimating:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canResignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)_sendInitialMouseEvents;
- (void)mouseDown:(struct __GSEvent { }*)arg1;
- (void)mouseDragged:(struct __GSEvent { }*)arg1;
- (void)mouseUp:(struct __GSEvent { }*)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 forEvent:(struct __GSEvent { }*)arg2;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)setFont:(id)arg1 fullFontSize:(float)arg2;
- (id)_copyFont:(id)arg1 newSize:(float)arg2 maxSize:(float)arg3;
- (float)_marginTopForText:(id)arg1;
- (id)_style;
- (void)_endedEditing;
- (void)_updateButtons;
- (void)_updateAutosizeStyleIfNeeded;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_atomBackgroundViewFrame;
- (BOOL)_showsAtomBackground;
- (void)_updateAtomBackground;
- (BOOL)_showsClearButton:(BOOL)arg1;
- (BOOL)_showsLeftView;
- (BOOL)_showsRightView;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_textRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forEditing:(BOOL)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_textRectExcludingButtonsForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_updateLabel;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_frameForLabel:(id)arg1 inTextRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)layoutSubviews;
- (BOOL)_shouldEndEditing;
- (void)_updateBackgroundViews;
- (void)_clearBackgroundViews;
- (struct CGPoint { float x1; float x2; })_scrollOffset;
- (struct CGSize { float x1; float x2; })_leftViewOffset;
- (void)_setLeftViewOffset:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })_rightViewOffset;
- (void)_setRightViewOffset:(struct CGSize { float x1; float x2; })arg1;
- (Class)_systemBackgroundViewClass;
- (BOOL)_fieldEditorAttached;
- (void)_setSystemBackgroundViewActive:(BOOL)arg1;
- (id)_placeholderView;
- (id)_textLabelView;
- (id)textInputTraits;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)_updateTextLabel;
- (void)setSecureTextEntry:(BOOL)arg1;
- (id)_text;
- (id)text;
- (void)setText:(id)arg1;
- (void)_updateTextColor;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (void)setFont:(id)arg1;
- (id)font;
- (void)setTextAlignment:(NSInteger)arg1;
- (NSInteger)textAlignment;
- (void)setContentVerticalAlignment:(NSInteger)arg1;
- (void)setBorderStyle:(NSInteger)arg1;
- (id)createPlaceholderLabelWithFont:(id)arg1 andTextAlignment:(NSInteger)arg2;
- (id)createTextLabelWithTextColor:(id)arg1;
- (void)setPlaceholder:(id)arg1;
- (id)placeholder;
- (BOOL)clearsOnBeginEditing;
- (void)setClearsOnBeginEditing:(BOOL)arg1;
- (BOOL)adjustsFontSizeToFitWidth;
- (void)setAdjustsFontSizeToFitWidth:(BOOL)arg1;
- (void)setBackground:(id)arg1;
- (void)setDisabledBackground:(id)arg1;
- (BOOL)isEditing;
- (void)setClearButtonMode:(NSInteger)arg1;
- (void)setLeftView:(id)arg1;
- (void)setLeftViewMode:(NSInteger)arg1;
- (void)setRightView:(id)arg1;
- (void)setRightViewMode:(NSInteger)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })borderRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })textRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })placeholderRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })editingRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })clearButtonRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })leftViewRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rightViewRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)drawTextInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)drawPlaceholderInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_drawTextInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 forLabel:(id)arg2;
- (void)willAttachFieldEditor:(id)arg1;
- (void)attachFieldEditor:(id)arg1;
- (void)willDetachFieldEditor:(id)arg1;
- (BOOL)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(BOOL)arg3;
- (BOOL)keyboardInputShouldDelete:(id)arg1;
- (BOOL)keyboardInputChanged:(id)arg1;
- (void)keyboardInputChangedSelection:(id)arg1;
- (id)customOverlayContainer;
- (NSInteger)keyboardInput:(id)arg1 positionForAutocorrection:(id)arg2;
- (BOOL)fieldEditorShouldEndEditing:(id)arg1;
- (void)fieldEditorDidBecomeFirstResponder:(id)arg1;
- (void)fieldEditorDidResignFirstResponder:(id)arg1;
- (void)fieldEditorDidChange:(id)arg1;
- (void)selectAllFromFieldEditor:(id)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })fieldEditor:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg2 toCharacterRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg3;
- (void)fieldEditorDidChangeSelection:(id)arg1;
- (BOOL)fieldEditor:(id)arg1 shouldInsertText:(id)arg2 replacingRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg3;
- (BOOL)fieldEditor:(id)arg1 shouldReplaceWithText:(id)arg2;
- (BOOL)webView:(id)arg1 shouldInsertText:(id)arg2 replacingDOMRange:(id)arg3 givenAction:(NSInteger)arg4;
- (void)setAutoresizesTextToFit:(BOOL)arg1;
- (void)setTextAutorresizesToFit:(BOOL)arg1;
- (void)setClearButtonStyle:(NSInteger)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })clearButtonRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })textRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })editRect;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)drawBorder:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setPaddingTop:(float)arg1 paddingLeft:(float)arg2;
- (void)setPaddingLeft:(float)arg1;
- (float)paddingLeft;
- (void)setPaddingTop:(float)arg1;
- (float)paddingTop;
- (void)setPaddingBottom:(float)arg1;
- (float)paddingBottom;
- (void)setPaddingRight:(float)arg1;
- (float)paddingRight;
- (void)setTextFont:(id)arg1;
- (void)setInactiveHasDimAppearance:(BOOL)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)selectAll:(id)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })selectionRange;
- (void)setSelectionRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (NSUInteger)characterOffsetAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)setIcon:(id)arg1;
- (struct CGSize { float x1; float x2; })clearButtonOffset;
- (void)setBecomesFirstResponderOnClearButtonTap:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })iconRect;
- (void)setProgress:(float)arg1;
- (BOOL)hasMarkedText;
- (void)setLabelOffset:(float)arg1;
- (id)textLabel;
- (void)setLabel:(id)arg1;
- (void)setTextCentersHorizontally:(BOOL)arg1;
- (void)setTextCentersVertically:(BOOL)arg1;
- (void)_clearButtonClicked:(id)arg1;
- (void)setClearButtonOffset:(struct CGSize { float x1; float x2; })arg1;
- (void)setDrawsAsAtom:(BOOL)arg1;
- (BOOL)drawsAsAtom;
- (void)setAtomStyle:(NSInteger)arg1;
- (NSInteger)atomStyle;
- (NSInteger)rightViewMode;
- (id)rightView;
- (NSInteger)leftViewMode;
- (id)leftView;
- (NSInteger)clearButtonMode;
- (id)disabledBackground;
- (id)background;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (float)minimumFontSize;
- (void)setMinimumFontSize:(float)arg1;
- (NSInteger)borderStyle;
- (id)_scriptingInfo;

@end
