/* Generated by RuntimeBrowser on iPhone OS 3.0
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIImageView;



@interface UISlider : UIControl <NSCoding>
{
    float _value;
    float _minValue;
    float _maxValue;
    struct __CFDictionary { } *_contentLookup;
    UIImageView *_minValueImageView;
    UIImageView *_maxValueImageView;
    UIImageView *_thumbView;
    UIImageView *_minTrackView;
    UIImageView *_maxTrackView;
    struct { 
        unsigned int continuous : 1; 
        unsigned int animating : 1; 
        unsigned int showValue : 1; 
        unsigned int trackEnabled : 1; 
        unsigned int creatingSnapshot : 1; 
        unsigned int thumbDisabled : 1; 
    } _sliderFlags;
    float _hitOffset;
}

@property(retain) UIImage *minimumValueImage;
@property(retain) UIImage *maximumValueImage;
@property(getter=isContinuous) BOOL continuous;
@property(readonly) UIImage *currentThumbImage;
@property(readonly) UIImage *currentMinimumTrackImage;
@property(readonly) UIImage *currentMaximumTrackImage;
@property float maximumValue;
@property float minimumValue;
@property float value;


- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_initImages;
- (void)_initSubviews;
- (void)dealloc;
- (void)setThumbImage:(id)arg1 forState:(NSUInteger)arg2;
- (void)setMinimumTrackImage:(id)arg1 forState:(NSUInteger)arg2;
- (void)setMaximumTrackImage:(id)arg1 forState:(NSUInteger)arg2;
- (id)thumbImageForState:(NSUInteger)arg1;
- (id)minimumTrackImageForState:(NSUInteger)arg1;
- (id)maximumTrackImageForState:(NSUInteger)arg1;
- (id)currentThumbImage;
- (id)currentMinimumTrackImage;
- (id)currentMaximumTrackImage;
- (void)setMinimumValueImage:(id)arg1;
- (id)minimumValueImage;
- (void)setMaximumValueImage:(id)arg1;
- (id)maximumValueImage;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })minimumValueImageRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })maximumValueImageRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })trackRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })thumbRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 trackRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 value:(float)arg3;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (void)_layoutSubviewsForBoundsChange:(BOOL)arg1;
- (void)_updateAppearanceForEnabled:(BOOL)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setSelected:(BOOL)arg1;
- (void)setContinuous:(BOOL)arg1;
- (BOOL)isContinuous;
- (float)value;
- (void)setValue:(float)arg1;
- (void)setValue:(float)arg1 animated:(BOOL)arg2;
- (void)_setValue:(float)arg1 andSendAction:(BOOL)arg2;
- (float)minimumValue;
- (void)setMinimumValue:(float)arg1;
- (float)maximumValue;
- (void)setMaximumValue:(float)arg1;
- (void)_sliderAnimationWillStart:(id)arg1 context:(void*)arg2;
- (void)_sliderAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void*)arg3;
- (void)_sendDelayedActions;
- (BOOL)beginTrackingAt:(struct CGPoint { float x1; float x2; })arg1 withEvent:(struct __GSEvent { }*)arg2;
- (BOOL)continueTrackingAt:(struct CGPoint { float x1; float x2; })arg1 previous:(struct CGPoint { float x1; float x2; })arg2 withEvent:(struct __GSEvent { }*)arg3;
- (void)endTrackingAt:(struct CGPoint { float x1; float x2; })arg1 previous:(struct CGPoint { float x1; float x2; })arg2 withEvent:(struct __GSEvent { }*)arg3;
- (BOOL)cancelMouseTracking;
- (void)_controlMouseDown:(struct __GSEvent { }*)arg1;
- (void)_controlMouseUp:(struct __GSEvent { }*)arg1;
- (void)_controlMouseDragged:(struct __GSEvent { }*)arg1;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (BOOL)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchBegan:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchMoved:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchEnded:(id)arg1 withEvent:(id)arg2;
- (BOOL)cancelTouchTracking;
- (id)_scriptingInfo;
- (id)scriptingInfoWithChildren;
- (void)_setContent:(id)arg1 forState:(NSUInteger)arg2;
- (void)_setThumbImage:(id)arg1 forStates:(NSUInteger)arg2;
- (void)_setMinimumTrackImage:(id)arg1 forStates:(NSUInteger)arg2;
- (void)_setMaximumTrackImage:(id)arg1 forStates:(NSUInteger)arg2;
- (id)_contentForState:(NSUInteger)arg1;
- (id)_thumbImageForState:(NSUInteger)arg1;
- (id)_minimumTrackImageForState:(NSUInteger)arg1;
- (id)_maximumTrackImageForState:(NSUInteger)arg1;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (BOOL)isAnimatingValueChange;
- (void)setShowValue:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })valueTextRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)createThumbView;
- (void)setThumbImage:(id)arg1 forStates:(NSUInteger)arg2;
- (void)setMinimumTrackImage:(id)arg1 forStates:(NSUInteger)arg2;
- (void)setMaximumTrackImage:(id)arg1 forStates:(NSUInteger)arg2;
- (void)_setTrackEnabled:(BOOL)arg1;
- (BOOL)_trackEnabled;
- (void)_setThumbEnabled:(BOOL)arg1;
- (BOOL)_isThumbEnabled;
- (BOOL)isAccessibilityElementByDefault;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;

@end
