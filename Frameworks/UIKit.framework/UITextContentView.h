/* Generated by RuntimeBrowser on iPhone OS 4.1
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIColor, WebFrame, UIDelayedAction, UIFont, DOMHTMLElement, UITextSelectionView, UIWebDocumentView, UITextInteractionAssistant;



@interface UITextContentView : UIView <UITextSelectingContainer, UITextInputTraits>
{
    id m_delegate;
    WebFrame *m_frame;
    DOMHTMLElement *m_body;
    NSInteger m_marginTop;
    UIDelayedAction *m_scrollToVisibleTimer;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } m_selectionInset;
    float m_bottomBufferHeight;
    BOOL m_editable;
    BOOL m_editing;
    BOOL m_becomesEditableWithGestures;
    BOOL m_becomingFirstResponder;
    BOOL m_reentrancyGuard;
    BOOL m_scrollsSelectionOnWebDocumentChanges;
    BOOL m_hasExplicitTextAlignment;
    UITextInteractionAssistant *m_interactionAssistant;
    UITextSelectionView *m_selectionView;
    UIWebDocumentView *m_webView;
    UIFont *m_font;
    UIColor *m_textColor;
    NSInteger m_textAlignment;
}

@property(copy) NSString *text;
@property(retain) UIFont *font;
@property(retain) UIColor *textColor;
@property NSInteger textAlignment;
@property _NSRange selectedRange;
@property(getter=isEditable) BOOL editable;
@property(readonly) UIView<UITextSelectingContent> *content;
@property(readonly) UITextInteractionAssistant *interactionAssistant;
@property(readonly) UITextSelectionView *selectionView;
@property <UITextContentViewDelegate> *delegate;
@property(getter=isEditing) BOOL editing;
@property(getter=isSecureTextEntry) BOOL secureTextEntry;
@property BOOL enablesReturnKeyAutomatically;
@property NSInteger returnKeyType;
@property NSInteger keyboardAppearance;
@property NSInteger keyboardType;
@property NSInteger autocorrectionType;
@property NSInteger autocapitalizationType;
@property BOOL scrollsSelectionOnWebDocumentChanges;
@property UIEdgeInsets selectionInset;

+ (void)_initializeSafeCategory;

- (void)_hideSelectionCommands;
- (BOOL)isSMSTextView;
- (void)performScrollSelectionToVisible:(BOOL)arg1;
- (void)touchScrollToVisibleTimerWithDelay:(double)arg1;
- (void)touchScrollToVisibleTimer;
- (void)clearScrollToVisibleTimer;
- (void)scrollToVisibleTimerAction;
- (BOOL)scrollsSelectionOnWebDocumentChanges;
- (void)setScrollsSelectionOnWebDocumentChanges:(BOOL)arg1;
- (void)setSelectionInset:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectForVisiblePosition:(id)arg1;
- (id)scrollView;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })selectionInset;
- (id)wordContainingCaretSelection;
- (id)wordRangeContainingCaretSelection;
- (id)fontForCaretSelection;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectContainingCaretSelection;
- (unsigned short)characterBeforeCaretSelection;
- (id)markedText;
- (void)setEmbeddedEditingMode:(BOOL)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForScrollToVisible;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 webView:(id)arg2;
- (void)commonInitWithWebDocumentView:(id)arg1 isDecoding:(BOOL)arg2;
- (void)detachSelectionView;
- (void)detachInteractionAssistant;
- (void)registerForEditingDelegateNotification:(id)arg1 selector:(SEL)arg2;
- (void)keyboardDidShow:(id)arg1;
- (struct CGSize { float x1; float x2; })tileSizeForSize:(struct CGSize { float x1; float x2; })arg1;
- (void)recalculateStyle;
- (void)updateWebViewObjects;
- (void)ensureSelection;
- (void)updateSelection;
- (id)undoManagerForWebView:(id)arg1;
- (void)performBecomeEditableTasks;
- (void)setSelectionToStart;
- (void)setSelectionToEnd;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForSelection:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)setContentToHTMLString:(id)arg1;
- (id)contentAsHTMLString;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })selectedRange;
- (void)setSelectedRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (void)setEditable:(BOOL)arg1;
- (BOOL)becomesEditableWithGestures;
- (void)setBecomesEditableWithGestures:(BOOL)arg1;
- (NSInteger)marginTop;
- (void)setMarginTop:(NSInteger)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleTextRect;
- (void)scrollRangeToVisible:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;
- (BOOL)shouldStartDataDetectors;
- (void)cancelDataDetectorsWithWebLock;
- (void)startDataDetectorsWithWebLock;
- (void)resetDataDetectorsResultsWithWebLock;
- (NSUInteger)dataDetectorTypes;
- (void)setDataDetectorTypes:(NSUInteger)arg1;
- (BOOL)mightHaveLinks;
- (void)tapLinkAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)startInteractionWithLinkAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)updateInteractionWithLinkAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)validateInteractionWithLinkAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)cancelInteractionWithLink;
- (void)startLongInteractionWithLinkAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)isInteractingWithLink;
- (BOOL)willInteractWithLinkAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg2 replacementText:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)setBottomBufferHeight:(float)arg1;
- (float)bottomBufferHeight;
- (BOOL)showScrollerIndicators;
- (void)displayScrollerIndicators;
- (void)setAllowsRubberBanding:(BOOL)arg1;
- (void)setAllowsFourWayRubberBanding:(BOOL)arg1;
- (void)setScrollerIndicatorSubrect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)hasText;
- (void)scrollSelectionToVisible:(BOOL)arg1;
- (void)webViewDidChange:(id)arg1;
- (id)automaticallySelectedOverlay;
- (BOOL)isFirstResponder;
- (id)styleString;
- (id)wordInRange:(id)arg1;
- (BOOL)canResignFirstResponder;
- (id)_keyboardResponder;
- (id)textInputTraits;
- (void)forwardInvocation:(id)arg1;
- (id)textColor;
- (NSInteger)textAlignment;
- (BOOL)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(BOOL)arg3;
- (BOOL)keyboardInputShouldDelete:(id)arg1;
- (BOOL)keyboardInputChanged:(id)arg1;
- (void)keyboardInputChangedSelection:(id)arg1;
- (id)supportedPasteboardTypesForCurrentSelection;
- (id)documentFragmentForPasteboardItemAtIndex:(NSInteger)arg1;
- (void)selectAll;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })selectionRange;
- (BOOL)hasMarkedText;
- (id)content;
- (BOOL)isEditable;
- (void)beginSelectionChange;
- (void)endSelectionChange;
- (void)selectionChanged;
- (BOOL)hasSelection;
- (void)startAutoscroll:(struct CGPoint { float x1; float x2; })arg1;
- (void)cancelAutoscroll;
- (void)setSelectionVisible:(BOOL)arg1;
- (BOOL)selectionVisible;
- (void)setCaretBlinks:(BOOL)arg1;
- (BOOL)caretBlinks;
- (id)selectionView;
- (id)interactionAssistant;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })selectionClipRect;
- (id)selectionRectsForRange:(id)arg1;
- (id)selectedText;
- (void)insertText:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (NSUInteger)offsetInMarkedTextForSelection:(id)arg1;
- (struct CGPoint { float x1; float x2; })constrainedPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)webView;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)paste:(id)arg1;
- (void)select:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)_setRtoLTextDirection:(id)arg1;
- (void)_setLtoRTextDirection:(id)arg1;
- (void)replace:(id)arg1;
- (void)promptForReplace:(id)arg1;
- (void)setTextAlignment:(NSInteger)arg1;
- (void)setEditing:(BOOL)arg1;
- (BOOL)isEditing;
- (void)scrollRectToVisible:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 animated:(BOOL)arg2;
- (void)_scrollViewWillBeginDragging;
- (void)_scrollViewDidEndDecelerating;
- (void)setScrollingEnabled:(BOOL)arg1;
- (void)_scrollViewDidEndDraggingWithDeceleration:(BOOL)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeFirstResponder;
- (id)_automationValue;
- (void)didMoveToSuperview;
- (void)_didScroll;
- (BOOL)scrollingEnabled;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)font;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (id)undoManager;
- (void)setText:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setTextColor:(id)arg1;
- (id)text;
- (struct CGPoint { float x1; float x2; })offset;
- (void)setOffset:(struct CGPoint { float x1; float x2; })arg1;
- (void)setShowScrollerIndicators:(BOOL)arg1;
- (void)removeFromSuperview;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_accessibilityCurrentSelectionRange;
- (BOOL)isAccessibilityElement;
- (unsigned long long)accessibilityTraits;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })accessibilityFrame;
- (id)accessibilityValue;
- (id)_accessibilityTextViewTextOperationResponder;
- (struct CGPoint { float x1; float x2; })accessibilityCenterPoint;
- (void)_accessibilitySetValue:(id)arg1;
- (struct _NSRange { NSUInteger x1; NSUInteger x2; })_accessibilitySelectedTextRange;
- (void)_accessibilitySetSelectedTextRange:(struct _NSRange { NSUInteger x1; NSUInteger x2; })arg1;

@end
