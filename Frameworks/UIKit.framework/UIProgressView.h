/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIImage, UIColor, UIImageView;

@interface UIProgressView : UIView <NSCoding> {
    int _progressViewStyle;
    float _progress;
    int _barStyle;
    UIColor *_progressTintColor;
    UIColor *_trackTintColor;
    UIImageView *_trackView;
    UIImageView *_progressViews[3];
    BOOL _isAnimating;
    UIImage *_trackImage;
    UIImage *_progressImage;
}

@property int progressViewStyle;
@property float progress;
@property(retain) UIColor * progressTintColor;
@property(retain) UIColor * trackTintColor;
@property(retain) UIImage * progressImage;
@property(retain) UIImage * trackImage;

+ (struct { id x1; id x2; id x3; id x4; })_standardImagesForStyle:(int)arg1 barStyle:(int)arg2;
+ (struct { id x1; id x2; id x3; id x4; })_sliceImage:(id)arg1;
+ (int)_indexForStyle:(int)arg1 barStyle:(int)arg2;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (struct CGSize { float x1; float x2; })defaultSize;

- (void)dealloc;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (id)trackTintColor;
- (id)progressImage;
- (id)trackImage;
- (float)progress;
- (void)setTrackImage:(id)arg1;
- (void)setTrackTintColor:(id)arg1;
- (void)setProgressImage:(id)arg1;
- (void)_setProgressColor:(id)arg1;
- (id)_progressColor;
- (void)setProgress:(float)arg1 animated:(BOOL)arg2;
- (id)initWithProgressViewStyle:(int)arg1;
- (void)setProgressTintColor:(id)arg1;
- (id)progressTintColor;
- (void)_setProgressAnimated:(float)arg1 duration:(double)arg2 delay:(double)arg3 options:(unsigned int)arg4;
- (void)_updateCapsAtStartOfAnimation;
- (void)_updateCapsAtEndOfAnimation;
- (BOOL)_shouldTintTrack;
- (BOOL)_shouldTintProgress;
- (void)_setProgress:(float)arg1;
- (void)_updateImages;
- (void)setProgressViewStyle:(int)arg1;
- (int)progressViewStyle;
- (int)barStyle;
- (void)setBarStyle:(int)arg1;
- (void)setProgress:(float)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;

@end
