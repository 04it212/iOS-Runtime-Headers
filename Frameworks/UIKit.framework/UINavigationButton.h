/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSSet, NSString, UIColor, UIImage, UINavigationBar;

@interface UINavigationButton : UIButton {
    struct CGSize { 
        float width; 
        float height; 
    unsigned int _size : 2;
    unsigned int _pad : 30;
    int _barStyle;
    } _boundsAdjustment;
    UINavigationBar *_navigationBar;
    NSSet *_possibleTitles;
    int _style;
    UIColor *_tintColor;
}

@property int barStyle;
@property int controlSize;
@property(retain) UIImage * image;
@property int style;
@property(retain) UIColor * tintColor;
@property(retain) NSString * title;

+ (void)_initializeSafeCategory;
+ (id)defaultFont;

- (void)_adjustBounds;
- (BOOL)_canHandleStatusBarMouseEvents:(struct __GSEvent { }*)arg1;
- (struct CGPoint { float x1; float x2; })_offsetForMiniBarState:(BOOL)arg1;
- (id)_scriptingInfo;
- (void)_setBoundsAdjustment:(struct CGSize { float x1; float x2; })arg1;
- (void)_setNavigationBar:(id)arg1;
- (void)_updateContentInsets;
- (void)_updateStyle;
- (id)accessibilityLabel;
- (unsigned long long)accessibilityTraits;
- (id)accessibilityValue;
- (int)barStyle;
- (BOOL)contentsEqualTo:(id)arg1 withStyle:(int)arg2;
- (int)controlSize;
- (void)dealloc;
- (id)image;
- (id)initWithImage:(id)arg1 style:(int)arg2;
- (id)initWithImage:(id)arg1 width:(float)arg2 style:(int)arg3 applyBezel:(BOOL)arg4 forBarStyle:(int)arg5 buttonItemStyle:(int)arg6;
- (id)initWithImage:(id)arg1 width:(float)arg2 style:(int)arg3;
- (id)initWithImage:(id)arg1;
- (id)initWithTitle:(id)arg1 possibleTitles:(id)arg2 style:(int)arg3;
- (id)initWithTitle:(id)arg1 style:(int)arg2;
- (id)initWithTitle:(id)arg1;
- (id)initWithValue:(id)arg1 width:(float)arg2 style:(int)arg3 barStyle:(int)arg4 possibleTitles:(id)arg5 tintColor:(id)arg6 applyBezel:(BOOL)arg7 forButtonItemStyle:(int)arg8;
- (id)initWithValue:(id)arg1 width:(float)arg2 style:(int)arg3 barStyle:(int)arg4 possibleTitles:(id)arg5 tintColor:(id)arg6;
- (void)setBarStyle:(int)arg1;
- (void)setControlSize:(int)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setImage:(id)arg1;
- (void)setStyle:(int)arg1;
- (void)setTintColor:(id)arg1;
- (void)setTitle:(id)arg1;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (int)style;
- (id)tintColor;
- (id)title;

@end
