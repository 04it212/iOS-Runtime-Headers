/* Generated by RuntimeBrowser on iPhone OS 2.2.1
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIView, UILabel, NSString, UIImageView, UIImage;



@interface UITableViewCell : UIView <NSCoding>
{
    id _target;
    SEL _editAction;
    SEL _accessoryAction;
    id _editingData;
    float _rightMargin;
    NSInteger _indentationLevel;
    float _indentationWidth;
    NSString *_reuseIdentifier;
    UIView *_contentView;
    UIImage *_image;
    UIImage *_selectedImage;
    UILabel *_textLabel;
    UIImageView *_imageView;
    UIView *_backgroundView;
    UIView *_selectedBackgroundView;
    struct __CFDictionary { } *_unhighlightedStates;
    struct { 
        unsigned int showingDeleteConfirmation : 1; 
        unsigned int separatorStyle : 3; 
        unsigned int selectionStyle : 3; 
        unsigned int selectionFadeFraction : 11; 
        unsigned int editing : 1; 
        unsigned int editingStyle : 3; 
        unsigned int accessoryType : 3; 
        unsigned int showsAccessoryWhenEditing : 1; 
        unsigned int showsReorderControl : 1; 
        unsigned int showDisclosure : 1; 
        unsigned int showTopSeparator : 1; 
        unsigned int disclosureClickable : 1; 
        unsigned int disclosureStyle : 1; 
        unsigned int showingRemoveControl : 1; 
        unsigned int alignment : 3; 
        unsigned int sectionLocation : 3; 
        unsigned int tableViewStyle : 1; 
        unsigned int shouldIndentWhileEditing : 1; 
        unsigned int fontSet : 1; 
        unsigned int usingDefaultSelectedBackgroundView : 1; 
    } _tableCellFlags;
    UIView *_accessoryView;
    UIView *_customAccessoryView;
}

@property(retain) _UITableViewCellEditingData *editingData;
@property(copy) NSString *text;
@property(retain) UIFont *font;
@property NSInteger textAlignment;
@property NSInteger lineBreakMode;
@property(retain) UIColor *textColor;
@property(retain) UIColor *selectedTextColor;
@property(retain) UIImage *image;
@property(retain) UIImage *selectedImage;
@property(retain,readonly) UIView *contentView;
@property(retain) UIView *backgroundView;
@property(retain) UIView *selectedBackgroundView;
@property(copy,readonly) NSString *reuseIdentifier;
@property NSInteger selectionStyle;
@property(getter=isSelected) BOOL selected;
@property(readonly) NSInteger editingStyle;
@property BOOL showsReorderControl;
@property BOOL shouldIndentWhileEditing;
@property NSInteger accessoryType;
@property(retain) UIView *accessoryView;
@property BOOL hidesAccessoryWhenEditing;
@property NSInteger indentationLevel;
@property float indentationWidth;
@property(getter=isEditing) BOOL editing;
@property(readonly) BOOL showingDeleteConfirmation;
@property id target;
@property SEL editAction;
@property SEL accessoryAction;


- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 reuseIdentifier:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)setText:(id)arg1;
- (id)text;
- (void)_setFont:(id)arg1 layout:(BOOL)arg2;
- (void)setFont:(id)arg1;
- (id)font;
- (void)setTextAlignment:(NSInteger)arg1;
- (NSInteger)textAlignment;
- (void)setLineBreakMode:(NSInteger)arg1;
- (NSInteger)lineBreakMode;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (void)setSelectedTextColor:(id)arg1;
- (id)selectedTextColor;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setSelectedImage:(id)arg1;
- (id)selectedImage;
- (id)contentView;
- (void)setBackgroundView:(id)arg1;
- (id)backgroundView;
- (void)setSelectedBackgroundView:(id)arg1;
- (id)selectedBackgroundView;
- (void)setSeparatorStyle:(NSInteger)arg1;
- (NSInteger)separatorStyle;
- (void)setReuseIdentifier:(id)arg1;
- (id)reuseIdentifier;
- (void)prepareForReuse;
- (void)_saveOpaqueViewState:(id)arg1;
- (void)_setOpaque:(BOOL)arg1 forSubview:(id)arg2;
- (void)setSelectionStyle:(NSInteger)arg1;
- (NSInteger)selectionStyle;
- (void)setSelected:(BOOL)arg1;
- (BOOL)isSelected;
- (void)_deselectAnimationFinished;
- (void)setSelected:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setEditingStyle:(NSInteger)arg1;
- (NSInteger)editingStyle;
- (void)setShowsReorderControl:(BOOL)arg1;
- (BOOL)showsReorderControl;
- (void)setShouldIndentWhileEditing:(BOOL)arg1;
- (BOOL)shouldIndentWhileEditing;
- (void)setAccessoryType:(NSInteger)arg1;
- (NSInteger)accessoryType;
- (void)setAccessoryView:(id)arg1;
- (id)accessoryView;
- (void)setHidesAccessoryWhenEditing:(BOOL)arg1;
- (BOOL)hidesAccessoryWhenEditing;
- (void)setIndentationLevel:(NSInteger)arg1;
- (NSInteger)indentationLevel;
- (void)setIndentationWidth:(float)arg1;
- (float)indentationWidth;
- (void)setEditing:(BOOL)arg1;
- (void)setEditing:(BOOL)arg1 animated:(BOOL)arg2;
- (BOOL)isEditing;
- (void)setShowingDeleteConfirmation:(BOOL)arg1;
- (BOOL)showingDeleteConfirmation;
- (float)_editingButtonOffset;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_delegateConfirmationRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })backgroundRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })contentRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })textRectForContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })imageRectForContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })editRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })accessoryRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })reorderRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setEditAction:(SEL)arg1;
- (SEL)editAction;
- (void)setAccessoryAction:(SEL)arg1;
- (SEL)accessoryAction;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setIsAncestorOfFirstResponder:(BOOL)arg1;
- (void)removeFromSuperview;
- (void)layoutSubviews;
- (void)setBackgroundColor:(id)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (NSInteger)sectionLocation;
- (void)_setupSelectedBackgroundView;
- (void)setSectionLocation:(NSInteger)arg1;
- (void)setSectionLocation:(NSInteger)arg1 animated:(BOOL)arg2;
- (id)_tableView;
- (void)_setShowsReorderControl:(BOOL)arg1;
- (void)_setEditingStyle:(NSInteger)arg1;
- (void)_setShowingDeleteConfirmation:(BOOL)arg1;
- (void)_setShouldIndentWhileEditing:(BOOL)arg1;
- (void)_setDrawsTopSeparator:(BOOL)arg1;
- (void)_drawSeparatorInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_drawBackgroundInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 withFade:(float)arg2;
- (id)_removeControl;
- (void)_grabberBeganReorder:(id)arg1;
- (void)_grabberDragged:(id)arg1 yDelta:(float)arg2;
- (void)_grabberReleased:(id)arg1;
- (void)_uiRemoveControlMinusButtonHideAnimationDone:(id)arg1;
- (void)_willBeDeleted;
- (void)removeControl:(id)arg1 willRemoveTarget:(id)arg2;
- (void)insertControl:(id)arg1 shouldInsertWithTarget:(id)arg2;
- (void)removeControlWillHideRemoveConfirmation:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })removeControl:(id)arg1 startFrameForTarget:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })removeControl:(id)arg1 endFrameForTarget:(id)arg2;
- (void)removeControl:(id)arg1 wasCanceledForTarget:(id)arg2;
- (NSInteger)tableViewStyle;
- (void)setTableViewStyle:(NSInteger)arg1;
- (id)_scriptingInfo;
- (id)editingData;
- (void)setEditingData:(id)arg1;
- (void)_createReorderControlIfNeeded;
- (id)_reorderingControl;
- (id)_reorderingSeparatorView;
- (void)_releaseReorderingControl;
- (void)_setGrabberHidden:(BOOL)arg1;
- (void)_finishedFadingGrabber:(id)arg1 finished:(BOOL)arg2;
- (id)_disclosureImage;
- (id)_disclosurePressedImage;
- (id)_currentAccessoryView:(BOOL)arg1;
- (id)_createRemoveControl;
- (id)_createInsertControl;
- (void)_releaseRemoveControl;
- (void)_removeRemoveControl;
- (void)_layoutSubviewsAnimated:(BOOL)arg1;
- (void)_updateHighlightColorsForView:(id)arg1 highlighted:(BOOL)arg2;
- (void)_updateHighlightColorsForAnimationHalfwayPoint;
- (void)_updateAndCacheBackgroundColorForHighlight;
- (void)_updateHighlightColors;
- (void)_showReorderControl;
- (id)_defaultFont;
- (id)_textLabel;
- (id)_imageView;
- (struct CGSize { float x1; float x2; })_textInsetSize;
- (struct CGSize { float x1; float x2; })_imageInsetSize;

@end
