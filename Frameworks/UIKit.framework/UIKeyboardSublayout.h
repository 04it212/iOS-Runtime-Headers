/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSMutableDictionary, UIClippedImageView, UIKeyboardReturnKeyView, UIKeyboardSpaceKeyView, UIImageView, NSMutableArray;

@interface UIKeyboardSublayout : UIView {
    struct { struct CGRect { 
            struct CGPoint { 
                float x; 
                float y; 
            } origin; 
            struct CGSize { 
                float width; 
                float height; 
            } size; 
        } x1; struct CGRect { 
            struct CGPoint { 
                float x; 
                float y; 
            } origin; 
            struct CGSize { 
                float width; 
                float height; 
            } size; 
        } x2; struct CGRect { 
            struct CGPoint { 
                float x; 
                float y; 
            } origin; 
            struct CGSize { 
                float width; 
                float height; 
            } size; 
        } x3; struct CGRect { 
            struct CGPoint { 
                float x; 
                float y; 
            } origin; 
            struct CGSize { 
                float width; 
                float height; 
            } size; 
        } x4; struct CGRect { 
            struct CGPoint { 
                float x; 
                float y; 
            } origin; 
            struct CGSize { 
                float width; 
                float height; 
            } size; 
    UIClippedImageView *m_activeImageView;
    NSMutableDictionary *m_activeKeyViews;
    UIImageView *m_autoShiftButtonImageView;
    NSMutableDictionary *m_compositeImages;
    UIImageView *m_deleteActiveImageView;
    UIImageView *m_deleteImageView;
    NSMutableArray *m_extraImageViews;
    UIImageView *m_imageView;
    BOOL m_internationalKeyIsActivated;
    UIImageView *m_intlMoreImageView;
    UIImageView *m_intlSwitchActiveImageView;
    UIImageView *m_intlSwitchImageView;
    BOOL m_isShiftKeyPlaneChooser;
        } x5; id x6; /* Warning: Unrecognized filer type: '"' using 'void*' */ void*x7; inout unsigned short x8; unsigned short x9; void*x10; const NSInteger x11; in void*x12; void*x13; id x14; void*x15; inout unsigned short x16; unsigned short x17; void*x18; const NSInteger x19; in void*x20; void*x21; NSUInteger x22; NSUInteger x23; NSUInteger x24; id x25; } *m_keys;
    NSUInteger m_keysCount;
    UIImageView *m_nonIntlMoreImageView;
    BOOL m_registersKeyCentroids;
    NSMutableDictionary *m_replacementImageViews;
    struct __CFDictionary { } *m_replacementKeys;
    UIKeyboardReturnKeyView *m_returnKeyView;
    UIClippedImageView *m_shiftActiveImageView;
    UIImageView *m_shiftButtonImageView;
    UIImageView *m_shiftButtonInactiveImageView;
    UIImageView *m_shiftImageView;
    UIImageView *m_shiftLockedButtonImageView;
    UIKeyboardSpaceKeyView *m_spaceKeyView;
    BOOL m_usesAutoShift;
    BOOL m_usesKeyCharges;
}

+ (id)compositedSublayoutWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 compositeImagePaths:(id)arg2 keys:(const struct { struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_1_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_3_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_4_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_5_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_5_1_2; } x5; id x6; id x7; NSUInteger x8; NSUInteger x9; NSUInteger x10; id x11; }*)arg3 keysCount:(NSUInteger)arg4;
+ (id)sublayoutWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 imagePaths:(id)arg2 keys:(const struct { struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_1_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_3_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_4_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_5_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_5_1_2; } x5; id x6; id x7; NSUInteger x8; NSUInteger x9; NSUInteger x10; id x11; }*)arg3 keysCount:(NSUInteger)arg4;

- (void)activateInternationalKey;
- (void)addExtraImageView:(id)arg1;
- (void)addInternationalKeyIfNeeded:(id)arg1;
- (void)addPartialLayoutViewWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 imageName:(id)arg2 visibleOrigin:(struct CGPoint { float x1; float x2; })arg3;
- (void)addReplacementImageView:(id)arg1 inputMode:(id)arg2 shift:(BOOL)arg3;
- (void)addReplacementKeyboardKey:(struct { struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_1_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_3_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_4_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_5_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_5_1_2; } x5; id x6; id x7; NSUInteger x8; NSUInteger x9; NSUInteger x10; id x11; }*)arg1 forKey:(id)arg2;
- (void)addReturnKeyViewIfNeeded:(id)arg1;
- (void)addReturnKeyViewIfNeeded;
- (void)addSpaceKeyViewIfNeeded:(id)arg1;
- (void)addSpaceKeyViewIfNeeded;
- (void)bringKeySubviewsToFront;
- (id)compositeImageForKey:(id)arg1;
- (id)createReturnKeyViewWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 orientation:(NSInteger)arg2 style:(NSInteger)arg3;
- (id)createSpaceKeyViewWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 orientation:(NSInteger)arg2 style:(NSInteger)arg3;
- (void)deactivateInternationalKey;
- (void)dealloc;
- (BOOL)hitInternationalKey:(struct CGPoint { float x1; float x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 compositeImagePaths:(id)arg2 keys:(const struct { struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_1_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_3_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_4_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_5_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_5_1_2; } x5; id x6; id x7; NSUInteger x8; NSUInteger x9; NSUInteger x10; id x11; }*)arg3 keysCount:(NSUInteger)arg4;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 imagePaths:(id)arg2 keys:(const struct { struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_1_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_3_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_4_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_5_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_5_1_2; } x5; id x6; id x7; NSUInteger x8; NSUInteger x9; NSUInteger x10; id x11; }*)arg3 keysCount:(NSUInteger)arg4;
- (id)internationalImageName:(NSInteger)arg1 forKeyboard:(id)arg2 orientation:(NSInteger)arg3;
- (BOOL)internationalKeyIsActivated;
- (BOOL)isShiftKeyPlaneChooser;
- (void)registerKeyAreaZephyr:(struct CGPoint { float x1; float x2; })arg1 keyRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 keyCode:(NSInteger)arg3 keyString:(id)arg4 keyShiftString:(id)arg5;
- (void)registerKeyCentroids;
- (id)scriptingInfoWithChildren;
- (void)setAutoShiftButtonImage:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)setCompositeImage:(id)arg1 forKey:(id)arg2;
- (void)setDeleteActiveButtonImage:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)setDeleteButtonImage:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)setIsShiftKeyPlaneChooser:(BOOL)arg1;
- (void)setRegistersKeyCentroids:(BOOL)arg1;
- (void)setReturnKeyView:(id)arg1;
- (void)setShiftButtonImage:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)setShiftInactiveButtonImage:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)setShiftLockedButtonImage:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)setSpaceKeyView:(id)arg1;
- (void)setUsesAutoShift:(BOOL)arg1;
- (void)setUsesKeyCharges:(BOOL)arg1;
- (BOOL)usesAutoShift;
- (BOOL)usesKeyCharges;

@end
