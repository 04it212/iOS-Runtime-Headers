/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSMutableArray, UIKBAttributeList, NSString, NSArray;

@interface UIKBKeyplane : NSObject <NSCoding> {
    UIKBAttributeList *m_attributes;
    NSMutableArray *m_keylayouts;
    NSArray *m_keys;
    NSString *m_name;
    NSMutableArray *m_supportedTypes;
}

@property(copy) UIKBAttributeList *attributes;
@property(retain) NSArray *keylayouts;
@property(readonly) NSArray *keys;
@property(readonly) NSArray *keysOrderedByPosition;
@property(retain) NSString *name;
@property(copy) NSArray *supportedTypes;

+ (id)keyplane;

- (id)alternateKeyplaneName;
- (id)attributes;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (BOOL)isShiftKeyPlaneChooser;
- (BOOL)isShiftKeyplane;
- (id)keylayoutWithName:(id)arg1;
- (id)keylayouts;
- (id)keys;
- (id)keysOrderedByPosition;
- (void)layoutInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)looksLike:(id)arg1;
- (BOOL)looksLikeShiftAlternate;
- (id)name;
- (void)setAttributes:(id)arg1;
- (void)setKeylayouts:(id)arg1;
- (void)setName:(id)arg1;
- (void)setSupportedTypes:(id)arg1;
- (id)shiftAlternateKeyplaneName;
- (BOOL)shouldSkipCandidateSelection;
- (id)supportedTypes;
- (BOOL)supportsType:(NSInteger)arg1;
- (BOOL)usesAdaptiveKeys;
- (BOOL)usesAutoShift;

@end
