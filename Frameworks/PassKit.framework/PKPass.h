/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PassKit.framework/PassKit
 */

@class NSArray, NSData, NSDate, NSSet, NSString, NSURL, UIImage, WLBarcode, WLCardContent, WLCardDisplayProfile, WLCardImages, WLImage;

@interface PKPass : NSObject <NSCopying, NSSecureCoding> {
    NSString *_authenticationToken;
    WLCardContent *_content;
    WLCardDisplayProfile *_displayProfile;
    NSDate *_expirationDate;
    WLCardImages *_images[4];
    NSDate *_ingestedDate;
    BOOL _isPreIngested;
    NSString *_localizedDescription;
    NSSet *_locations;
    NSData *_manifestHash;
    NSDate *_modifiedDate;
    NSString *_organizationName;
    WLImage *_partialFrontFaceImagePlaceholder;
    NSString *_passTypeIdentifier;
    NSDate *_relevantDate;
    NSString *_serialNumber;
    int _settings;
    NSString *_teamID;
    NSString *_uniqueID;
    NSURL *_webServiceURL;
}

@property(copy) NSDate * activationDate;
@property(copy) NSString * authenticationToken;
@property(readonly) WLImage * backFaceImage;
@property(readonly) NSArray * backFieldBuckets;
@property(readonly) WLBarcode * barcode;
@property(copy) NSString * bundleID;
@property(readonly) int cardTemplate;
@property(copy) WLCardDisplayProfile * displayProfile;
@property(copy) NSDate * expirationDate;
@property(readonly) WLImage * footerImage;
@property(readonly) WLImage * frontFaceImage;
@property(readonly) NSArray * frontFieldBuckets;
@property(readonly) UIImage * icon;
@property(readonly) WLImage * iconImage;
@property(copy) NSString * identifier;
@property(retain) NSDate * ingestedDate;
@property(copy) NSString * institution;
@property BOOL isPreIngested;
@property(copy) NSString * localizedDescription;
@property(readonly) NSString * localizedName;
@property(copy) NSSet * locations;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } logoRect;
@property(readonly) NSString * logoText;
@property(readonly) NSString * lowercaseTemplateDescription;
@property(retain) NSData * manifestHash;
@property(retain) NSDate * modifiedDate;
@property(copy) NSString * name;
@property(copy) NSString * organizationName;
@property(readonly) WLImage * partialFrontFaceImage;
@property(readonly) WLImage * partialFrontFaceImagePlaceholder;
@property(copy) NSString * passTypeIdentifier;
@property(readonly) NSURL * passURL;
@property(readonly) NSString * pluralTemplateDescription;
@property(copy) NSURL * pushURL;
@property(copy) NSDate * relevantDate;
@property(copy) NSString * serialNumber;
@property int settings;
@property(readonly) NSArray * storeIdentifiers;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } stripRect;
@property(copy) NSString * teamID;
@property(readonly) NSString * templateDescription;
@property(readonly) struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } thumbnailRect;
@property(readonly) int transitType;
@property(copy) NSString * uniqueID;
@property(copy) NSURL * webServiceURL;

+ (BOOL)supportsSecureCoding;

- (id)_changeMessageForFieldKey:(id)arg1;
- (id)_contentLoadingIfNecessary;
- (id)_imageSetLoadingIfNecessary:(int)arg1;
- (void)_setAllowRelevantPasses:(BOOL)arg1;
- (id)activationDate;
- (id)allImageSetsLoadingIfNecessary;
- (id)authenticationToken;
- (id)backFaceImage;
- (id)backFieldBuckets;
- (id)barcode;
- (id)bundleID;
- (int)cardTemplate;
- (BOOL)contentIsLoaded;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)displayProfile;
- (void)encodeWithCoder:(id)arg1;
- (id)expirationDate;
- (void)fetchContentWithCompletion:(id)arg1;
- (void)fetchImageSet:(int)arg1 withCompletion:(id)arg2;
- (void)flushCachedImageSets;
- (id)footerImage;
- (id)frontFaceImage;
- (id)frontFieldBuckets;
- (BOOL)hasTimeOrLocationRelevancyInfo;
- (id)icon;
- (id)iconImage;
- (id)identifier;
- (BOOL)imageSetIsLoaded:(int)arg1;
- (id)ingestedDate;
- (id)initWithBundleArchiveData:(id)arg1;
- (id)initWithBundleArchiveURL:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithData:(id)arg1 error:(id*)arg2;
- (id)institution;
- (BOOL)isPreIngested;
- (BOOL)isUpdatable;
- (void)loadContentAsyncWithCompletion:(id)arg1;
- (void)loadContentSync;
- (void)loadImageSetAsync:(int)arg1 preheat:(BOOL)arg2 withCompletion:(id)arg3;
- (void)loadImageSetSync:(int)arg1 preheat:(BOOL)arg2;
- (id)localizedDescription;
- (id)localizedName;
- (id)localizedValueForFieldKey:(id)arg1;
- (id)locations;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })logoRect;
- (id)logoText;
- (id)lowercaseTemplateDescription;
- (id)mailAttachmentIcon;
- (id)manifestHash;
- (id)modifiedDate;
- (id)name;
- (id)organizationName;
- (id)partialFrontFaceImage;
- (id)partialFrontFaceImagePlaceholder;
- (id)passTypeIdentifier;
- (id)passURL;
- (id)pluralTemplateDescription;
- (id)pushURL;
- (id)relevantDate;
- (id)serialNumber;
- (void)setActivationDate:(id)arg1;
- (void)setAuthenticationToken:(id)arg1;
- (void)setBundleID:(id)arg1;
- (void)setDisplayProfile:(id)arg1;
- (void)setExpirationDate:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIngestedDate:(id)arg1;
- (void)setInstitution:(id)arg1;
- (void)setIsPreIngested:(BOOL)arg1;
- (void)setLocalizedDescription:(id)arg1;
- (void)setLocations:(id)arg1;
- (void)setManifestHash:(id)arg1;
- (void)setModifiedDate:(id)arg1;
- (void)setName:(id)arg1;
- (void)setOrganizationName:(id)arg1;
- (void)setPassTypeIdentifier:(id)arg1;
- (void)setPushURL:(id)arg1;
- (void)setRelevantDate:(id)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setSettings:(int)arg1;
- (void)setTeamID:(id)arg1;
- (void)setUniqueID:(id)arg1;
- (void)setWebServiceURL:(id)arg1;
- (int)settings;
- (id)storeIdentifiers;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })stripRect;
- (id)teamID;
- (id)templateDescription;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })thumbnailRect;
- (int)transitType;
- (id)uniqueID;
- (id)webServiceURL;

@end
