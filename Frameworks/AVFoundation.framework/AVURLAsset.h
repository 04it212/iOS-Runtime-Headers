/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@class NSURL, NSString, AVURLAssetInternal, AVAssetCache, AVAssetResourceLoader;

@interface AVURLAsset : AVAsset {
    AVURLAssetInternal *_asset;
}

@property(readonly) NSURL * URL;
@property(readonly) AVAssetCache * assetCache;
@property(readonly) NSString * cacheKey;
@property(readonly) AVAssetResourceLoader * resourceLoader;
@property(readonly) BOOL shouldMatchDataInCacheByURLPathComponentOnly;
@property(readonly) BOOL shouldMatchDataInCacheByURLWithoutQueryComponent;

+ (id)URLAssetWithURL:(id)arg1 options:(id)arg2;
+ (id)_UTTypes;
+ (id)_avfValidationPlist;
+ (id)_figMIMETypes;
+ (id)audiovisualMIMETypes;
+ (id)audiovisualTypes;
+ (BOOL)isPlayableExtendedMIMEType:(id)arg1;

- (id)SHA1Digest;
- (id)URL;
- (id)_absoluteURL;
- (unsigned int)_addChapterMetadataItem:(id)arg1 timeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg2 toChapters:(id)arg3 fromIndex:(unsigned int)arg4;
- (void)_addFigAssetNotifications;
- (id)_assetInspector;
- (id)_assetInspectorLoader;
- (id)_chapterGroupInfo;
- (id)_errorForFigNotificationPayload:(struct __CFDictionary { }*)arg1 key:(struct __CFString { }*)arg2;
- (void)_finishLoadingURLRequestWithResponseProperties:(id)arg1 context:(id)arg2;
- (struct OpaqueFigFormatReader { }*)_formatReader;
- (void)_handleURLRequest:(id)arg1;
- (void)_removeFigAssetNotifications;
- (void)_setAssetInspectorLoader:(id)arg1;
- (id)_tracks;
- (void)_tracksDidChange;
- (id)assetCache;
- (id)availableChapterLocales;
- (id)cacheKey;
- (void)cancelLoading;
- (id)chapterMetadataGroupsBestMatchingPreferredLanguages:(id)arg1;
- (id)chapterMetadataGroupsWithTitleLocale:(id)arg1 containingItemsWithCommonKeys:(id)arg2;
- (void)dealloc;
- (id)description;
- (id)downloadDestinationURL;
- (unsigned long long)downloadToken;
- (void)finalize;
- (id)init;
- (id)initWithURL:(id)arg1 options:(id)arg2;
- (id)lyrics;
- (id)requestForStreamingKeyForContext:(id)arg1 appID:(id)arg2 assetID:(id)arg3 options:(id)arg4 errorOut:(id*)arg5;
- (id)resolvedURL;
- (id)resourceLoader;
- (BOOL)shouldMatchDataInCacheByURLPathComponentOnly;
- (BOOL)shouldMatchDataInCacheByURLWithoutQueryComponent;
- (id)tracks;

@end
