/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@class NSMutableArray, AVWeakReference;

@interface AVFigAssetTrackInspector : AVAssetTrackInspector  {
    struct OpaqueFigAssetTrack { } *_figAssetTrack;
    struct OpaqueFigSimpleMutex { } *_loadingMutex;
    struct OpaqueFigSemaphore { } *_playabilityValidationSemaphore;
    struct dispatch_queue_s { } *_completionHandlerQueue;
    int _playableStatus;
    int _playableResult;
    BOOL _playable;
    NSMutableArray *_loadingBatches;
    AVWeakReference *_weakReferenceToAsset;
}


- (int)layer;
- (void)finalize;
- (BOOL)isEnabled;
- (void)_addFigAssetTrackNotifications;
- (void)_removeFigAssetTrackNotifications;
- (int)_loadStatusForFigAssetTrackProperty:(id)arg1 returningError:(int*)arg2;
- (struct OpaqueFigAssetTrack { }*)_figAssetTrack;
- (struct OpaqueFigSimpleMutex { }*)_loadingMutex;
- (id)_loadingBatches;
- (struct OpaqueFigSemaphore { }*)_playabilityValidationSemaphore;
- (void)setIsPlayable:(BOOL)arg1 result:(long)arg2;
- (struct dispatch_queue_s { }*)_completionHandlerQueue;
- (void*)_valueAsCFTypeForProperty:(struct __CFString { }*)arg1;
- (id)_initWithAsset:(id)arg1 trackID:(int)arg2 trackIndex:(long)arg3;
- (id)formatDescriptions;
- (BOOL)isSelfContained;
- (long long)totalSampleDataLength;
- (BOOL)isExcludedFromAutoselectionInTrackGroup;
- (float)estimatedDataRate;
- (id)languageCode;
- (id)extendedLanguageTag;
- (float)nominalFrameRate;
- (id)segments;
- (id)segmentForTrackTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)asset;
- (float)preferredVolume;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })preferredTransform;
- (struct CGSize { float x1; float x2; })naturalSize;
- (int)naturalTimeScale;
- (id)mediaType;
- (void)_ensureAllDependenciesOfKeyAreLoaded:(id)arg1;
- (int)trackID;
- (id)commonMetadata;
- (id)availableMetadataFormats;
- (id)metadataForFormat:(id)arg1;
- (BOOL)isPlayable;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })timeRange;
- (int)statusOfValueForKey:(id)arg1 error:(id*)arg2;
- (void)loadValuesAsynchronouslyForKeys:(id)arg1 completionHandler:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (void)dealloc;

@end
