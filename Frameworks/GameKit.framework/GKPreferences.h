/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/GameKit.framework/GameKit
 */

@class NSString;

@interface GKPreferences : NSObject {
    BOOL _HTTPShouldUsePipelining;
    BOOL _isStoreDemoModeEnabled;
    unsigned int _maxDefaultPlayersHosted;
    unsigned int _maxDefaultPlayersP2P;
    unsigned int _maxDefaultPlayersTurnBased;
}

@property BOOL HTTPShouldUsePipelining;
@property(getter=isAddingFriendsRestricted,readonly) BOOL addingFriendsRestricted;
@property BOOL allowUnsignedBag;
@property(getter=isAppInstallationRestricted,readonly) BOOL appInstallationRestricted;
@property int environment;
@property BOOL forceRelay;
@property double garbageCollectionInterval;
@property BOOL ignoreSandbox;
@property(readonly) BOOL isStoreDemoModeEnabled;
@property unsigned long logFilter;
@property unsigned int maxDefaultPlayersHosted;
@property unsigned int maxDefaultPlayersP2P;
@property unsigned int maxDefaultPlayersTurnBased;
@property unsigned int maxPlayersHosted;
@property unsigned int maxPlayersP2P;
@property unsigned int maxPlayersTurnBased;
@property double minimumCacheTTL;
@property(getter=isMultiplayerGamingRestricted,readonly) BOOL multiplayerGamingRestricted;
@property BOOL notificationAlertsEnabled;
@property BOOL notificationBadgesEnabled;
@property(getter=isNotificationCenterEnabled) BOOL notificationCenterEnabled;
@property BOOL notificationSoundsEnabled;
@property unsigned int operationRetryCount;
@property double operationRetryDelay;
@property double operationTimeout;
@property int pipeliningSetting;
@property BOOL preemptiveRelay;
@property int pushEnvironment;
@property BOOL showPopularityInsteadOfRating;
@property BOOL showRating;
@property(retain) NSString * storeBagURL;
@property double terminationInterval;
@property BOOL useInternalHeader;
@property BOOL useTestProtocols;
@property BOOL verboseLogging;

+ (id)hostNameForEnvironment:(int)arg1;
+ (BOOL)isSystemWideNotificationsEnabled;
+ (id)sharedPreferences;

- (BOOL)HTTPShouldUsePipelining;
- (BOOL)allowUnsignedBag;
- (int)environment;
- (BOOL)forceRelay;
- (double)garbageCollectionInterval;
- (BOOL)ignoreSandbox;
- (id)init;
- (BOOL)isAddingFriendsRestricted;
- (BOOL)isAppInstallationRestricted;
- (BOOL)isMultiplayerGamingRestricted;
- (BOOL)isNotificationCenterEnabled;
- (BOOL)isStoreDemoModeEnabled;
- (unsigned long)logFilter;
- (unsigned int)maxDefaultPlayersHosted;
- (unsigned int)maxDefaultPlayersP2P;
- (unsigned int)maxDefaultPlayersTurnBased;
- (unsigned int)maxPlayersHosted;
- (unsigned int)maxPlayersP2P;
- (unsigned int)maxPlayersTurnBased;
- (double)minimumCacheTTL;
- (BOOL)notificationAlertsEnabled;
- (BOOL)notificationBadgesEnabled;
- (BOOL)notificationSoundsEnabled;
- (unsigned int)operationRetryCount;
- (double)operationRetryDelay;
- (double)operationTimeout;
- (int)pipeliningSetting;
- (BOOL)preemptiveRelay;
- (int)pushEnvironment;
- (void)setAllowUnsignedBag:(BOOL)arg1;
- (void)setEnvironment:(int)arg1;
- (void)setForceRelay:(BOOL)arg1;
- (void)setGarbageCollectionInterval:(double)arg1;
- (void)setHTTPShouldUsePipelining:(BOOL)arg1;
- (void)setIgnoreSandbox:(BOOL)arg1;
- (void)setLogFilter:(unsigned long)arg1;
- (void)setMaxDefaultPlayersHosted:(unsigned int)arg1;
- (void)setMaxDefaultPlayersP2P:(unsigned int)arg1;
- (void)setMaxDefaultPlayersTurnBased:(unsigned int)arg1;
- (void)setMaxPlayersHosted:(unsigned int)arg1;
- (void)setMaxPlayersP2P:(unsigned int)arg1;
- (void)setMaxPlayersTurnBased:(unsigned int)arg1;
- (void)setMinimumCacheTTL:(double)arg1;
- (void)setNotificationAlertsEnabled:(BOOL)arg1;
- (void)setNotificationBadgesEnabled:(BOOL)arg1;
- (void)setNotificationCenterEnabled:(BOOL)arg1;
- (void)setNotificationSoundsEnabled:(BOOL)arg1;
- (void)setOperationRetryCount:(unsigned int)arg1;
- (void)setOperationRetryDelay:(double)arg1;
- (void)setOperationTimeout:(double)arg1;
- (void)setPipeliningSetting:(int)arg1;
- (void)setPreemptiveRelay:(BOOL)arg1;
- (void)setPushEnvironment:(int)arg1;
- (void)setShowPopularityInsteadOfRating:(BOOL)arg1;
- (void)setShowRating:(BOOL)arg1;
- (void)setStoreBagURL:(id)arg1;
- (void)setTerminationInterval:(double)arg1;
- (void)setUseInternalHeader:(BOOL)arg1;
- (void)setUseTestProtocols:(BOOL)arg1;
- (void)setVerboseLogging:(BOOL)arg1;
- (BOOL)showPopularityInsteadOfRating;
- (BOOL)showRating;
- (id)storeBagURL;
- (double)terminationInterval;
- (BOOL)useInternalHeader;
- (BOOL)useTestProtocols;
- (BOOL)verboseLogging;

@end
