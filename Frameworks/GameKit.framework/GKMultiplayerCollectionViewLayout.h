/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/GameKit.framework/GameKit
 */

@class NSArray, GKMultiplayerCollectionViewLayout, UICollectionViewLayoutAttributes;

@interface GKMultiplayerCollectionViewLayout : UICollectionViewLayout <NSCopying> {
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _backgroundInsets;
    UICollectionViewLayoutAttributes *_backgroundAttributes;
    float _titleOffset;
    struct CGSize { 
        float width; 
        float height; 
    } _participantGap;
    int _status;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _insets;
    float _scrollNudge;
    UICollectionViewLayoutAttributes *_inviteButtonAttributes;
    struct CGSize { 
        float width; 
        float height; 
    } _participantSize;
    struct CGSize { 
        float width; 
        float height; 
    } _buttonGap;
    UICollectionViewLayoutAttributes *_participantRangeAttributes;
    float _participantsOffset;
    struct CGSize { 
        float width; 
        float height; 
    } _buttonSize;
    GKMultiplayerCollectionViewLayout *_oldLayout;
    float _viewWidth;
    float _infoOffset;
    UICollectionViewLayoutAttributes *_playNowButtonAttributes;
    struct CGSize { 
        float width; 
        float height; 
    } _statusSize;
    struct CGSize { 
        float width; 
        float height; 
    } _infoSize;
    NSArray *_layoutData;
    float _buttonOrStatusOffset;
    struct CGSize { 
        float width; 
        float height; 
    } _contentSize;
    UICollectionViewLayoutAttributes *_infoAttributes;
    BOOL _shouldShowInfoLabel;
    UICollectionViewLayoutAttributes *_statusAttributes;
}

@property int status;
@property(retain) UICollectionViewLayoutAttributes * backgroundAttributes;
@property(retain) UICollectionViewLayoutAttributes * participantRangeAttributes;
@property(retain) UICollectionViewLayoutAttributes * inviteButtonAttributes;
@property(retain) UICollectionViewLayoutAttributes * playNowButtonAttributes;
@property(retain) UICollectionViewLayoutAttributes * statusAttributes;
@property(retain) UICollectionViewLayoutAttributes * infoAttributes;
@property(retain) NSArray * layoutData;
@property(retain) GKMultiplayerCollectionViewLayout * oldLayout;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } insets;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } backgroundInsets;
@property float titleOffset;
@property float participantsOffset;
@property struct CGSize { float x1; float x2; } participantGap;
@property struct CGSize { float x1; float x2; } participantSize;
@property float buttonOrStatusOffset;
@property struct CGSize { float x1; float x2; } buttonSize;
@property struct CGSize { float x1; float x2; } buttonGap;
@property struct CGSize { float x1; float x2; } statusSize;
@property BOOL shouldShowInfoLabel;
@property float infoOffset;
@property struct CGSize { float x1; float x2; } infoSize;
@property float scrollNudge;
@property struct CGSize { float x1; float x2; } contentSize;
@property float viewWidth;


- (void)setShouldShowInfoLabel:(BOOL)arg1;
- (BOOL)shouldShowInfoLabel;
- (void)setButtonOrStatusOffset:(float)arg1;
- (float)buttonOrStatusOffset;
- (void)setInfoSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })infoSize;
- (void)setStatusSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })statusSize;
- (void)setInfoOffset:(float)arg1;
- (float)infoOffset;
- (void)setViewWidth:(float)arg1;
- (float)viewWidth;
- (void)setButtonSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })buttonSize;
- (void)setParticipantsOffset:(float)arg1;
- (float)participantsOffset;
- (void)setButtonGap:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })buttonGap;
- (void)setParticipantSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })participantSize;
- (void)setScrollNudge:(float)arg1;
- (float)scrollNudge;
- (void)setInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })insets;
- (void)setParticipantGap:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })participantGap;
- (id)oldLayout;
- (void)setOldLayout:(id)arg1;
- (int)numberOfColumnForWidth:(float)arg1;
- (void)prepareMetrics;
- (void)setInfoAttributes:(id)arg1;
- (id)infoAttributes;
- (void)setStatusAttributes:(id)arg1;
- (id)statusAttributes;
- (void)setPlayNowButtonAttributes:(id)arg1;
- (id)playNowButtonAttributes;
- (void)setInviteButtonAttributes:(id)arg1;
- (id)inviteButtonAttributes;
- (void)setParticipantRangeAttributes:(id)arg1;
- (id)participantRangeAttributes;
- (void)setBackgroundAttributes:(id)arg1;
- (id)backgroundAttributes;
- (void)setLayoutData:(id)arg1;
- (id)layoutData;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })backgroundInsets;
- (void)setBackgroundInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (void)setStatus:(int)arg1;
- (int)status;
- (void)prepareLayout;
- (struct CGSize { float x1; float x2; })collectionViewContentSize;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (void)finalizeAnimatedBoundsChange;
- (id)initialLayoutAttributesForAppearingSupplementaryElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)arg1;
- (id)finalLayoutAttributesForDisappearingSupplementaryElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)arg1;
- (void)prepareForAnimatedBoundsChange:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)shouldInvalidateLayoutForBoundsChange:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (void)setTitleOffset:(float)arg1;
- (float)titleOffset;
- (void)setContentSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })contentSize;

@end
