/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/GameKit.framework/GameKit
 */

@class GKUITheme, GKScore, GKPlayer;

@interface GKLeaderboardCellContents : UIView <GKTableViewCellContents> {
    GKScore *_score;
    GKPlayer *_player;
    unsigned int _totalScores;
    GKUITheme *_theme;
    float _rankWidth;
    int _disclosureStyle;
}

@property(readonly) float rankAvailableWidth;
@property int disclosureStyle;
@property(readonly) float contentsMargin;
@property float rankWidth;
@property(retain) GKUITheme * theme;
@property unsigned int totalScores;
@property(retain) GKPlayer * player;
@property(retain) GKScore * score;

+ (void)_initializeSafeCategory;

- (float)preferredHeightForOrientation:(int)arg1;
- (unsigned int)totalScores;
- (float)rankAvailableWidth;
- (int)digits;
- (int)fontSizeForRank;
- (float)rankWidth;
- (void)setRankWidth:(float)arg1;
- (void)setTotalScores:(unsigned int)arg1;
- (id)score;
- (void)setPlayer:(id)arg1;
- (void)setScore:(id)arg1;
- (id)player;
- (void)setDisclosureStyle:(int)arg1;
- (int)disclosureStyle;
- (void)prepareForReuse;
- (id)init;
- (void)dealloc;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)theme;
- (void)setTheme:(id)arg1;
- (id)accessibilityLabel;
- (BOOL)isAccessibilityElement;

@end
