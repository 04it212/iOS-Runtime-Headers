/* Generated by RuntimeBrowser.
   Image: /System/Library/Frameworks/GameKit.framework/GameKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class GKInviteButton, UIActivityIndicatorView, NSString, GKTouchInterceptView;

@interface GKFriendPickerCellContents : GKMultilineCellContentView <GKMultilineLayoutProtocol> {
    int _inviteStatus;
    BOOL _showsSelectionIcon;
    BOOL _showsInviteStatus;
    BOOL _showsInviteButton;
    BOOL _showsUninviteButton;
    BOOL _padsForInvisibleSelectionIcon;
    BOOL _enabled;
    NSString *_realName;
    BOOL _showingActivityIndicator;
    UIActivityIndicatorView *_activityView;
    struct CGSize { 
        float width; 
        float height; 
    } _firstLineOffset;
    GKInviteButton *_inviteButton;
    BOOL _showingInviteButton;
    BOOL _showingConfirmButton;
    unsigned int _index;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _inviteButtonHandler;


  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _uninviteButtonHandler;

    GKTouchInterceptView *_touchInterceptView;
}

@property(retain) GKTouchInterceptView * touchInterceptView;
@property(copy) id uninviteButtonHandler;
@property(copy) id inviteButtonHandler;
@property unsigned int index;
@property(readonly) GKInviteButton * inviteButton;
@property(readonly) BOOL showingUninviteButton;
@property(readonly) BOOL showingInviteButton;
@property(retain) NSString * realName;
@property BOOL enabled;
@property BOOL padsForInvisibleSelectionIcon;
@property BOOL showsUninviteButton;
@property BOOL showsInviteButton;
@property BOOL showsInviteStatus;
@property BOOL showsSelectionIcon;
@property int inviteStatus;

+ (void)_initializeSafeCategory;

- (BOOL)padsForInvisibleSelectionIcon;
- (id)realName;
- (BOOL)showingInviteButton;
- (id)inviteButton;
- (id)touchInterceptView;
- (id)initWithNumberOfLines:(unsigned int)arg1;
- (void)setShowingActivityIndicator:(BOOL)arg1;
- (void)createInviteMatchConfirmButton;
- (BOOL)showingUninviteButton;
- (BOOL)hasStatusForInviteButton;
- (BOOL)hasStatusForUninviteButton;
- (void)updateInviteButton;
- (void)updateInviteButtonAnimated:(BOOL)arg1;
- (void)setConfirmButtonHidden:(BOOL)arg1;
- (void)inviteButtonPushed;
- (void)layoutInviteButtonAnimated:(BOOL)arg1;
- (void)layoutInviteButton;
- (void)drawLineIndex:(unsigned int)arg1 inRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg2 highlighted:(BOOL)arg3;
- (void)setTouchesIntercepted:(BOOL)arg1;
- (void)setTouchInterceptView:(id)arg1;
- (id)uninviteButtonHandler;
- (void)setUninviteButtonHandler:(id)arg1;
- (id)inviteButtonHandler;
- (void)setRealName:(id)arg1;
- (void)setPadsForInvisibleSelectionIcon:(BOOL)arg1;
- (BOOL)showsUninviteButton;
- (BOOL)showsInviteButton;
- (BOOL)showsInviteStatus;
- (void)setShowsInviteStatus:(BOOL)arg1;
- (BOOL)showsSelectionIcon;
- (void)setShowsSelectionIcon:(BOOL)arg1;
- (void)setShowsUninviteButton:(BOOL)arg1;
- (void)setShowsInviteButton:(BOOL)arg1;
- (void)setInviteButtonHandler:(id)arg1;
- (void)setInviteStatus:(int)arg1;
- (int)inviteStatus;
- (unsigned long long)accessibilityTraits;
- (void)setEnabled:(BOOL)arg1;
- (unsigned int)index;
- (BOOL)enabled;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)removeFromSuperview;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (void)dealloc;
- (void)setTheme:(id)arg1;
- (void)setIndex:(unsigned int)arg1;
- (id)accessibilityLabel;
- (int)accessibilityElementCount;
- (BOOL)isAccessibilityElement;

@end
